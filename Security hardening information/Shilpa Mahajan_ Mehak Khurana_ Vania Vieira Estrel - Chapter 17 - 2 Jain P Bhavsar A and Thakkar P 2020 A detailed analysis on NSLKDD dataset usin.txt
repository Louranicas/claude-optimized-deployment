# Security Chapter Extract
Book: Shilpa Mahajan_ Mehak Khurana_ Vania Vieira Estrela - Applying Artificial Intelligence in Cybersecurity Analytics and Cyber Threat Detection (2024, WILEY) - libgen.li
Chapter: 17 - 2 Jain, P., Bhavsar, A., and Thakkar, P. (2020). A detailed analysis on NSL‐KDD dataset using various machine learning techniques for intrusion detection. International Journal of Engineering Research & Technology (IJERT) ISSN: 2278‐0181 2 (12).
3 Kumar, S.R., Sivakumar, A.I., and Raju, K.S. (2020). Analysis on intrusion detection system using machine learning techniques. International Journal of Engineering Research and Technology 9 (3): 168–176.
4 Nain, R.S., Karuppiah, M., and Mahapatra, R. (2020). Enhancement of intrusion detection systems using machine learning. International Journal of Engineering Research and Technology 12 (1): 315–321.
5 Saranya, T., Sridevi, S., Deisy, C. et al. (2020). Performance analysis of machine learning algorithms in intrusion detection system. Procedia Computer Science 171: 1251–1260.
6 Sharma, N. and Gupta, S. (2021). Enhancement of intrusion detection system using machine learning techniques. International Journal of Advanced Science and Technology 36 (3): 1466–1475.
7 Meliboev, A., Alikhanov, J., and Kim, W. (2022). Performance evaluation of deep learning based network intrusion detection system across multiple balanced and imbalanced datasets. Electronics 11: 515.
8 Hadi, A.A. (2018). Performance analysis of Big Data intrusion detection system over random forest algorithm. International Journal of Applied Engineering Research, ISSN 0973‐4562 13 (2): 1520–1527. Research India Publications.
9 Zhang, H., Ge, L., Zhang, G. et al. (2023). A two‐stage intrusion detection method based on light gradient boosting machine and autoencoder.  Mathematical Biosciences and Engineering 20 (4): 6966–6992. https://doi.org/10.3934/mbe.2023301.
10 Jha, J. and Ragha, L. (2013). Intrusion detection system using support vector machine. International Journal of Applied Information Systems (IJAIS) ISSN: 2249‐0868.
11 Liao, Y. and Vemuri, R. (2002). Use of K‐nearest neighbor classifier for intrusion detection. Computers & Security 21: 439–448. https://doi.org/10.1016/S0167-4048(02)00514-X.
12 Ingre, Bhupendra & Yadav, Anamika. (2015). “Performance Analysis of NSL‐KDD Dataset Using ANN. 92‐96”. https://doi.org/10.1109/SPACES.2015.7058223.
13 Sabha, A. and Sharma, L.S. (2020). Performance analysis of different machine learning techniques for anomaly‐based intrusion detection. International Research Journal of Engineering and Technology (IRJET) 07 (09): e‐ISSN: 2395‐0056 p‐ISSN: 2395‐0072.
14 Kok, S.H., Abdullah, A., Jhanjhi, N.Z., and Supramaniam, M. (2019). A review of intrusion detection system using machine learning approach. International Journal of Engineering Research and Technology, ISSN 0974‐3154 12 (1): 8–15. International Research Publication House.
15 Khurana, M. and Singh, H. (2018). Asymmetric optical image triple masking encryption based on gyrator and Fresnel tranforms to remove Silhouette problem. Periodical 9 (3): ISSN:2092‐6731.
16 Abedin, M.Z., Siddiquee, K.N.‐e.‐A., Bhuyan, M.S. et al. (2018). Performance analysis of anomaly based network intrusion detection systems. In: IEEE 43rd Conference on Local Computer Networks Workshops (LCN Workshops), Chicago, IL, USA, 2018, 1–7. https://doi.org/10.1109/LCNW.2018.8628599.
17 Jadhav, A.D. and Pellakuri, V. (2019). Performance analysis of machine learning techniques for intrusion detection system. In: 5th International Conference On Computing, Communication, Control And Automation (ICCUBEA), Pune, India, 2019, 1–9. https://doi.org/10.1109/ICCUBEA47591.2019.9128917.
18 Bingu, R. and Jothilakshmi, S. (2023). Design of intrusion detection system using ensemble learning technique in cloud computing environment. International Journal of Advanced Computer Science and Applications (IJACSA) 14 (5).
19 Kumar, E.A., Kaur, J., and Kaur, I. (2016). Intrusion detection system by machine learning review. International Journal of Advanced Research, Ideas, and Innovations in Technology https://doi.org/10.1007/978-81-322-2529-4_51, page‐1.
20 Shyla, Kumar, K., and Bhatnagar, V. Machine learning algorithms performance evaluation for intrusion detection. Journal of Information Technology Management 13 (1): 42–61.
Security Relevance Score: 8
Word Count: 3080
Extracted: 2025-06-13 23:40:31

---

2 Jain, P., Bhavsar, A., and Thakkar, P. (2020). A detailed analysis on NSL‐KDD dataset using various machine learning techniques for intrusion detection. International Journal of Engineering Research & Technology (IJERT) ISSN: 2278‐0181 2 (12).
3 Kumar, S.R., Sivakumar, A.I., and Raju, K.S. (2020). Analysis on intrusion detection system using machine learning techniques. International Journal of Engineering Research and Technology 9 (3): 168–176.
4 Nain, R.S., Karuppiah, M., and Mahapatra, R. (2020). Enhancement of intrusion detection systems using machine learning. International Journal of Engineering Research and Technology 12 (1): 315–321.
5 Saranya, T., Sridevi, S., Deisy, C. et al. (2020). Performance analysis of machine learning algorithms in intrusion detection system. Procedia Computer Science 171: 1251–1260.
6 Sharma, N. and Gupta, S. (2021). Enhancement of intrusion detection system using machine learning techniques. International Journal of Advanced Science and Technology 36 (3): 1466–1475.
7 Meliboev, A., Alikhanov, J., and Kim, W. (2022). Performance evaluation of deep learning based network intrusion detection system across multiple balanced and imbalanced datasets. Electronics 11: 515.
8 Hadi, A.A. (2018). Performance analysis of Big Data intrusion detection system over random forest algorithm. International Journal of Applied Engineering Research, ISSN 0973‐4562 13 (2): 1520–1527. Research India Publications.
9 Zhang, H., Ge, L., Zhang, G. et al. (2023). A two‐stage intrusion detection method based on light gradient boosting machine and autoencoder.  Mathematical Biosciences and Engineering 20 (4): 6966–6992. https://doi.org/10.3934/mbe.2023301.
10 Jha, J. and Ragha, L. (2013). Intrusion detection system using support vector machine. International Journal of Applied Information Systems (IJAIS) ISSN: 2249‐0868.
11 Liao, Y. and Vemuri, R. (2002). Use of K‐nearest neighbor classifier for intrusion detection. Computers & Security 21: 439–448. https://doi.org/10.1016/S0167-4048(02)00514-X.
12 Ingre, Bhupendra & Yadav, Anamika. (2015). “Performance Analysis of NSL‐KDD Dataset Using ANN. 92‐96”. https://doi.org/10.1109/SPACES.2015.7058223.
13 Sabha, A. and Sharma, L.S. (2020). Performance analysis of different machine learning techniques for anomaly‐based intrusion detection. International Research Journal of Engineering and Technology (IRJET) 07 (09): e‐ISSN: 2395‐0056 p‐ISSN: 2395‐0072.
14 Kok, S.H., Abdullah, A., Jhanjhi, N.Z., and Supramaniam, M. (2019). A review of intrusion detection system using machine learning approach. International Journal of Engineering Research and Technology, ISSN 0974‐3154 12 (1): 8–15. International Research Publication House.
15 Khurana, M. and Singh, H. (2018). Asymmetric optical image triple masking encryption based on gyrator and Fresnel tranforms to remove Silhouette problem. Periodical 9 (3): ISSN:2092‐6731.
16 Abedin, M.Z., Siddiquee, K.N.‐e.‐A., Bhuyan, M.S. et al. (2018). Performance analysis of anomaly based network intrusion detection systems. In: IEEE 43rd Conference on Local Computer Networks Workshops (LCN Workshops), Chicago, IL, USA, 2018, 1–7. https://doi.org/10.1109/LCNW.2018.8628599.
17 Jadhav, A.D. and Pellakuri, V. (2019). Performance analysis of machine learning techniques for intrusion detection system. In: 5th International Conference On Computing, Communication, Control And Automation (ICCUBEA), Pune, India, 2019, 1–9. https://doi.org/10.1109/ICCUBEA47591.2019.9128917.
18 Bingu, R. and Jothilakshmi, S. (2023). Design of intrusion detection system using ensemble learning technique in cloud computing environment. International Journal of Advanced Computer Science and Applications (IJACSA) 14 (5).
19 Kumar, E.A., Kaur, J., and Kaur, I. (2016). Intrusion detection system by machine learning review. International Journal of Advanced Research, Ideas, and Innovations in Technology https://doi.org/10.1007/978-81-322-2529-4_51, page‐1.
20 Shyla, Kumar, K., and Bhatnagar, V. Machine learning algorithms performance evaluation for intrusion detection. Journal of Information Technology Management 13 (1): 42–61.












9Spectral Pattern Learning Approach‐based Student Sentiment Analysis Using Dense‐net Multi Perception Neural Network in E‐learning Environment
Laishram Kirtibas Singh1 and R. Renuga Devi2
1Department of Computer Science, Vels Institute of Science, Technology and Advanced Studies (VISTAS), Chennai, India
2Department of Computer Science and Applications (MCA), SRM Institute of Science and Technology, Ramapuram, Chennai, India


9.1 Introduction
E‐learning has emerged as one of the most effective training methods. In particular, collaborative learning is considered a great way to support and understand students and their learning problems. Using the e‐learning platform and its collaborative tools, students can interact with other students and share questions on specific topics.
Learning plays an important role. Lifelong learning aims to enhance people’s sense of achievement throughout life and on a personal and social level. In a learning community, time sustaining is an essential need for survival and sustaining change. By integrating into the process of creating new technological tools, an impressive tool for lifelong learning is provided: e‐learning. For nearly 20 years, the phenomenon of “e‐learning” has pervaded the distance learning landscape. The Internet and its services allow you to easily integrate user support and monitoring programs into the educational and technical aspects of dynamic learning.
Sentiment analysis in particular, also known as sentiment classification or sentiment mining, helps humans make decisions by analyzing large amounts of opinion data to effectively understand and interpret opinions and sentiments. It is a computational method by design. For example, in business, sentiment analysis helps companies analyze customer feedback to improve their products, provide better customer service, and discover new business opportunities. In the governmental land, sentiment analysis can predict changes in public perception of election candidates. In daily life, people can get more information in choosing electronic products, watching movies, reading books, etc., thus making better purchasing decisions. For online learning, sentiment analysis employs an automated text analysis process with the aim of extracting opinions and various expressions expressed in online learning blogs and forums where learners discuss and explain their personal opinions. The goal is to recognize emotions and evaluate of services provided. In fact, early detection of learning student complaints and service deficiencies can reduce the risk of widespread dissemination of improving learning capabilities and improve promotional strategies. In this way, sentiment analysis plays an important role in improving the quality of services provided by developers, e‐learning systems, and enhancing their identification of opportunities for new users (learners and tutors).


9.2 Related Work
E‐learning has become less attractive, and as the level of online courses increases, move to more personalized and varied learning to work with students for better learning outcomes [1]. The school focuses on the placement of examinations, concentration, and skills to inspire innovation in our vision and educational programs. E‐Learning questions are standard test questions for all of us. E‐learning and Open Online Courses are more popular with today’s generation of learners. E‐learning systems have proven to be an important pillar of education [2]. This may shed light on what many previous studies have done. Complete traditional classroom tasks and create a platform to maximize the effectiveness of your learning outcomes [3]. To achieve such a platform, the study considers the gambling and personalization of educational resources to transform the education system by targeting learners through intensive learning analysis [4].
Attempts to close the educational gap with the rapid growth of the growing economy, the scope of e‐learning is stronger than ever. Due to its low cost, convenience, and availability, e‐learning is rapidly emerging as the primary driving force in the educational landscape of the 21st century. “Lack of monitoring” is a particularly difficult problem in e‐learning or distance learning environments [5]. Extensive research efforts and techniques have been sought to mitigate the effects of student involvement such as mood and learning behavior. However, current research does not yet have multi‐dimensional computational tools to analyze learner involvement from interactions that occur in digital learning environments [6].
It integrates different data sources of learning pathways and provides an opportunity to gain broad insights into the learner’s behavior and the complexity of the learning process [7]. In developing countries with limited resources such as India, e‐learning tools and sites provide the opportunity to provide education to low‐ and middle‐income families. In such an environment, students can be monitored, habits analyzed and personal data retrieved, as well as new privacy concerns raised in the virtual learning framework [8]. This is a new information technology paradigm that is making e‐learning systems more user‐friendly. As a result, e‐learning application is expanding rapidly and is far superior to traditional educational processes [9]. This revolutionary change is due to the advancement that has taken place in digital technology.
Online learning allows people the freedom to control their own learning process and to follow their own learning style [10]. However, research shows that most e‐learning sites do not have human‐like interactions, so e‐learning users may feel isolated or disconnected. These emotions reduce the motivation to learn. Some companies choose e‐learning in the workplace because it offers the benefit of a new way of improving employees [11]. However, implementing e‐learning in the workplace is a challenge because there are many barriers to controlling its success [12]. The choice of a particular website directly affects the performance of the end user, while e‐learning goals and expected outcomes depend on the quality of the educational process and the effectiveness of online access.
However, due to the large amount of data, it is difficult to manually analyze the impression, so we need to enable automation to make it easier [13]. It explores machine learning techniques for categorizing the emotions of film critics. In academic assessment, sentiment analysis helps educators to identify students’ true feelings about subjects in a timely manner, to adjust curricula in a timely and accurate manner, and to improve the quality of education. Addressing the challenges related to low efficiency and high workload in the university course evaluation method [14]. Sentiment analysis of numerous user comments about the e‐commerce platform can effectively improve user satisfaction. The existing emotion embedding method embeds the emotion dictionary directly into traditional word expressions [15]. This emotional expression method can only distinguish emotional information of different words, but it cannot distinguish the same word in different contexts, so it cannot provide accurate emotional information of words in different contexts.


9.3 Proposed Implementation
Toward the development of E‐learning Environment, the student learning capabilities are analyzed through feedback evaluation through microblog short‐term content analysis. This proposed system works on Spectral Pattern Learning Approach (SPLA) based student sentiment analysis using Dense‐net Multi Perception Neural Network (DMPNN) in E‐learning Environment. This finds the optimal solution in sentiment analysis‐based student performance analysis by evolution content from feedback analysis system.


Figure 9.1 Proposed architecture diagram‐SPLA‐DMPNN.


The sentiment evaluation, word vector, and intensive features are evaluated to select the features. These get iterative spider layer optimization to form genetic patterns. Figure 9.1 proposed architecture diagram‐ SPLA‐DMPNN. The attention of successive feature selection is carried out based on the sentiment terms of evolution and classified with DMPNN. The preprocessing was carried out to reduce noise based on filtering key terms, cleansing, stemming, word count, etc. to formalize the content evaluation through sentiment package to extract labeled features.

9.3.1 Word Vector Correlation Extraction
Microblogs are analyzed to extract the sequence of word correlation to define under the predefined sentiment from word vector to transformation of contents specifics. Sentiment 5 is used to process the sentiment terms in type of extraction. To get the optimal word vector ranking of neighboring neighbors, you need a pre‐trained word vectors and an emotion dictionary with emotion scores. First, the semantic similarity between each target word and other words in the emotional vocabulary is calculated based on the cosine similarity of the pre‐trained vector and then elevated to the closest word. It rearranges those who are semantically similar in close proximity, according to the emotional score provided by the emotional vocabulary. Neighbors with similar emotional poles are ranked higher, and neighbors with different emotions are ranked lower.
First, we need to determine the word encoder method and exercise function. The coding used in this paper is genuine coding, and the coding process is simple and not subject to local extremism. Fitness is an important foundation of population evolution, which is expressed and defined as,
(9.1)  
where k means the amount of nearest nationals, dist(vi, vj) denotes the detachment among separate v(i), and nearest neighbor vj. To ease the control, dist(vi, vj) in above reckonings is unhurried by the shaped Euclidean distance, clear as:
(9.2)  


9.3.2 Spectral Pattern Learning
In this stage, the sentiment word count pattern was generated to marginalize the word impact rate to extract the sentiment pointiness of perspective words. Group relevant features by searching for measurement values based on limit weights. The mutual relevance sentiments terms are built‐in clustering system that predicts data at each iteration. Next to form semantic relationships to create successive mid average means weight. It measures the closeness of semantic similarity of interconnected cluster groups.

Algorithm
  Input: feedback short text process dataset ‘PD’
   Output: sequence pattern
   Step 1: input R-Fds  as PDs data initialization.
   Step 2: perfect logs PDs for each Class Cl→Ts
            Identify search term attribute initialization A(i) for
            frequent query Fvi
                       Attribute For each Cl→Ai of Fvi class cl
                            Pattern compute data
                            
                    End
                    Ds(i) = ∑Dsi + Cl
            End
    End
   Step 3: identify each class Cl of data request set Ts
            Ai→for each case attribute Standard access rate STh.
                    Compute the Relational feature count
                    
            End
            Measure relative pattern case 
    End
   Step 4: read end
 
The average weight measures are categorized into class variables and domain values as data points. The data points with high confidence and low support in the weightage will be ignored. The method selects a single cluster based on the measure estimated to which the data point has to be indexed.



9.3.3 Spider Genetic Sequence Feature Elevation
By the chance of extracting sentiment terms of pattern formation, the word dependencies refer to various scores for evaluating the features. So, the feature depending under different categories are evaluated based on the sentiment term fitness evaluation. This was evaluated through spider optimization intent with genetic sequence pattern mining algorithm. These evaluate the best‐case sentence analyzer with sequence form of content learning formation in best‐case evaluation.
With excellent universal optimization and strength, through the generic feature evaluation was carried out to predict the rem sequence. Among them, GEN is the sequence formation, M is the generate seize pattern keyword, and e is the expected one to form sentiment sequence.
(9.3)  
The ymi and yni is offspring genetic sequence representation of
(9.4)  
(9.5)  
Based on the genetic formation, the equalized successive factor be at forming pattern sequence,
(9.6)  
The maximum representation of sequential terms xmax be presented as maximum support sentiment term with relative sequence the category of class representation. This max class sequence tail pattern with xmn with interactive genetic class; Gmax ini′r number of random variables.′ will be selected based on your personal fitness value. The fitness values are individually selected to form fitness values.

Algorithm:
Step 1: Process the intensive word vectors feature form relative class
            Compute correlation ‘c’Cif→(Lr<span type="mathematics">∩<i>Br</i></span><![CDATA[)
 Step 2: Embrace spider decision Tree → Strengthening class formation (Cif);
            Maximum successive rate (Mir→Nodes (spider))
 Step 3: calculate constraint cif(Mir) weight to form cluster index Ci
            For each cluster ci→Fas feature weight relative term ‘i’
          Analyses decision process Rn→F(i) to make successive margin
                Form genetic sequence Gs→attain Mean rate Cif→Mir
                         Sum maximum count terms F(i)
                         Relative sentence Cfs→ closest F(i)
                      Return Cfs
            End if
        End for
 Step 4: Compute he sequence generator for word count Cfs← frequent sentiment term (Frc)
         Check relative margin each ‘C’←Frs class to each cluster class
             Retain the index to feature list count as sentiment terms
                        Frc←C-ids
                        Return Frc-Ids
                End
               Return Frc
             End for
 Stop
 
To maintain an improved separation and minimize the arbitrariness of the exam, we continue as obscurities. After gaining each one’s correlation strength, sort the ones with the highest semantic level to the relative feature weight, and divide them into the best, the middle, and the lowest, and select from the three according to probability. The determination of this procedure is sects the individual’s patterns as sequent to optimize the sentiment terms weight.



9.3.4 Dense Net Multi‐perception Neural Network (DMPNN)
In this stage, the observed sentence features weights are marginalized into dense net and crates multi perception neural network to classify the categories to sentiment weight into different class. This proves the student’s capability and observation into different classes by marginalizing them into classes. This system generates neurons from each set of each group. The generated neurons are initiated with the ensemble feature. The high‐density net multiplier performs the convolution at the operational level by selecting the desired function. Neurons eliminate unwanted functions. This is done by using a convolution function with the selection function, and the remaining functions feed to the activation function. Neurons are fed by two different metrics, the first of which generates functional activity over a normal chronological order for sentiment and relative terms analysis. The network consists of seven layers, including the input layer and the output layer. The convolution layer uses the convolution function for features, and the pooling layer evaluates weight measurements for various features.

Algorithm:
Step 1: Input features class ‘F’ ←(Frc)
Step 2: Training samples; choosing the optimal classifier for each challenge takes time and effort. As a result, a technique can simultaneously model features and classify them as required
(9.7)  
Z(θ) is the training samples, and E(v, h) is the number of nodes.
The data Transformation to a regression function may be smoothed out in the training procedure. The prognostic prototypical laboring may be linear. Based on that, below algorithm steps are used in training samples. Multi perception is to find the limits as to whether it is low or high. If high or low, the output stops the data analysis process which indicates the alert to the concerned person. The output of the calculating prescient method uses significant mathematical modeling to process data in complicated ways.
(9.8)  
where Z(v, h; θ) is the Partitioning value, n is the number of data, and wi,j is calculating sampling data.
Step 3: Testing Data: The test set is setting the address of initializing the sentiment term as word vector features.
(9.9)  
Here Zrw is the source of the getting, Ps −1 is calculating the limit of data.
To evaluate performance, the “test” or “validation” dataset is required for training sentiment. Traditionally, the dataset cast‐off to measure the concluding representation’s presentation has been mentioned as the testing and training validation. The dense net is a better error analyzer that gets the expected output. The distributions at each node are multiplied and then renormalized. Use the data for another prototype as the values of the factor loadings are calculated from the instinctive rate to fix the margin as dense layers.
Step 4: Offset Vector: Calculate the sentiment word fervency relative margins on each feedback
(9.10)  
Step 5: Hidden Layer; a similar mean value indicates the σ(ci + Wi V) which is an average classification accuracy with cross‐validation and classification error.
(9.11)  
where P (hi = 1 | v) Creates frequent semantic relation sentiment of length 1 with k =
