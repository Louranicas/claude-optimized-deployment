# Security Chapter Extract
Book: Steve Campbell - Bash Shell Scripting for Pentesters (2024, Packt Publishing Pvt Ltd) - libgen.li
Chapter: 7 - It was designed to showcase the capabilities of the Metasploit Framework.
Security Relevance Score: 9
Word Count: 960
Extracted: 2025-06-13 23:41:12

---

It was designed to showcase the capabilities of the Metasploit Framework.
    

     Metasploitable 2 is also a good beginner-level challenge for developing your hacker methodology and learning Bash for pentesting.
    

     The project requires modest resources to run the virtual machine and includes documentation on the machine’s vulnerabilities (
    


      Metasploitable 2 | Metasploit
     




       Documentation
      




      ,
     




       https://docs.rapid7.com/metasploit/metasploitable-2/
      




      ).
     




     Game of Active Directory (GOAD) is also
    


      an option.
     





      “GOAD is a pentesting Active Directory LAB project.
     

      The purpose of this lab is to give pentesters a vulnerable Active Directory environment ready to use for them to practice usual attack techniques
     



      .”
     


     (
    


      Game of Active Directory –
     




       Orange-CyberDefense
      




      ,
     




       https://github.com/Orange-Cyberdefense/GOAD
      




      )
     




     Note that GOAD is free to use and uses free Microsoft Windows licenses that are activated for 180 days.
    

     GOAD is the best resource I’ve found for practicing hacking on internal Active Directory
    


      network environments.
     




     MayFly is the creator of GOAD.
    

     Their website contains plenty of articles on how to set GOAD up on different virtual machine hypervisors, as well as lab guides for using common pentesting tools to
    



     hack
    


      Active Directory.
     




     Tip
    



     MayFly also published a comprehensive mind map for pentesting Active Directory.
    

     Despite having years of experience in hacking Active Directory, I still find times that I’m running out of things to test and will refer to this mind map when I get stuck or want to ensure that I’ve left no stone unturned.
    

     This mind map is also the number one resource I recommend to junior pentesters who are learning Active Directory hacking techniques and tools (you can find more details
    


      at
     




       https://orange-cyberdefense.github.io/ocd-mindmaps/img/pentest_ad_dark_2022_11.svg
      




      ).
     




     If you wish to practice your Bash scripts, tools, and methodology on web applications, OWASP Juice Shop is a
    


      great resource.
     





      “OWASP Juice Shop is probably the most modern and sophisticated insecure web application!
     

      It can be used in security training, awareness demos, CTFs, and as a guinea pig for security tools!
     

      Juice Shop encompasses vulnerabilities from the entire OWASP Top Ten
     


     (
    


      https://owasp.org/www-project-top-ten/
     


     )
    


      , along with many other security flaws found in real-world applications!”
     


     (
    


      OWASP Juice Shop – OWASP
     




       Foundation
      




      ,
     




       https://owasp.org/www-project-juice-shop/
      




      )
     




     An older yet still very relevant vulnerable web application is
    


      Mutillidae II.
     





      “OWASP Mutillidae II is a free, open source, deliberately vulnerable web application that provides a target for web-security training.
     

      With dozens of vulnerabilities and hints to help the user, this is an easy-to-use web hacking environment designed for labs, security enthusiasts, classrooms, CTF, and vulnerability assessment tool targets.”
     


     (
    


      OWASP Mutillidae II – OWASP
     




       Foundation
      







       https://owasp.org/www-project-mutillidae-ii/
      




      )
     




     One of the things I love about Mutillidae is that it embeds hints, tutorials, and video tutorials in the content.
    

     Mutillidae is a resource I used many years ago to learn web app testing when I was a junior pentester.
    

     The difference between Juice Shop and Mutillidae is that Juice Shop is a modern web application that uses JavaScript frameworks, whereas Mutillidae is a more traditional web application.
    

     While Juice Shop has a scoreboard and you can find third-party walkthroughs online, Mutillidae has a large amount of training text and video embedded in
    


      the application.
     




     The cybersecurity landscape is always changing, and new vulnerabilities are discovered regularly.
    

     A lab setup is an ideal place for research and development, allowing you to experiment with these vulnerabilities safely.
    

     It’s where you can contribute to the cybersecurity community by
    



     discovering new vulnerabilities or enhancing existing
    


      pentesting methodologies.
     




     Now that we’ve explored vulnerable targets for your pentesting lab, next up, we’ll talk about customizing your Bash shell so that it suits your needs and
    


      personal style.
     






     Configuring your hacker shell
    



     If you’re following along using Kali Linux or macOS, note that your Terminal shell uses Zsh by default instead of Bash.
    

     Zsh has more features (such as better tab completion and theme support) but Bash is more
    



     widespread and standard.
    

     Bash has been around since the late 80s, making it a veteran in the shell world.
    

     It’s the default on most Linux distributions and macOS (up until Catalina, where Zsh took over).
    

     Bash’s longevity means it’s extremely stable
    


      and well-supported.
     




     Zsh, on the other hand, came a bit later.
    

     It’s known for its improvements over Bash, including better interactive use and more powerful
    


      scripting capabilities.
     




     You can determine which shell is configured by entering the
    


      echo $SHELL
     


     command in your terminal.
    

     Almost all code shown in this book will work in both Bash and Zsh, except where noted.
    

     In my day-to-day pentesting activities, I rarely notice any difference.
    

     However, if you want to change your shell from Zsh to Bash, execute the
    


      chsh -s /bin/bash
     


     command in your Terminal, then log out and log in to see the change
    


      take place.
     




     Bash configuration files can be found in the user home directory,
    


      /home/username
     


     .
    

     Because the filenames begin with a period character, they are commonly referred to as
    


      dotfiles
     


     .
    

     The following configuration files
    



     are used to configure the
    


      Bash shell:
     






       ~/.bash_profile
      


      : This file is executed at the start of an interactive login and is used to initialize the user environment.
     

      Think of an interactive login as logging in via the command line via a text-based Terminal such as an
     


       SSH session.
      





       ~/.bashrc
      


      : This file is used to configure the Terminal when you’ve logged in through the
     


       graphical user interface
      


      (
     


       GUI
      


      ).
     

      This file contains settings including aliases, functions, prompt
     



      customizations, and
     


       environment variables.
      





       ~/.bash_logout
      


      : This file is
     



      executed when your session ends.
     

      It’s used to perform tasks related to cleaning up the environment when you
     


       log out.
      





     Tip
    



     If you don’t understand the purpose of the tilde (
    


      ~
     


     ) character and forward slash preceding the dotfile name, the tilde character represents the user’s home directory.
    

     The
    


      ~/.bashrc
     


     path is equivalent to
    


      /home/username/.bashrc
     


     .
    

     This concept will be covered in
