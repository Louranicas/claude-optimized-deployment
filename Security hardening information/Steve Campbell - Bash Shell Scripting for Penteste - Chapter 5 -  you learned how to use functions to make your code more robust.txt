# Security Chapter Extract
Book: Steve Campbell - Bash Shell Scripting for Pentesters (2024, Packt Publishing Pvt Ltd) - libgen.li
Chapter: 5 - , you learned how to use functions to make your code more robust.
Security Relevance Score: 13
Word Count: 1095
Extracted: 2025-06-13 23:41:12

---

, you learned how to use functions to make your code more robust.
    

     This chapter will build on previous chapters by applying what you’ve learned to real-world pentesting tasks related to networking and
    


      network exploitation.
     




     This chapter dives into the world of
    


      Bash networking
     


     .
    

     We’ll take a tour of commands and scripts that let you configure, troubleshoot, and exploit networking in a Unix/Linux environment.
    

     You’ll learn not just how to access network configuration details and interact with network components but also how to use Bash scripting to exploit vulnerable network services.
    

     We’ll start with the basics, then gradually step into more advanced concepts, all the way to network
    


      traffic analysis.
     




     By the end of this chapter, you’ll be able to identify network configuration details, understand network diagnostics in Bash, enumerate network services in Bash, automate network scanning tools and chain attack sequences, and explore exploitation and post-exploitation commands in
    


      Bash scripts.
     




     In this chapter, we’re going to cover the following
    


      main topics:
     





      Networking basics
     


       with Bash
      




      Scripting network enumeration
     


       with Bash
      




      Bash techniques for
     


       network exploitation
      




      Bash scripting for network
     


       traffic analysis
      







     Technical requirements
    



     The code for this chapter can be found
    


      at
     




       https://github.com/PacktPublishing/Bash-Shell-Scripting-for-Pentesters/tree/main/Chapter06
      




      .
     




     Following along with one of the exploitation exercises will require you to download and run
    


      vulhub
     


     (
    


      https://github.com/vulhub/vulhub
     


     ) with the
    


      Shellshock
     



      exploit configured.
     




     Install the required tools in Kali by running the following command in
    


      your terminal:
     



$ sudo apt install -y net-tools tshark ipcalc sipcalc


     Having configured your system to follow along, let’s dive into an exploration of networking in Bash in the
    


      next section.
     






     Networking basics with Bash
    



     Alright, let’s dive into
    



     understanding
    


      Internet Protocol
     


     (
    


      IP
     


     ) addresses
    



     and
    


      subnets
     


     .
    

     There are two
    



     types of IP addresses:
    


      IP Version 4
     


     (
    


      IPv4
     


     ) and
    


      IPv6
     


     .
    

     You’ll usually be working with IPv4 addresses, but it helps
    



     to know the basics
    


      of both.
     




     IP addresses are like street
    



     addresses.
    

     They help devices communicate with each other over a network.
    

     An IP address is a unique number assigned to each device connected to
    


      a netw
     





      ork.
     






     Understanding IP addresses and subnets (IPv4)
    



     IPv4 is the fourth version
    



     of the IP.
    

     It is the most widely used version of the IP in the world today.
    

     IPv4 addresses are 32-bit numerical values
    



     expressed in four
    


      octets
     


     separated by periods.
    

     Each octet can range from
    


      0
     


     to
    


      255
     


     , making up a total of over four billion
    


      unique addresses.
     




     An IPv4 address consists of four sections separated by periods.
    

     Here is an example of an IPv4 address:
    


      192.168.1.1
     


     .
    

     Let’s break it down
    


      for you:
     





      There are four sections, each separated by
     


       a period.
      




      Each section is referred to as
     


       an octet.
      





       192
      


      represents the
     


       first octet.
      





       168
      


      represents the
     


       second octet.
      





       1
      


      represents the
     


       third octet.
      





       1
      


      represents the
     


       fourth octet.
      





     Each octet in an IPv4 address can have a value between
    


      0
     


     and
    


      255
     


     , making it a 32-bit
    


      address space.
     




     The command to review your IP address in Bash is
    


      ip address
     


     , which can be abbreviated to
    


      ip a
     


     .
    

     You may encounter the deprecated
    


      ifconfig
     


     command on older Linux systems, which
    



     performs the same function.
    

     Let’s see
    


      an example:
     











     Figure 6.1 – An example command to get the IP address information
    



     The preceding command output shows two network interfaces,
    


      lo
     


     and
    


      eth0
     


     .
    

     You may see different interface names on your system, and you may have more than
    


      two interfaces.
     




     The
    


      lo
     


     interface, also known as the
    


      loopback adapter
     


     , is a network component that allows a computer to send and
    



     receive data packets to itself, simulating a real network connection.
    

     Assigned the IP address
    


      127.0.0.1
     


     , commonly referred to as
    


      localhost
     


     , it enables
    



     software applications to test internal network communications without external network involvement, which is essential for debugging and development.
    

     Additionally, it enhances security by allowing services to bind to this address, ensuring they are only accessible locally, thus protecting them from external threats and
    


      unauthorized access.
     




     The
    


      eth0
     


     interface has the
    


      192.168.61.128
     


     IPv4 address assigned.
    

     This is the network interface that my system uses to communicate on
    


      the network.
     




     After the IP address, you can see a forward slash (
    


      /
     


     ) and a number.
    

     This is the
    


      subnet mask
     


     , sometimes
    



     referred to as the
    


      netmask
     


     .
    

     The subnet mask identifies the network address.
    

     To understand
    



     this better, we use
    



     a process called bitwise
    


      ANDing
     


     .
    

     We convert the IP address and subnet mask into binary and then perform
    



     a bitwise
    


      AND
     


     operation.
    

     The bitwise
    


      AND
     


     operation results in a
    


      1
     


     value only if both binary bits are
    


      1
     


     ; otherwise, it results in
    



       0
      




      (zero).
     




     Let’s use the
    


      ipcalc
     


     program to visualize this
    



     information.
    

     You can install it by running the
    


      sudo apt install -y ipcalc
     


     command.
    

     Let’s see
    


      an example:
     











     Figure 6.2 – An example of the ipcalc command
    



     In the preceding figure, we’ve passed the IP address and netmask as an argument to the
    


      ipcalc
     


     program.
    

     First, take
    



     a look at the structure of these addresses in binary.
    

     If each part is eight binary bits and there are four parts, then you have a total of 32 bits in an
    


      IPv4 address.
     




     The
    


      /24
     


     subnet mask means that the network address is 24 bits.
    

     Look at the line that starts with
    


      Netmask
     


     in the preceding figure.
    

     It shows that the network address is 24 bits, leaving eight bits for host addresses on
    


      this network.
     




     IP addresses representing the network address and broadcast address cannot be assigned to hosts.
    

     This means that on a network with a
    


      /24
     


     or
    


      255.255.255.0
     


     subnet mask, the network address is
    


      192.168.61.0
     


     , the first useable host address is the
    


      HostMin
     


     value and the last useable host address is the
    



       HostMax
      




      value.
     




     Usually, a network device called a
    


      router
     


     takes the first
    



     useable IP address on a network.
    

     That would be
    


      192.168.61.1
     


     in this case.
    

     The last address,
    


      192.168.61.255
     


     , is a
    


      broadcast address
     


     .
    

     A
    



     broadcast address is the address that is used when a host needs to send to all IP addresses on the network.
    

     The
    


      NetMin
     


     and
    


      NetMax
     


     values fit between the network and
    


      broadcast addresses.
     




     There is much more involved in networking and network addresses, and many large books have been written on this subject.
    

     For our purposes, we’re going to keep it simple and related to the theme of
    


      this book.
     






     Understanding IP addresses and subnets (IPv6)
    



     IPv6, the latest version of the IP, was developed to address the exhaustion of IPv4 addresses by using a 128-bit address space, compared to the 32-bit space used in IPv
