# Security Chapter Extract
Book: Shilpa Mahajan_ Mehak Khurana_ Vania Vieira Estrela - Applying Artificial Intelligence in Cybersecurity Analytics and Cyber Threat Detection (2024, WILEY) - libgen.li
Chapter: 0 - In this process, the DBN model aids the CNN in deriving all the essential features and defining the feature map, which is the intermediate representation of input data. The current system primarily employs this map, which is extracted from the video frames. To perform the ultimate prediction of the driver’s unlawful movement, a set of video frames is utilized for recognition. Its primary function is to collect, process, and interpret information from photos or videos, allowing the system to identify and enforce traffic laws by recognizing various transgressions. One notable feature of CV is its capacity to recognize and track things in real time. Vehicles, pedestrians, and traffic signs are all included. The device may detect possible offenses such as automobiles running red lights or pedestrians jaywalking by utilizing computer vision. Approximately thirteen feature maps are used by CNN for making the predictions. Afterward, the set of maps is condensed into a solitary pattern and fed into the DBN model to obtain the ultimate classification for the traffic law violation system. The workflow for Computer vision technology is summarized in Figure 4.5 [3].
Security Relevance Score: 4
Word Count: 1995
Extracted: 2025-06-13 23:40:31

---

In this process, the DBN model aids the CNN in deriving all the essential features and defining the feature map, which is the intermediate representation of input data. The current system primarily employs this map, which is extracted from the video frames. To perform the ultimate prediction of the driver’s unlawful movement, a set of video frames is utilized for recognition. Its primary function is to collect, process, and interpret information from photos or videos, allowing the system to identify and enforce traffic laws by recognizing various transgressions. One notable feature of CV is its capacity to recognize and track things in real time. Vehicles, pedestrians, and traffic signs are all included. The device may detect possible offenses such as automobiles running red lights or pedestrians jaywalking by utilizing computer vision. Approximately thirteen feature maps are used by CNN for making the predictions. Afterward, the set of maps is condensed into a solitary pattern and fed into the DBN model to obtain the ultimate classification for the traffic law violation system. The workflow for Computer vision technology is summarized in Figure 4.5 [3].



4.3 Literature Review
In [5], the prime objective is to provide drivers with feedback about traffic rule violations committed while driving. The proposed methodology is capable of detecting specific traffic law infringements and recording information about the offender in a local database. They utilized the “Standard Google Earth” tool to visualize the stored data based on rule breakage in a geographical map. The system is designed to work both during the day and at night, with dual high‐resolution cameras mounted on the vehicle’s roof, with one camera operating during the day and the other at night.
To make it user‐friendly, a human interface software was introduced, allowing the driver to visualize the offense committed. Furthermore, the vehicle owner can also receive assistance with various other actions that can help them to avoid violations. The application can be installed on the screen in the vehicle for easy interaction and quick actions. The system can accurately detect various signboards placed along the road to alert individuals about potentially dangerous situations such as high speeds, stop signs, intersections, no‐parking zones, and schools ahead. In such cases, the system delivers an audible message through a loudspeaker to the driver.
Initially, the pre‐installed camera captures a snapshot from which all the essential statistics are extracted based on the image region. The images are then segmented to focus on the traffic signs, which is achieved through flexible thresholding, ignoring numerous untracked regions that can be disregarded later. Subsequently, the segmented image’s shape is analyzed to obtain the area of interest. Shape analysis involves multiple filtering process followed by geometric restrictions. The final stage involves pattern matching on the filtered image to arrive at the ultimate decision.
In [6], a system called “Vehitrack” was developed for Android to detect traffic law violations using RFID technology and sensors. The ultimate objective of the system was to manage volume of the traffic in a specific area. In addition, the creators also developed a mobile application that included a database for saving all the relevant information of the driver and a list of previously violated regulations. The approached aimed to create an integrated system with Android application that would automatically send a message to the vehicle’s owner, including the total amount to be paid for breaching the traffic law. The flowchart below describes the working of the system (Figure 4.6).


Figure 4.6 Working of Vehitrack system.


The process was segmented into four distinct stages. In the initial step, the identification of the vehicle on the road was carried out through the utilization of RFID, sensors, and tags, with the aid of a camera for capturing an image of the transport. In the second phase, various technologies performed different functions. The sensor detects the RFID number, which is read by the reader, and all the acquired information is transferred to the database. The third module involves the implementation of an Android application that establishes a link between the police officer and the perpetrator. Finally, the offender is automatically issued a fine on their registered mobile number.
The paper discusses the experiment results used to evaluate the performance of the Vehitrack system. According to the authors’ demonstration, the system achieves excellent accuracy in identifying traffic law violations. They also emphasize the constraints and difficulties experienced when putting the system into action. The study continues by introducing the Vehitrack system, an Android‐based tool for detecting traffic offenses. The research contributes to the field of traffic management and enforcement by providing a mobile platform that uses image‐processing techniques for precise and immediate infraction recognition. The Vehitrack system has the potential to improve road safety by quickly detecting and documenting traffic violations, allowing law enforcement to take appropriate action.
Chitra et al. [7] proposed a traffic management approach that includes detecting rule violations. Their traffic management architecture utilizes sensors to monitor traffic flow on a lane. The controller adjusts the duration of the green light based on signals received from the sensors. The circuit built into the system operates when the signal turns red, requiring vehicles to stop. If a vehicle moves during the red signal, the circuit uses an LDR and laser to detect it. Once the signal is disrupted, a buzzer alerts on‐site commuters on the lane.
The system is designed with infrared sensors that detect traffic flow and adjust the duration of the green and red signals accordingly. A circuit is installed in the proposed architecture to recognize signal‐crossing violations. The traffic infringement circuit operates in two stages, where first stage uses a Light Dependent Resistor (LDR) to switch the buzzer on or off based on the LDR signal. In the second stage, the buzzer sounds whenever a traffic regulation violation occurs, sending a warning to the centralized system. Figure 4.7 elaborates on the working of the traffic violation circuit.
The paper also mentioned a downside of using LDR, noting that it does not function as intended when there is ambient light present. In situations where there is low traffic volume and a vehicle stops in front of the sensor, the green light is automatically activated. To address these problems, sensors can be used instead of LDR. Additionally, instead of relying on a centralized computer, a Raspberry Pi can be employed to operate the surveillance system. To address these issues, the research report suggests using sensors on top of LDR. With sensors that are less affected by ambient light, the system can detect traffic violations more reliably and correctly. Another suggestion for improvement is to use a Raspberry Pi as the operating system for the surveillance system rather than a centralized computer. The system’s effectiveness and performance can be improved through these changes.


Figure 4.7 Architecture for traffic violation circuit.
Source: Chitra et al. [7]\International Journal of Computer Applications.


In [8], an AI‐based traffic sign violation detection system was created in 2020 using deep learning techniques. The research employed YOLO version 3 to recognize law breakage such as signal jumping, seatbelt usage, and speeding on two‐wheelers. To identify objects from the input given to the system, YOLOv3 was coupled with CNN. The YOLOv3 primarily comprises a CNN, which consists of layers that enable the visualization of images and videos captured. It belongs to the class of multi‐layer perceptron where neurons of one network are linked to those of another network. CNN is a specific type of model used for processing information in a grid‐like manner. The model initially extracts features from the image frame by frame. The CNN’s layer also has the ability to detect multiple objects simultaneously from a single input. The study highlights potential future work by emphasizing on the need for a system which is capable of monitoring traffic efficiently and can cover a huge area.
The objective is to detect violations from a single input using a parallel computation approach. Moreover, the researchers recommend using larger datasets and training them using GPUs and high‐end FPGA kits. The block diagram below explains the working of the traffic rule violation detection system. The CNN layer can differentiate several objects from a single input at the same time. The study indicates opportunities for future research by emphasizing the need for a system that can successfully monitor traffic across a vast area. The purpose is to discover violations from a single input using a parallel processing method. Overall, the research uses AI and deep learning techniques to improve traffic signal detection. The findings demonstrate how these technologies could enhance traffic safety and enforce traffic laws at signalized crossings.


Figure 4.8 Flowchart for proposed traffic monitoring system.
Source: Adapted from Arnob et al. [9].


In [9], a lane‐based rule violation detection system was introduced in 2020 using a combination of various algorithms. The prime aim of the authors was to address a problem related to both Raspberry Pi as well as OpenCV. The flowchart below demonstrates the traffic monitoring system in detail (Figure 4.8).
Initially, a pre‐processing step was applied using a Gaussian blur filter on the collected video, the image was masked and sent to the canny edge detection algorithm. Subsequently, the accused individual and their vehicle license plates were identified, and if any violation was detected, an alert message was dispatched. The system achieved an accuracy of 78.83%, which was considered sufficient for identifying offenders based on license plate information. The implementation of the Hough line concept involved the use of the OpenCV and NumPy platforms to monitor traffic. A Raspberry Pi was employed, which was constructed on the singleton chip of the computer system. The proposed system was initiated by first booting the Raspberry Pi and installing both OpenCV and its contour. The captured images were converted to grayscale, and a threshold was applied. The surveillance system was used to record videos of vehicles committing offenses. Lane violations are also detected by using combination of canny edge, Gaussian blur, and HLT. Finally, once an offense was recorded, a text message was sent to the user’s phone number, which was previously stored in the database.
The camera footage and images captured on highways are often not clear enough to be directly used for the final prediction in the model. To enhance the sharpness of the input and to eliminate noise, a Gaussian blur filter is applied. The filter utilizes the Gaussian kernel to adjust the height and width of the image or video. By implementing these techniques, the system was able to achieve high accuracy and demonstrate superior performance.


Figure 4.9 System for designing the traffic violation detection system.


The 2021 [10] research work employed a range of machine learning techniques to construct a system which is capable of automatically identifying offenses in the absence of traffic officers. To achieve the best results and to reduce existing noise, input images underwent gray scaling using the Gaussian blur approach. Furthermore, dilation was employed to fill in any emptied holes. After pre‐processing, multiple object detection ML approaches were utilized, and their outcomes were assessed. SVM was initially employed, which revealed that objects could be easily extracted from the given data. However, RCNN gathered features from each region of the image and produced a significantly higher recognition rate. Ultimately, the study found that RCNN was superior to SVM for this purpose (Figure 4.9).
To create a more user‐friendly interaction with individuals, the study utilized tkinter as it is a proven to be attractive GUI. This allows even the traffic inspector to review the footage before penalizing an offender. Therefore, the investigation process can be conducted with ease through the use of this technique. Image processing steps include gray scaling and blurring, followed by background subtraction to isolate the area of interest and remove unwanted image elements. To attain high accuracy, it is essential to eliminate existing noise and disturbances, which is achieved through binarization. It is a technique where a gray scaled images are converted into the binary format, where each value is either 0 or
