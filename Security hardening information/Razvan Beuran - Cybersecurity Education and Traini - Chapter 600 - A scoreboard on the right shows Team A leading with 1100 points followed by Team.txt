# Security Chapter Extract
Book: Razvan Beuran - Cybersecurity Education and Training (2025, Springer Nature Singapore) - libgen.li
Chapter: 600 - A scoreboard on the right shows Team A leading with 1100 points, followed by Team B with 800, Team C with 700, Team D with 500, and Team E with 100. The timer reads 1:23:45.Fig. 10.1Mockup of a possible user interface for Jeopardy-style CTF platforms that shows a number of challenges and their corresponding amount of points in several categories; the remaining time and the competition scoreboard are also displayed in the right-hand side of the interface
In terms of deployment, a server infrastructure is required to store the digital assets, such as web pages or virtual machines, that are needed to solve the CTF challenges. The information on how to access a web page or virtual machine is provided via the challenge description. Sometimes, the challenge can also contain attached files that the participants must download, for example, for binary analysis or cryptography challenges. Ideally, CTF platforms should provide mechanisms to CTF content creators to manage such resources as needed. However, for basic quizzes, all the information needed for a challenge can be included in its text description, and no additional resource is required. Nevertheless, some kind of support for actually creating and displaying the quiz is always necessary.The duration of CTFs varies according to their difficulty, ranging from a few hours to a few days, or even more. In most cases, a timer will be started when the competition begins and will be prominently displayed in the CTF user interface, given the participants a clear view on the amount of remaining time. When the allocated time elapses, the CTF ends and the team or individual that had most points at that moment wins. Typically, a scoreboard is also displayed during the entire duration of the competition, so that participants can follow in real time the progress of their ranking and see how it compares with that of the other participants. A mockup of a possible CTF platform user interface that illustrates all the specific elements discussed so far is shown in Fig. 10.1.
Security Relevance Score: 26
Word Count: 9329
Extracted: 2025-06-13 23:41:15

---

A scoreboard on the right shows Team A leading with 1100 points, followed by Team B with 800, Team C with 700, Team D with 500, and Team E with 100. The timer reads 1:23:45.Fig. 10.1Mockup of a possible user interface for Jeopardy-style CTF platforms that shows a number of challenges and their corresponding amount of points in several categories; the remaining time and the competition scoreboard are also displayed in the right-hand side of the interface
In terms of deployment, a server infrastructure is required to store the digital assets, such as web pages or virtual machines, that are needed to solve the CTF challenges. The information on how to access a web page or virtual machine is provided via the challenge description. Sometimes, the challenge can also contain attached files that the participants must download, for example, for binary analysis or cryptography challenges. Ideally, CTF platforms should provide mechanisms to CTF content creators to manage such resources as needed. However, for basic quizzes, all the information needed for a challenge can be included in its text description, and no additional resource is required. Nevertheless, some kind of support for actually creating and displaying the quiz is always necessary.The duration of CTFs varies according to their difficulty, ranging from a few hours to a few days, or even more. In most cases, a timer will be started when the competition begins and will be prominently displayed in the CTF user interface, given the participants a clear view on the amount of remaining time. When the allocated time elapses, the CTF ends and the team or individual that had most points at that moment wins. Typically, a scoreboard is also displayed during the entire duration of the competition, so that participants can follow in real time the progress of their ranking and see how it compares with that of the other participants. A mockup of a possible CTF platform user interface that illustrates all the specific elements discussed so far is shown in Fig. 10.1.
10.1.2 Attack-Defend CTFThe attack-defend CTF is a type of competition in which a participant or team must perform two types of activities in order to be awarded points: attack the systems controlled by other teams, and defend their own systems from other teams’ attacks. The number of points that is awarded is directly proportional with the amount of time participants are able to maintain control of the target systems. Extra points can be awarded for discovering flags hidden in those systems.The attack and defense activities in this type of CTF usually take place simultaneously, especially for competitions with many participants. Alternatively, the competition can be organized in rounds, in particular for smaller competitions, such as those that are part of the internal training of an organization. In this case, for the first round, one team becomes the attacking team (also called red team), and the other team becomes the defending team (also called blue team). Then, in the second round of the competition, the two teams switch roles, so that participants of both teams can have the opportunity to exercise both their attack and defense skills.In CTFs that focus mainly on offensive aspects, flags can be used as proof that a machine has been compromised, and if multiple flags are used on the same machine, how deep that compromise extends. Thus, flags can be hidden in text files placed at strategic locations on the target machines. The role of the attacking team is to attempt to locate and access those flags, then submit them as proof of their success, while the defending team tries to prevent access to those flags. Note that if there is no defense aspect at all in such a CTF challenge, then it can be considered to be of Jeopardy type, typically being classified in the pwn category, which refers to the act of gaining ownership of a resource (also known as pwning).In order to ensure a fair competition, various rules are typically put in place for attack-defend CTFs. For example, there may be restrictions on what kind of hacking tools a red team can use. For the blue team as well there are restrictions, such as forbidding actions that cripple the target system, including disabling its network interfaces or turning it off. In case rule violations are detected, the corresponding team will face point penalties or even disqualification.
10.1.3 CTF-Type ComparisonThe main advantage of Jeopardy-style CTFs from a participant perspective is that they are relatively carefree to attend, with tasks, as well as required skills, being clearly identified for each challenge most of the time. From an organizer perspective too, the fact that the training environment is relatively easy to set up is an important advantage. For some challenges, all the information can be included in the question text in the form of a quiz, hence no specific environment needs to be created. In other cases, a file attachment can be all that is needed in order to solve the challenge, for example to provide a file that is to be decrypted. Only for the most advanced Jeopardy challenges an actual target environment becomes necessary, but even in that case it is typically just a web site or virtual machine with some specific vulnerabilities, hence the setup is still relatively simple.As for disadvantages, the fact that a Jeopardy-style challenge only refers to a single technique, or perhaps a limited set thereof, makes it that the challenges can be somewhat disconnected from reality, since a complex set of interrelated skills are usually required to address real-world cybersecurity issues. Nevertheless, we can draw a similarity between Jeopardy-style challenges and exercises done in school, in which each exercise may be of limited practical value by itself, but mastering repeatedly numerous exercises builds problem-solving skills that can later be applied in real life.On the other hand, when considering attack-defend CTFs, the fact that they are very close to real-world cybersecurity conditions makes them much more useful from a training perspective. Thus, skills practiced by the defender teams can be utilized in a straightforward manner when defending real networks. Similarly, skills practiced by the attacking teams offer a direct perspective on what real attacker actions can be, and prepare professionals both for activities such as penetration testing, and also for becoming more skilled defenders.Attending an attack-defend CTF, however, is very challenging for participants, as they must perform several tasks, often as quickly as possible, such as exploring the target environment, finding and patching vulnerabilities, detecting attacks and finding ways to stop or prevent them, etc. In addition, from an organizer perspective, the main hurdle is that the target environment needs to be complex enough to make possible a challenging contest that sufficiently tests the skills of the participants. Creating such an environment requires not only a wide range of technical skills from the part of the competition staff, but also a powerful-enough server infrastructure for deploying that environment.Given all of the above, we conclude that Jeopardy-style CTFs are most suited for beginners who want to hone basic individual skills in a carefree style, whereas attack-defend CTFs are most suited for participants with medium and high skill levels, who can put those skills into practice in realistic scenarios. For these reasons, most currently available CTF competitions are in a Jeopardy or similar style, since they are easier to organize, and the potential target audience is larger. Conversely, only some high-level CTFs that address the needs of advanced cybersecurity professionals use the attack-defend format. Table 10.1 summarizes the key aspects that were discussed in this section in terms of the main advantages and disadvantages of the two CTF types, as well as their suitability.Table 10.1Comparison of the main CTF typesCTF typeMain advantageMain disadvantageSuitabilityJeopardyEasy to attend, and also set up and maintainFocus mainly on individual techniquesParticipants with low-to-medium skill levelsAttack-defendSimilar conditions to real-life scenariosChallenging to attend, and also to set up and maintainParticipants with medium-to-high skill levels


10.2 Online CTF PlatformsIn what follows we will discuss several representative examples of actual CTF platforms, starting with those that fall in the online category. The main advantage of online CTF platforms is that they have the lowest barrier-to-entry from a participant perspective, since usually no setup is required before using them. The examples that we used to illustrate this type of CTF platform also have another common characteristic: they provide all or most training content free of cost, typically after a basic user registration procedure. We decided to focus on online CTF platforms that provide free content as this is how most people interested in cybersecurity begin their learning journey. When applicable, we will discuss the platform features that are only available at a cost, so as to make it clear in which cases the readers may need to explore paid options.To make it easier to compare platforms, we will separate their presentation by type. First, we will examine Jeopardy-style platforms, as they are the most commonly available type. Then, we also examine several examples of hybrid platforms, that include additional forms of content, such as attack-defend style competitions. We note that there seem to be no platforms exclusively dedicated to attack-defend style CTFs, hence the reason for this classification.10.2.1 Jeopardy-Style PlatformsSince Jeopardy-style CTFs are most popular with learners, and relatively easy to set up and manage, it is not wonder that most online CTF platforms currently available fall in this category. In what follows, we will review several such platforms, shown below in alphabetical order, and examine their main characteristics.10.2.1.1 Google CTFGoogle CTF is an annual online CTF competition organized by Google since 2016, typically during a couple of days in the month of June [15]. The competition consists of two events: a qualification stage in which the security skills of the participants are tested via a distributed security exercise, and a final stage in which finalists selected in the qualification stage compete in an on-site security exercise.As with other CTFs, Google CTF participants must solve various challenges within the contest time period in order to earn points. The teams that earn the most points can also receive cash awards. One interesting aspect is that the number of points assigned to a challenge is not decided in advance, but it is calculated based on the number of teams that solved that challenge, so that the point value of a challenge is weighted based on its actual difficulty from a participant perspective. Most of the challenges used in Google CTF since 2017, as well as their solutions, are published on GitHub for reference and study purposes [14]. For 2023, the challenge categories were: misc, crypto, pwn, reversing, web and sandbox.
10.2.1.2 Hacker101 CTFHacker101 CTF is an online CTF platform that is made available as part of the Hacker101 online course on web security [19]. Participants of all levels can use the provided training environment to safely practice and improve their cybersecurity skills. The CTF is offered as a complement to the free online resources available on Hacker101, which are organized in several learning tracks that include information and video lessons on various topics, such as web hacking, mobile hacking, cryptography, and so on.As with other Jeopardy-style platforms, participants have to use their pentesting skills to find flags that are placed in various locations in the target environment, such as within a file, a database, source code, etc. The Hacker101 CTF content is split into several levels, each containing a given number of flags. The levels are tagged with their difficulty level, such as trivial, easy, moderate, hard, and expert, as well as the skills that are required to solve the challenges, such as web, crypto, or math. Participants can select levels in any order, depending on their specific interests in certain topics, for example. Hints are also available for each level to assist those participants who have troubles with a particular challenge. A specific feature is that players can organize themselves in groups to work together through the CTF.
10.2.1.3 HackThisSiteHackThisSite is a free training platform that provides an open learning environment which includes no only hacking challenges, but also articles and various resources regarding the latest information in relation with hacker culture [20]. The training content made available on HackThisSite is divided into two main categories:Basic challenges: Aimed at beginners, these challenges are relatively straightforward Jeopardy-style challenges that are designed for building the basic cybersecurity skills of the participants.Realistic missions: Activities aimed at more advanced users that ask participants to target websites provided via the platform that contain built-in security flaws which are to be exploited in order to achieve a series of hacking objectives.
Additional training content is included in separate challenge categories that cover various specific areas, such as applications, programming, JavaScript, forensics, and steganography. An extended basic level with more complex introductory content is also made available.One important characteristic of the HackThisSite platform is the role-playing game approach used for the realistic missions. Thus, when using content in the mission category, participants assume the role of freelance hackers who are contracted by fictitious organizations to hack for social justice causes. After receiving a mission objective, participants have to explore on their own the target website of that mission with the purpose of discovering and exploiting the included vulnerabilities.
10.2.1.4 Pwnable.krThe pwnable.kr platform is a non-commercial website that provides Jeopardy-style challenges regarding mainly system exploitation topics [27]. The website itself has a fun design, with many graphics aimed at increasing the level of engagement of the participants. The included CTF content covers a wide range of cybersecurity skills, such as programming, reverse engineering, bug exploitation, operating system knowledge, and cryptography.The pwnable.kr challenges are divided into four categories, depending on their level of difficulty, with the names of each level reflecting the playfulness of the website authors. Thus, the Toddler’s Bottle level is addressed to the very beginners, Rookiss contains typical challenges for rookies, Grotesque includes some more advanced challenges, and finally the Hacker’s Secret level provides challenges that involve special cybersecurity techniques. For each of the included challenges, the intended solution is also provided by the challenge author, so as to help the participants with learning new skills.
10.2.1.5 Smash The StackSmash The Stack is a CTF platform that hosts several ethical hacking environments that reproduce real-world software vulnerabilities [31]. These environments are called “wargames” within this platform, and each of them includes a series of levels through which the participants must advance in order to complete the challenge. Access to the environment corresponding to a given challenge is typically done via an SSH client, following the instructions on the challenge web page. Further information about the objective of each level is provided in a README file in the home directory of that level.The challenges in Smash The Stack cover several cybersecurity areas, such as reverse engineering, web application pentesting, and software exploitation. The vulnerabilities utilized in the challenges are of different types, such as operating system vulnerabilities, network protocol vulnerabilities, application vulnerabilities, etc. The required skill level for each wargame (challenge) is displayed on the main web page of Smash The Stack, such as beginner, intermediate, or advanced, making it possible for participants to select a challenge that matches their abilities.
10.2.1.6 W3ChallsW3Challs in an online CTF platform that hosts a large number of challenges that cover various areas of hacking, albeit being mostly oriented toward offensive hacking [34]. The challenges are organized in six categories: Crypto, Forensics, Misc, Pwning, Reversing and Web. For each challenge within a certain category, the number of points to be gained from solving that challenge is displayed along with the challenge name, representing an indicator of the difficulty of that challenge.A very useful feature of W3Challs is that the included challenges are labeled with tags that make it possible for participants to filter the challenges based on their preference. Some tags refer to the difficulty level of the challenge, such as Baby, and others to the type of challenge, such as Crypto, which is helpful especially for challenges that fit into more than one category, as multiple tags can be used per challenge. However, most of the tags refer to the type of skills required to solve a given challenge, such as .NET, Android, ARM, Flash, Java, PHP, Python, etc. Filtering challenges based on such tags makes it possible for participants to focus only on those challenges that are related to the specific type of skills they want to practice, which is a great strategy for beginner learners in particular.

10.2.2 Hybrid PlatformsSome online CTF platforms, in addition to typical content in Jeopardy style, also provide other kinds of content. Most typically, this other form of training is in the attack-defense CTF style. As mentioned already, there seem to be no CTF platforms centered exclusively on attack-defend competitions, hence the reason for using this wider category. In what follows we will present some representative examples of such hybrid platforms, shown below in alphabetical order. We note that given the increased difficulty of managing attack-defense CTFs, only commercial platforms appear to support alternative competition styles.10.2.2.1 Hack The BoxHack The Box (HTB) is gamified cybersecurity platform that can be used for skill improvement, certification, and ability assessment [17]. The platform features are organized into several tiers, as follows: HTB Academy for learning basic cybersecurity skills, HTB Labs for improving existing cybersecurity skills, HTB Business for training that targets company employees, and HTB CTF for attending or hosting standard CTF competitions.Each of the tiers has different characteristics that participants should be aware of when making a choice. For example, guided learning and certification are provided for HTB Academy tier training. In what follows, we will focus mainly on the HTB Labs tier, for which the content is split into two categories:Challenges: Typical Jeopardy-style content in which light-weight applications are used to practice different pentesting techniques. Challenges are labeled according to their difficulty, as easy, medium, or hard, so that participants can select them based on their current skill level. In the case of challenges, participants’ objective is to solve that particular problem, hence it can be used to practice individual skills, as it is always the case with Jeopardy-style content.Machines: Instances of vulnerable virtual machines that make it possible to practice more complex CTF skills. The VM virtualized hardware, operating systems and services that run on the Hack The Box company servers. Content in this category too is labeled by difficulty level, such as easy, medium, hard or insane, and have various operating systems available (Linux, Windows, FreeBSD, etc.). For this type of training, the objective is to conduct pentesting on the target VMs and use the identified vulnerabilities to access two flags: a user flag demonstrating the ability to access a low-privilege account on the VM, and a root flag proving the ability to access the highest-privilege account.
In addition to the basic types of content mentioned above, there are also several more specialized forms of training, as follows:Battlegrounds: Virtual environments in which two teams of up to four participants compete with each other for control over the provided environment in accordance with the attack-defend CTF paradigm.Endgames: Virtual environments that simulate real-world networks of typical organizations, which have multiple entry points and attack paths. The main difference with respect to the Machines category mentioned already is that Endgames consist of a set of interconnected VMs, not just one VM, thus representing a more realistic environment.Sherlocks: Scenarios that are aimed at improving defensive skills by providing a gamified narrative in a simulated corporate setting, through which participants can conduct defense-oriented cybersecurity activities, such as malware analysis, threat hunting, etc.
Hack The Box also provides several tools for making participation easier. One of these tools is Pwnbox, which is an online version of the Parrot OS Linux distribution that comes with various pre-installed hacking tools, and which can be used to compete in HTB Labs without installing any software locally. A discussion forum is also included in the platform, where participants who get stuck with a challenge can ask for hints from other players.Based on the above discussion, we conclude that Hack The Box is a very mature online CTF platform, with a rich set of features. It is also worth noting in this context that the HTB Business tier of Hack The Box has been ranked in 2023 as one of the top training platforms by the Forrester Cybersecurity Skills and Training Platforms, Q4 2023 report [4].
10.2.2.2 TryHackMeTryHackMe is a browser-based gamified cybersecurity training platform that provides learning content for participants with various skill levels, from beginner to advanced [32]. A significant amount of the training content is available free of charge, but there are paid premium and business plans that offer additional learning and training capabilities.The CTF content of TryHackMe is mainly conceived to serve as complement to the learning content on the platform, and it is designed to allow participants to practice the skills they have learned via the online lessons. The challenges are organized in units named “rooms,” with each room being labeled with its difficulty level, such as easy, medium, hard or insane. Some of the rooms are of the walkthrough type, providing tutorials on how to achieve various pentesting goals.The TryHackMe challenges typically include a number of tasks that require participants to answer several questions in order to complete each challenge. In this way the platform directs the learning process so as to provide a more structured learning environment compared to regular CTF challenges. Search functionality is also available, making it possible for participants to select from the more than 800 rooms those that are most interesting to them based on several criteria, such as relevance, difficulty level, room type (challenge versus walkthrough), and plan type (free versus subscription).Another important feature of TryHackMe is its support for attack-defend competitions in the “king of the hill” format. In this case, participants must compete against several other players with the goal of compromising a target machine. Simultaneously, they should also try to patch the machine vulnerabilities in order to prevent the other participants from gaining access. When using this CTF format, points are awarded based on how long a participant is able to maintain access to the target machine, as well as for the flags that they are able to discover in the process. Thus, participants are able to practice skills that are directly applicable to various real-world scenarios and job roles.

10.2.3 Online Platform ComparisonIn Table 10.2 we summarize the main characteristics of the online CTF platforms that we have reviewed. The table is split into two sections, with the upper part presenting the Jeopardy-style platforms, and the lower part the hybrid ones.Table 10.2Comparison of online CTF platformsPlatformSpecific featuresChallenge categoriesAvailabilityGoogle CTFCash rewards; Weighted challenge point values; Past event challenges and solutions publishedCrypto, Misc, Pwn, Reversing, Sandbox, WebAnnualHacker101 CTFContent organized in levels labeled with tags; Hints available; Support for groups of playersAndroid, Crypto, GraphQL, Math, Recon, WebAnytimeHackThisSiteOpen learning environment; Basic challenges and realistic missions; Role-playing game approachApplication, Crypto, Forensics, IRC, JavaScript, Steganography, WebAnytimepwnable.krChallenges organized in levels based on difficulty; Intended solutions made available by authorsBug exploitation, Crypto, OS, Programming, ReversingAnytimeSmash The StackSSH-based access; Challenges labeled with difficulty levels; Limited number of challengesApplication, Bug exploitation, OS, Reversing, NetworkAnytimeW3ChallsChallenges labeled with fine-grained skill tags; Support for detailed filtering by tagCrypto, Forensics, Misc, Pwn, Reversing, WebAnytimeHack The BoxPaid tiers include guided learning and certification; tools that facilitate participation; large number of challenges with search functionBlockchain, Crypto, Forensics, Hardware, Misc, Mobile, Pwn, Recon, Reversing, WebAnytimeTryHackMePaid plans include additional learning capabilities; large number of challenges with search functionN/A (text search)Anytime
Specific Features We first enumerate the specific features of each platform that serve as distinguishing factors. For example, Google CTF is the only platforms to provide monetary rewards, and HackThisSite uses a role-playing game approach to increase participant motivation. The support for filtering by fine-grained skills tags is a specific feature of W3Challs.Challenge Categories One important criterion when choosing a CTF platform is the type of challenges that it makes available, and this is even more important for online CTF platforms, where end users cannot typically add new content. For the sake of clarity, in the table we used the same labels for the same concept, even though the documentation of a given platform may use different terms (e.g., Pwn versus Pwning).It is clear that some types of challenges, such as Crypto or Web, are present in almost all platforms. However, we were also able to identify some unique categories, such as Steganography for HackThisSite, or Blockchain for Hack The Box.The TryHackMe platform, however, does not label its challenges with categories, so participants need to read their description to estimate what type of skills may be required for a certain challenge; our analysis indicates that typical topics such as Crypto and Web are covered, but this seems an area in which usability can be improved. On the other hand, a text search function is available, so learners can find challenges that include specific keywords of interest in their descriptions. Moreover, several challenges have the CVE id of the vulnerability that is to be exploited and mitigated in their title and/or description, making it easier to conduct training in connection with a particular vulnerability.Availability Another important aspect is the availability of the CTF platforms. Almost all the platforms we reviewed are available at any time, although the entire content may not necessarily be accessible all the time. However, platforms such as Google CTF are only used for annual events, hence are more useful to test one’s skills and earn recognition, than for actual skill training.Other Platforms There are several other online CTF platforms that we have not introduced so far in this section, and for which we provide below a brief description for further reference:Backdoor CTF1: A Jeopardy-style CTF organized annually by the Software Development Section Laboratories (SDSLabs) student-run technical group at IIT Roorkee, India.CryptoHack2: A fun platform for learning modern cryptography that uses interactive puzzles and challenges to let participants understand deeper ciphers and protocols by trying to hack them.Microcorruption3: A gamified embedded security CTF that can be used to improve skills related to assembly languages, debugging, and memory corruption vulnerabilities.OverTheWire4: A collection of gamified challenges that are organized in the form of multi-level “wargames”; each level includes hints (e.g., what commands may be necessary to solve it).PentesterLab5: A CTF platform with a large number of exercises, although only part of them are free of cost; filtering by difficulty and topic is available.Root Me6: A multi-lingual learning platform regarding hacking and information security with almost 600 challenges and 200 virtual environments.


10.3 Open-Source CTF PlatformsIn contrast with online CTF platforms, open-source ones are not intended to be used directly by trainees. Instead, the source code of the platform is made available via a public repository, such as GitHub. Individuals or organizations interested in using a certain platform must download the source code and install it on their own computers or servers. After installation, the CTF platforms become usable, either by the individuals themselves, or by those organizations, for example, in order to conduct a CTF as part of internal training activities.The need to set up the platform software in advance is an important hurdle in the case of open-source CTF platforms. However, their open-source nature brings a significant advantage compared to online platforms. Thus, by modifying the source code, users can customize the functionality of the platform. More importantly, and perhaps this is the most common use case for open-source platforms, is that organizations can add custom CTF content to them. This is particularly useful when an organization wants to conduct training on very specific tasks related to its internal systems or processes.In what follows, we will introduce several examples of open-source CTF platforms, which are again organized in two categories:Jeopardy-style platforms.Hybrid platforms.
10.3.1 Jeopardy-Style PlatformsAs mentioned already, Jeopardy-style CTFs are the most typical kind of CTF training, and there are several such open-source platforms, as it will be described next (the platforms are presented next in alphabetical order).10.3.1.1 CTFdCTFd is a Jeopardy-style CTF platform developed with the goal of being easy to use and customize [6]. CTFd is implemented using the Python language, and the Flask web framework. The internal database for content and scoring is based on MySQL technology. Out of the box, CTFd includes all the basic features that are needed to run a CTF training activity, such as challenge creation, scoreboard and score graphs, email support, team management, etc. In addition, the functionality of CTFd can be easily extended via the use of plugins and themes.The visualization features of CTFd are very user friendly, including graphs, pie charts and other graphical representations that make it possible for users to understand at a glance what happened during a training event. The platform also includes an administration panel that allows controlling the training activity without any low-level command execution, as well as to create new challenges, categories, hints and flags. We consider that the straightforward mechanism for content creation represents one of the most important features of CTFd.
10.3.1.2 EchoCTF.REDThe echoCTF.RED platform was designed with three main goals: completeness regarding the set of tools and applications for supporting the development, deployment and maintenance of CTF competitions, clear modularity regarding the role of each component, and extensibility in terms of the possibility to easily add new features to the platform components [11]. We note that the commercial company that developed echoCTF.RED also makes it available in the form of an online CTF platform that can be used free of charge at [10].The features of echoCTF.RED include system settings for configuring the platform, scoreboard settings, team settings, player and registration settings, configurable targets and challenges, etc. One interesting aspect is the concept of “activity streams,” which make it possible to view details about the overall activity of players, the activities with respect to a certain target, as well as team-based activities. Moreover, network activity tracking and visualization are also supported. Another interesting feature is the support for publishing competition achievements by means of Twitter (X) and LinkedIn.
10.3.1.3 HaaukinsHaaukins is a virtualization platform for security education developed and maintained by the Network Security Group at Aalborg University and the CyberSkills youth cybersecurity community in Denmark [8]. The platform uses Docker for container virtualization, and VirtualBox for virtual machine creation. The entire functionality of the platform is orchestrated via the Go programming language, which was selected for its support of concurrency and parallelism features. For database functionality, Haaukins leverages PostgreSQL and MongoDB technologies. Additional functionality includes a web client used to control the automated setup of the virtual environment containing the challenges, and support for the Kali Linux and Parrot OS cybersecurity-oriented operating systems as platforms that are to be used by trainees to solve the CTF challenges.An important aspect of Haaukins is that it has a rich set of documentation that covers not only the architecture of the platform and its installation, but also the included challenges [7]. In particular, the challenges made available in Haaukins are grouped in the following five categories: binary, cryptography, forensics, reverse engineering, and web exploitation. For each challenge, in addition to the challenge description, the number of points to be gained, the difficulty level, the main learning objective, and knowledge prerequisites are also explained. Moreover, the way in which new challenges can be created is also thoroughly documented with clear technical details, making content addition relatively easy, and representing a differentiating factor with respect to other platforms.
10.3.1.4 HackTheArchHackTheArch is a CTF scoring server implemented using Ruby on Rails by the Military Cyber Professionals Association (MCPA) in the U.S. The goal of the project is to facilitate CTF competitions by providing a generic scoring server that makes it easy to add and modify challenges, and to track statistics of CTF events [24].The authors created HackTheArch as a tool that allows users to perform tasks that were not possible in other platforms at the time, such as providing hints to participants for a cost, and to create and modify challenges via a web interface. Consequently, the platform implements an optional dynamic hint system that will deduct points from a participant’s score when they request hints. Moreover, a web interface is made available in HackTheArch for creating and modifying hints and challenges via a graphical UI.
10.3.1.5 MkCTFThe mkCTF framework was developed to support the creation of Jeopardy-style CTF challenges by using a configurable structure that makes it possible to efficiently integrate and deploy the content on the server infrastructure of the competition [23]. The platform implementation is using the Python programming language. The functionality of the mkCTF framework covers the following main aspects: creation of challenges, their building and deployment, as well as monitoring participants progress in those challenges.The mkCTF project was initially created as a way to manage the challenges for the CTF held at the INS’hAck 2017 conference that took place at INSA Lyon, France. The challenges and write-ups of the past editions of INS’hAck are also linked via the mkCTF repository, constituting a useful resource both for the creation of CTF content, as well as for preparing for a CTF event.
10.3.1.6 MellivoraMellivora is a CTF engine written in PHP for hosting Jeopardy-style competitions [26]. The platform has a rich set of features, such as arbitrary categories and challenges, scoreboard with optional multiple team types, manual or automatic free-text submission scoring, challenge hints, dedicated pages for team progress and challenge overview, a management console with the competition overview, etc. The officially supported configuration for Mellivora is based on the LAMP common software stack for the web applications, namely Ubuntu, Apache, MySQL, and PHP.In addition to local storage, Mellivora also supports Amazon S3 for challenge file upload. The implementation is considered to be lightweight and fast, making it possible to run even large competitions on an Amazon Elastic Compute Cloud (EC2) micro instance. As a specific feature, the platform provides support for the reCAPTCHA system to protect the competition website from bots. Moreover, the internal logs of the engine can be used to catch any exceptions that may happen during an event, making it possible for administrators to detect any issues with the platform itself. However, Mellivora does not provide graphic tools for monitoring participant progress in a visual manner.
10.3.1.7 PicoCTFThe picoCTF platform was developed as the infrastructure used to run the picoCTF competition organized by Carnegie Mellon University. The platform can be used to host Jeopardy-style CTFs, and it was designed so as to be adaptable to other cybersecurity or programming competitions [5]. Although the development in the public repository was frozen in 2022, picoCTF still represents a very useful resource in the field of CTF platforms.The picoCTF project is organized in several modules, such as picoCTF-web for the website and APIs, and the picoCTF-shell utility that is used to create, package, and deploy the CTF challenges. The actual challenges are configured via two modules: problems, which contains the CTF challenge source code, and ansible, which contains scripts used to configure the corresponding CTF hosts accordingly. Examples of methods for deploying picoCTF are also included, both for local deployment via the Vagrant package for virtualization management, and remote deployment via the Terraform software for defining and provisioning cloud resources.

10.3.2 Hybrid PlatformsSome open-source CTF platforms provide additional features in comparison with the regular Jeopardy-style format, typically in the attack-defense category. In what follows, we discuss some representative examples of such hybrid platforms, which are presented below in alphabetical order.10.3.2.1 CTF GameserverCTF Gameserver is a platform for attack-defense CTFs that is used to host the FAUST CTF, which is run by the CTF team of Friedrich-Alexander University Erlangen-Nürnberg, Germany [13]. The platform is, however, designed so that it can be utilized for other competitions, being scalable and customizable. Note that CTF Gameserver does not include facilities for creating the network infrastructure, setting up the VPN setup, or creating target hosts with vulnerabilities. Consequently, the network facilities need to be prepared independently by following the instructions on the platform webpage regarding expected properties.The implementation uses a Django-based web application as front end for tasks such as team registration, scoreboard display, and hosting of information pages. It uses a PostgreSQL database for storing the related data, and runs on servers based on Debian OS or derivatives. It also contains the model files, which define the database structure. Other platform components include a controller for coordinating the progress of the competition, a checker that places and retrieves flags, a submission server for captured flags, and so on. Checking the flags is implemented via scripts that support the Python and Go programming languages.
10.3.2.2 Facebook CTFFacebook CTF (FBCTF) is a platform for hosting both Jeopardy style and “king of the hill” (KOTH) style of CTF competitions that was developed by Facebook [12]. The platform is scalable, and it is said that it can be used to organize competitions with hundreds of participants. The implementation is based on the PHP programming language, and it uses MySQL as database storage technology. A production mode is available for those who only want to use the platform, and the development mode can be used when extensions are planned. Note, however, that the repository has been archived, and is in a read-only state since 2020.The FBCTF platform has a rich functionality. Some aspects are aimed at competition organizers and facilitate the administration of CTF events via several built-in features, such as a game configuration page, player registration features, team management features, and even LDAP-based authentication. A timer is available for controlling the duration of the competition, although events without a time limit are also possible. Moreover, several languages can be selected via the user interface.For the Jeopardy-style content, organizers can choose between Quiz and Flag formats. For a Quiz challenge, the quiz title and question must include all the information needed in order to complete the challenge. For a Flag challenge, attachments and links can be embedded, such as an image containing steganography information, or a website that is to be exploited. Categories can also be assigned to this type of challenge to allow for their easier identification.The attack-defend type of challenge is named Bases, where a base represents a target system which must be compromised by participants in order to be awarded points. This is a KOTH type of game, where the participating teams must compete over the control of these target systems. Points are awarded both for the initial capture of a base, but also over time, for the period during which the base is controlled by a given team. To make this functionality possible, an agent operating as a scoring bot must be installed on the target system, and report regularly to the scoring server via HTTP the controlling team name and number of awarded points.The main strength of FBCTF is the high flexibility of the platform that makes it possible to configure a variety of settings via its administration panel. The support for CTFs in multiple languages is also a specific feature of this platform, since most other platforms only provide an English language interface.
10.3.2.3 HBCTFHBCTF is a hybrid CTF platform developed by the HackBama group of information security industry professionals from Alabama, U.S. [18]. The platform is implemented in Python, and the Apache CouchDB database software is used for the database storage implementation.The hybrid type of CTF competition that can be conducted using HBCTF combines service hacking and patching aspects, with the search for Jeopardy-style flags. Moreover, the players have to compete with each other for the control of strategic network hosts. Competitions based on HBCTF are carried out as a three-step process. First, players have to check in into the competition server and submit the IP address and port number for the service they are protecting. As the second step, layers receive a score token in return. If they are able to decrypt it, then the token is submitted to receive the corresponding number of points.HBCTF is basically just a backend server for CTF competitions, and no graphical user interface is available to facilitate management. The development status also seems relatively crude, and no updates have been published in recent years in the public GitHub repository of the platform.
10.3.2.4 iCTFThe iCTF framework was initially developed by the UC Santa Barbara Computer Security Lab to host their own CTF event [33]. The main focus of the platform is on attack-defend type of CTFs, but other formats are also said to be within its scope. The framework leverages virtualization technologies to create the training environment necessary to conduct a competition. In particular, iCTF creates one virtual machine (VM) used by the event organizers to manage the event, and one VM for each participating team that is utilized to solve the CTF challenges.The main components of the iCTF framework are as follows: a central database for tracking the competition state, a score bot that checks and updates flags for vulnerable services, and a dashboard user interface for showing the scoreboard and allowing players to submit flags. In addition, various tools are provided to manage other aspects, such as routing configuration, VM creation and the built-in services.
10.3.2.5 kCTFThe kCTF platform is not a full-fledged CTF platform, but a Kubernetes-based infrastructure for organizing CTF competitions that is being developed as open source by Google [16]. The main requirement for using kCTF is to have a Linux server on which Docker is installed. Then, it is simply a matter of creating a local Kubernetes cluster in order to be able to run local CTF challenges.The platform also has various built-in services that address the typical needs of CTF competitions, including mechanisms for creating and verifying proof-of-work challenges to prevent brute-force attacks. Other useful features cover functionality for conducting infrastructure health checks, generating DNS and SSL certificates, sharing files, etc.The kCTF platform does not provide a web-based GUI neither for administrators, nor for participants. Instead, kCTF is entirely operated via command line, for instance, in order to start and manage challenges, check their status, view the challenge logs, and so on. Consequently, the barrier to entry for using kCTF is higher compared to the other platforms presented.
10.3.2.6 NightShadeNightShade is a simple CTF framework that was designed to make running CTF competitions as easy as possible [1]. The framework is implemented in JavaScript and Python, and uses MySQL for the content and statistics database. The implementation is quite basic, combining the scoreboard with the challenge questions into a single interface panel. NightShade also includes support for displaying user profiles that show relevant information about participants, such as which contests they have joined, which questions they have solved, etc. The list of all competitions hosted by a given administrator can also be viewed.The NightShade platform makes it possible to organize three types of CTF competitions, as follows:Jeopardy style: This mode supports standard Jeopardy-style CTFs, in which the challenge categories are displayed as rows in the left-hand side of the page, and the number of points for each challenge as cells in a matrix; solved challenges are identified via a check mark.Traditional style: This mode addresses CTF events in which the challenges take main stage. Thus, the name of a challenge is displayed first, with a check mark in case the challenge was already solved. Related information is shown next to it, such as the category the challenge is part of, the number of points associated to it, and how many people have already solved it.Blind style: This mode supports penetration testing-like exercises, in which the challenge page displays the one or more IP addresses of the target hosts, and the participants must first connect to those hosts. By exploring the files and services on each host, trainees must identify any existing vulnerabilities and exploit them in order to retrieve the flags that are placed at unspecified locations. No information about the challenge difficulty (i.e., the number of points to be gained by solving it) is provided for this type of training.
The main strength of NightShade is the support for several CTF competition modes, as it was discussed above. However, the platform user interface is relatively simple, and no information about the event is displayed graphically. This makes it more difficult for organizers and participants to ascertain the status of a competition at a glance.
10.3.2.7 Root the BoxRoot the Box is a scoring engine for CTF competitions that can be easily configured and modified for any style of CTF [25]. The platform makes it possible to create an environment with realistic challenges for cybersecurity training and has a customizable and appealing user interface. The implementation is Python based.The main features of the platform are as follows: support for both individual and team play, real-time animated scoreboard, graphs and status updates, support for chat and file sharing features for teams, etc. Root the Box also makes it possible to use several types of flags, such as static text, regular expressions, date/time, multiple choice flags, as well as files. The platform also supports a wide range of choices with regard to penalties, hints, number of attempts, level bonuses, and so on.In addition, several other specific features are included in Root the Box. For example, the participants can create in-game botnets by uploading small bot programs to the target machines they have compromised. When using this feature, the teams are periodically rewarded in-game money for each bot in their botnet. The platform also enables the use of in-game money that can be used to unlock new training levels, buy hints for challenges, or even bribe the fictitious in-game police to attack other teams. Moreover, the encrypted bank account passwords for each team are publicly displayed, allowing participants to try to crack them and steal the funds of other participants. All these features make it possible to create a realistic hacker world experience within the game.Another distinguishing functionality of Root the Box compared to other CTF platforms is the possibility to use an optional story mode in which one can add an introduction message for the competition, as well as messages to be displayed when a flag is captured or a section is completed, with built-in support for graphic files. The use of all the gamification elements described so far increases the entertaining nature of the event, and further motivates the participants.
10.3.2.8 SecGenSecurity Scenario Generator (SecGen) is not an actual CTF platform, but rather a CTF support tool. Nevertheless, its functionality is very useful in the CTF context, as SecGen makes it possible to generate randomized vulnerable virtual machines [29]. The VMs are created based on a scenario specification that describes the constraints and properties of the VMs to be generated. SecGen is implemented in Ruby and uses XML as configuration language. The external software tools Puppet for system configuration management and Vagrant for virtualization management are leveraged to provision the required VMs.According to an example described by the SecGen authors, it is possible to specify generically the creation of a system that has a remotely exploitable vulnerability resulting in user-level compromise, and a locally exploitable flaw resulting in root-level compromise. Based on this scenario, SecGen would create a VM that includes two randomly selected vulnerabilities of the specified type. From a training participant perspective, such a scenario would require discovering and exploiting both vulnerabilities in order to be able to obtain root access to the system. More specific scenario description mechanisms are also available, such as indicating the types of services that should have vulnerabilities (e.g., FTP, SMB, etc.), or even identifying specific vulnerabilities to be included by their CVE id.

10.3.3 Open-Source Platform ComparisonIn Table 10.3 we summarize the main characteristics of the open-source CTF platforms that we have reviewed. The table is split into two sections, with the upper part presenting the Jeopardy-style platforms, and the lower part the hybrid ones.Table 10.3Comparison of open-source CTF platformsPlatformImplementationLast updateDocumentationCTFdPython, JavaScript, MySQL2024GoodechoCTF.REDPHP, JavaScript2023GoodHaaukinsGo, PostgreSQL2022ExcellentHackTheArchRuby, HTML2019BasicmkCTFPython2023GoodMellivoraPHP, MySQL2022BasicpicoCTFPython, JavaScript2021GoodCTF gameserverPython, HTML, JavaScript, Go2024ExcellentFacebook CTFHack (PHP), JavaScript, MySQL2018GoodHBCTFPython2017BasiciCTFPython2015BasickCTFGo2023ExcellentNightShadeJavaScript, Python, MySQL2017BasicRoot the boxPython, HTML, JavaScript2024GoodSecGenRuby, Python, XML2024Excellent
Implementation One important aspect of open-source CTF platforms is what languages and tools are utilized for their implementation. This is because if a potential user does not master those language or tools, using the platform, and especially extending its functionality become hard.Our comparison shows that most platforms are implemented in Python, with PHP being in second place, and JavaScript is also often used for the web features. However, the Go and Ruby languages are also employed in a few cases, such as Go for Haaukins, and Ruby for SecGen. As for database support, MySQL is by far the most popular choice.Last Update Another important issue regarding open-source CTF platforms is whether they are still in active development. The time when a platform was last updated is an important indicator in this sense (the information included in the table was retrieved at the time of writing). For some platforms the status is explicitly mentioned on its page. For example, picoCTF developers mention that it is no longer maintained, and CTFd or kCTF are recommended instead.For other platforms, however, the year of the last update, such as 2015 for iCTF, and 2017 for HBCTF and NightShade, should be used as indication that no support is to be expected. Nevertheless, if the existing features are sufficient, and one is willing to take on the task of adding new ones if needed, then those platforms can also be selected as potential candidates for deployment. However, if support from the original developers is important, then selecting a platform that has been recently updated is recommended.Documentation Documentation is also a significant factor when selecting an open-source CTF platform. Several of the platforms we reviewed make have only a minimal amount of documentation available, such as Mellivora, but most of them provide sufficient information to get the users started. Some platforms, however, excel from this point of view, including also information about challenge creation, platform design, and even a security threat model, as is the case for kCTF.Based on the above analysis, we suggest that interested users select a platform that was recently updated and has good or excellent documentation, such as CTFd, echoCTF.RED, Haaukins, or mkCTF, for the Jeopardy-style platforms, or CTF Gameserver, kCTF or Root the Box, for the hybrid ones. The programming language can be another factor in the decision, depending on one’s programming abilities. We note that some of the platforms presented here are not just released for public use, but also utilized by their respective developers to conduct CTF competitions, which further demonstrates their reliability. This is the case for echoCTF.RED, as it was mentioned in its description, but also for Haaukins, for example, that is utilized for the online training events organized by CyberSkills.7


10.4 DiscussionIn this section we will review several potential issues and some possible solutions regarding CTF platforms, as well as provide additional resources for readers who want to learn more about CTFs.10.4.1 Potential IssuesDespite their many advantages, the use of CTF platforms also entails several potential issues, that we review below.Platform Choice Since we have reviewed a significant number of CTF platforms in this chapter, it is important to mention that one potential issue when faced with so many choices for CTF platforms is that it may be difficult to decide which one is most suitable, either to attend as a participant, or to deploy as an organizer.To address this problem, the report in [2] presents a CTF platform evaluation methodology that relies on two different techniques. For online CTF platforms, usability is evaluated using the system usability scale (SUS) [28], and for open-source ones the criteria-based quantitative software assessment [22] is utilized. We consider that interested parties can apply the methodology described in the mentioned report to evaluate potential CTF platform candidates according to their own requirements.Intrinsic Problems The relatively low barrier to entry for attending CTFs makes them one of the most common forms of cybersecurity training. However, CTF-based training also has several disadvantages that need to be taken into consideration by organizers, especially when this training format is used to assess the skills of the participants. Some of these issues include:Flags in CTFs are obtained as the last step of solving the challenge, but their submission provides no information about the method used to obtain the flag, meaning that instructors have no idea regarding the thought processes followed by participants. While this may not be an issue for very basic challenges, more complex ones may require following best practices for the learning to be most effective. To counter this disadvantage, more advanced forms of training, such as those based on cyber ranges, make it possible to save the interactions between the trainee and the environment, such as command shell history, making is possible to evaluate the challenge solving method as well.Given that flags are simple pieces of information, it is possible in principle to communicate a flag to other participants, who can submit it and receive the assigned number of points. While this form of cheating is not encountered in competitions that participants are strongly motivated to win, it can happen in company or university training events, in which the results of a participant do not affect those of the others. To prevent such cheating issues, one possibility is to create unique flags that are assigned independently to each participant, so that any given flag is only valid for the corresponding challenge of a certain participant.Security Issues The nature of CTF platforms leads to a series of security-related issues that can potentially affect their operation, as follows:CTF platforms are often used by participants who only provide minimal information upon registration. Consequently, participants with malicious intents may join a competition and try to increase their rewards by cheating, especially when monetary rewards are involved. In worse cases, malicious participants may even try to exploit vulnerabilities in the CTF platform software to gain access to the organizer IT infrastructure.For open-source platforms, the code contributions of many developers create risks in the sense that those developers could add source code that contains vulnerabilities, either unknowingly or with malicious intent. Such vulnerabilities could then be exploited by malicious participants to obtain an unfair advantage (e.g., via the use of backdoors).
While several of the platforms we have reviewed mention that cheating will lead to penalties and even disqualification, it is not clear how cheating can be detected in those platforms. As always, security by obfuscation is not an actual solution, and we consider that more transparency is required from this perspective, especially for the open-source CTF platforms.In addition, we believe that a security threat model should be published for each CTF platform, including the online ones. However, among the platforms we have reviewed, only kCTF developers discuss such a threat model in a dedicated documentation section that covers various security considerations regarding the managed assets, risks, and potential attackers.8

10.4.2 Additional ResourcesAs supplement to the discussion of CTF platforms presented in this chapter, we want to point readers to the wealth of information available in the curated collection of CTF-related resources published in the Awesome CTF repository [30]. That page includes a comprehensive list of online CTF platforms in the section named Wargames, and links to open-source CTF platforms in the section named Platforms. In addition, the resource collection also includes information about tools that can be used to create and solve CTF challenges, various operating systems, and even a list of free CTF tutorials.Another very useful resource specifically for those interested in actually attending CTF competitions is the CTFtime website9 that provides up-to-date information about past and future CTFs. One very helpful aspect of CTFtime is that the listed CTF events are assigned a weight depending on their perceived difficulty. We consider that this weight can be used by potential participants to select an event that matches their skill level, thus ensuring that they make the most out of the competition, both in terms of learning effectiveness, as well as enjoyment.

References1.Akama, NightShade GitHub page. https://​github.​com/​akama/​NightShade. Accessed 1 July 2024
2.Azam MHN, Beuran R (2018) Usability evaluation of open source and online capture the flag platforms. Technical report IS-RR-2018-
