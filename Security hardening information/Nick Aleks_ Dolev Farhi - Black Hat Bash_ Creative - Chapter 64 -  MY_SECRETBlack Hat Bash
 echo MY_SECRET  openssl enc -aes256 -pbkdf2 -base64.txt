# Security Chapter Extract
Book: Nick Aleks_ Dolev Farhi - Black Hat Bash_ Creative Scripting for Hackers and Pentesters (2024, NO STARCH PRESS, INC) - libgen.li (1)
Chapter: 64 - $ MY_SECRET="Black Hat Bash"
$ echo "${MY_SECRET}" | openssl enc -aes256 -pbkdf2 -base64
Security Relevance Score: 3
Word Count: 198
Extracted: 2025-06-13 23:40:57

---

$ MY_SECRET="Black Hat Bash"
$ echo "${MY_SECRET}" | openssl enc -aes256 -pbkdf2 -base64

Listing 12-23: Encrypting text with OpenSSL
You should be prompted to enter a password twice. In this case, we use nostarch as the password. OpenSSL should then output the ciphertext:
enter AES-256-CBC encryption password:
Verifying - enter AES-256-CBC encryption password:

U2FsdGVkX18u2T5pZ+owj/NU0Y8e6 + 2uCZQa2agr5WI=

To decrypt the ciphertext, supply the password with the -d parameter (Listing 12-24).
$ echo "U2FsdGVkX18u2T5pZ+owj/NU0Y8e6 + 2uCZQa2agr5WI=" | openssl aes-256-cbc -d -pbkdf2 -base64
enter AES-256-CBC decryption password:
Black Hat Bash

Listing 12-24: Decrypting the ciphertext
This should output the original message.
Exercise 28: Writing Substitution Cipher Functions
In this exercise, you’ll scramble text by using a simple substitution cipher, ROT13, which encrypts text by shifting each character in a message by 13 letters in the alphabet. For example, a becomes n, and n becomes a. To the human eye, the resulting ciphertext won’t make a lot of sense. For example, consider the character substitutions for No Starch Press (Figure 12-1).

Figure 12-1: Rotated characters in No Starch Press

In a bash script, sed provides an easy way to replace letters in a string with others. Consider the command in Listing 12-
