# Security Chapter Extract
Book: Michael Kofler - Scripting_ Automation with Bash, PowerShell, and Python (2024, Rheinwerk Publishing) - libgen.li
Chapter: 12 - 4). In this way, you can avoid repeatedly entering the password for your account on the remote computer.
To set up a new connection to an external computer, you must run (F1) Remote-SSH: Add new ssh host and then—in a terminal—enter the ssh user@hostname command. VS Code stores the data in .ssh/config but does not establish a connection for the time being.
The connection is established via (F1) Remote SSH: Connect to host or via the green Remote area in the status bar. VS Code uses the ssh command to establish a connection and accordingly analyzes the keys stored in the .ssh directory.
Once the connection has been successfully established, VS Code opens a new window, with the green area in the status bar making it clear that non-local data is being processed. From that moment on, VS Code will work as usual: You can select a directory, edit the files it contains, save your changes, and so on. The terminal area of VS Code is also extremely useful in remote operation. The terminal also runs remotely, so you can execute commands on the remote computer in it just like in an SSH session.
Security Relevance Score: 2
Word Count: 553
Extracted: 2025-06-13 23:41:06

---

4). In this way, you can avoid repeatedly entering the password for your account on the remote computer.
To set up a new connection to an external computer, you must run (F1) Remote-SSH: Add new ssh host and then—in a terminal—enter the ssh user@hostname command. VS Code stores the data in .ssh/config but does not establish a connection for the time being.
The connection is established via (F1) Remote SSH: Connect to host or via the green Remote area in the status bar. VS Code uses the ssh command to establish a connection and accordingly analyzes the keys stored in the .ssh directory.
Once the connection has been successfully established, VS Code opens a new window, with the green area in the status bar making it clear that non-local data is being processed. From that moment on, VS Code will work as usual: You can select a directory, edit the files it contains, save your changes, and so on. The terminal area of VS Code is also extremely useful in remote operation. The terminal also runs remotely, so you can execute commands on the remote computer in it just like in an SSH session.

Figure 13.2    
            Editing a Bash Script in VS Code on the External Linux Server (eine-firma.de)
13.3.2    Limitations
Now, before you start thinking this is too good to be true, I must point out two limitations:


VS Code installs a large amount of code (typically several hundred MBs!) on the remote machine into the .vscode-server directory and executes this code in that directory. For syntax checking and debugging, VS Code on your notebook communicates with the extension code on the remote machine.
For this process to work smoothly, the remote computer requires sufficient storage space (both disk space and RAM), enough computing power, and an excellent network connection. Otherwise, working in VS Code is not much fun.


VS Code also reaches its limits when you want to edit system files. No function is comparable to sudo. Thus, VS Code only allows access to the files that an SSH user is also allowed to read. For scripting, this access is sufficient, but for changing a configuration file in the /etc directory, you still need an editor, which you can run in text mode using sudo.










14    GitGit is a version control system typically used when many people collaborate on a complex project. Thanks to Git, multiple branches of a program can then be managed, and changes can be tracked and reverted if necessary. At first glance, scripting and Git do not go together: Scripts are small files that are often created by just one developer. Version management with Git seems therefore superfluous.But this impression is not quite true. Scripting and Git can be combined wonderfully:

Git can document the development process for small script collections: It serves as a backup, and it helps distribute scripts across multiple target machines in a straightforward manner.


Some development operations can be automated by calling the git and gh commands in scripts.


Git can execute what are called hooks for certain operations. Hooks are scripts you create that, for example, perform basic testing before a commit or take care of deployment after a commit.


Prerequisites for This Chapter
To get the most out of this chapter, you should already be familiar with SSH keys (see
