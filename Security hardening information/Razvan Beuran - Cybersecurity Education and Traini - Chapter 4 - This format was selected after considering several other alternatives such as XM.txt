# Security Chapter Extract
Book: Razvan Beuran - Cybersecurity Education and Training (2025, Springer Nature Singapore) - libgen.li
Chapter: 4 - This format was selected after considering several other alternatives, such as XML and JSON. The advantages and disadvantages of this choice will be examined next.We note at this point that using a binary representation format was not considered as an alternative for CyTrONE, since supporting that format would have required a significant implementation effort for developing and maintaining the graphical user interface that would have been needed to generate files in that format. This implementation cost would have, then, prevented our dedication to the development of the core functions of the framework.12.5.3.1 AdvantagesThe use of YAML format for training content representation has several important advantages, as follows.Readability When considering the ease that we envisaged for training content creation and update, readability is a key aspect. Compared to other text-based formats, such as XML and even JSON, YAML is much easier to read, and content creators can easily add new text or syntax items to it without any special procedures.Easy Processing YAML files are easy to process, since dedicated libraries exist in Python, which is the main language used to implement CyTrONE, as well as in many other languages. In particular, the library that we used is called PyYAML.2 This library provides a complete parser for YAML v1.1, support for Unicode, and other features, representing an excellent solution for our use case.Moreover, the syntax of YAML files makes it possible to also check that all the keywords used in a representation file are correct. This makes it possible to verify the input files and avoid possible execution errors during the training activity creation stage, which can be costly.Easy Generation YAML files are also easy to generate, as the PyYAML library mentioned above supports the output of Python objects in YAML format. In fact, we have used this feature to output a human-readable representation of the properties of the cyber ranges created by CyRIS, so that instructors can verify the settings, and also use them for additional purposes (e.g., cyber range visualization).
Security Relevance Score: 7
Word Count: 1186
Extracted: 2025-06-13 23:41:15

---

This format was selected after considering several other alternatives, such as XML and JSON. The advantages and disadvantages of this choice will be examined next.We note at this point that using a binary representation format was not considered as an alternative for CyTrONE, since supporting that format would have required a significant implementation effort for developing and maintaining the graphical user interface that would have been needed to generate files in that format. This implementation cost would have, then, prevented our dedication to the development of the core functions of the framework.12.5.3.1 AdvantagesThe use of YAML format for training content representation has several important advantages, as follows.Readability When considering the ease that we envisaged for training content creation and update, readability is a key aspect. Compared to other text-based formats, such as XML and even JSON, YAML is much easier to read, and content creators can easily add new text or syntax items to it without any special procedures.Easy Processing YAML files are easy to process, since dedicated libraries exist in Python, which is the main language used to implement CyTrONE, as well as in many other languages. In particular, the library that we used is called PyYAML.2 This library provides a complete parser for YAML v1.1, support for Unicode, and other features, representing an excellent solution for our use case.Moreover, the syntax of YAML files makes it possible to also check that all the keywords used in a representation file are correct. This makes it possible to verify the input files and avoid possible execution errors during the training activity creation stage, which can be costly.Easy Generation YAML files are also easy to generate, as the PyYAML library mentioned above supports the output of Python objects in YAML format. In fact, we have used this feature to output a human-readable representation of the properties of the cyber ranges created by CyRIS, so that instructors can verify the settings, and also use them for additional purposes (e.g., cyber range visualization).
12.5.3.2 DisadvantagesAs shown below, we were not able to identify many disadvantages of using the YAML format in CyTrONE. Consequently, we consider that relying on this format for content representation was also a beneficial decision.No Built-in Support YAML is not available as a standard built-in feature of Python. Therefore, an appropriate library, such as PyYAML, needs to be installed before using this format, which is somewhat cumbersome, and it increases the number of dependencies of the platform.Whitespace Issues In the YAML format, indentation is used to indicate to which upper-level element a certain element belongs to. If multiple users employ different editors to modify the same file, sometimes it is possible to have a mixture of tabs and spaces used together as whitespace characters to represent such indentation.This situation can cause issues with parsing those files, and the errors indicated by the parser are typically hard to understand. Consequently, one must take care not to mix whitespace characters in YAML files (note that this issue is also encountered for Python files, which use indentation in a similar manner).

12.5.4 Other ConcernsIn what follows, we will discuss several other aspects related to our experience with designing and implementing the CyTrONE framework.Guest OS Choice Cybersecurity training platforms must provide several choices of OSs for the machines in the training environment, i.e., guest VMs in the case of CyTrONE. Without such choices, the instructors may not be able to create the desired training content, as many cybersecurity issues are OS dependent. In CyTrONE, CentOS is the fully supported guest OS, but the use of Ubuntu as well as Windows is also possible to a large extent, with several versions being supported for each OS.However, the implementation effort that is required to support a new OS must be carefully considered in order to make an informed decision on whether support for it should be added or not. In particular, supporting all the custom cyber range creation tasks in CyTrONE required non-trivial programming skills.Host OS Choice The balance between OS choice and implementation effort is also important for the case of the host OS, although to a lesser extent, since only platform administrators are affected by this decision. For CyTrONE, we decided to support exclusively Ubuntu Long-Term Support (LTS) as a host OS. This is because Ubuntu is a sufficiently user-friendly operating system, and the LTS releases only occur once every two years.Nevertheless, a dedicated implementation effort was required even with this restrictive choice, since CyTrONE was in continuous development over a long period. Specifically, this meant supporting the four OS versions from Ubuntu LTS 16.04 to Ubuntu LTS 22.04, each time fixing the functionality that stopped working because of minor specification differences (e.g., the behavior of the KVM libraries).Sample Content Learning how to create cybersecurity training content for a new training platform can be quite challenging. The best way to facilitate this process is to provide sample training content and related resources (such as VM base images), so that instructors can experiment with training environment creation, and understand the features of the platform. Moreover, the sample content can be used as a starting point for creating new training content by extending the included samples.We also envision that, if a cybersecurity training platform is used in multiple organizations, those organizations could share the training content with each other to create an ecosystem of training content sets that can be used by others either as it is, or can be adapted to the needs of each organization.3
Security Assessment As discussed already in the context of CTF platforms (see Sect. 10.​4.​1), given that cybersecurity training has a sensitive nature, the training platform itself needs to be assessed from a security perspective, and ideally a security threat model should be built for it.In the case of CyTrONE, intermodule communication was secured via the use of the HTTPS protocol, and passwords are securely encrypted when stored on disk. As for the training content representation, some issues were discovered that made it possible to conduct “command injection” like attacks. While those issues were fixed, it is possible that other such injection vulnerabilities still exist. However, our threat model is that the content representation files are only accessible to instructors, who are assumed to have no malicious intentions; hence, we consider the security risk to be limited from this point of view.In general, although there is no dedicated methodology for securing cybersecurity training platforms, we recommend following well-known best practices from the area of secure software development for this purpose, including secure web application development techniques, if necessary.

References1.Advanced Distributed Learning (ADL) Initiative: SCORM overview. https://​adlnet.​gov/​past-projects/​scorm/​. Accessed 1 Jul 2024
2.Beuran R, Inoue T, Tan Y, Shinoda Y (2019) Realistic cybersecurity training via scenario progression management. In: IEEE European symposium on security and privacy workshops (EuroS &PW 2019), workshop on cyber range applications and technologies (CACOE’19), pp 67–76
3.Beuran R, Pham C, Tang D, Chinen K, Tan Y, Shinoda Y (2018) Cybersecurity education and training support system: CyRIS. IEICE Trans Inf Syst E101-D(3):740–749
4.Beuran R, Tang D, Pham C, Chinen K, Tan Y, Shinoda Y (2018) Integrated framework for hands-on cybersecurity training: CyTrONE. Comput Secur 78C:43–
