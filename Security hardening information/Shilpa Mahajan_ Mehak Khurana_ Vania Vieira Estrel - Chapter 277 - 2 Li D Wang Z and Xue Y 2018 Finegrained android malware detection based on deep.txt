# Security Chapter Extract
Book: Shilpa Mahajan_ Mehak Khurana_ Vania Vieira Estrela - Applying Artificial Intelligence in Cybersecurity Analytics and Cyber Threat Detection (2024, WILEY) - libgen.li
Chapter: 277 - 2 Li, D., Wang, Z., and Xue, Y. (2018). Fine‐grained android malware detection based on deep learning. In: 2018 IEEE Conference on Communications and Network Security (CNS), 1–2. IEEE.
3 Venkatraman, S. and Alazab, M. (2018). Use of data visualisation for zero‐day malware detection. Security and Communication Networks 2018.
4 Raheja, S. and Munjal, G. (2021). Classification of Microsoft office vulnerabilities: a step ahead for secure software development. Bio‐inspired Neurocomputing 381–402.
5 AV‐Comparatives, Android Test 2019 – 250 Apps, 2019, https://www.avcomparatives.org/tests/android-test-2019-250-apps/.
6 P. Wang and B. Li, “Vehicle Re‐Identification Based on Coupled Dictionary Learning,” 2018.
7 Raheja, S. and Munjal, G. (2016). Shagun: analysis of linux kernel vulnerabilities. Indian Journal of Science and Technology 9: 12–29.
8 Asma Razgallah, Raphaël Khoury, Sylvain Hallé, Kobra Khanmohammadi A survey of malware detection in Android apps: recommendations and perspectives for future research (2021).
9 Hasegawa, C. and Iyatomi, H. (2018). One‐dimensional convolutional neural networks for Android malware detection. In: Proceedings – 2018 IEEE 14th International Colloquium on Signal Processing and its Application, CSPA 2018.
10 Feng, P., Ma, J., Sun, C. et al. (2018). A novel dynamic Android malware detection system with ensemble learning. IEEE Access 6: 30996–31011.
11 Xu, K., Li, Y., Deng, R.H., and Chen, K. (2018). DeepRefiner: multi‐layer android malware detection system applying deep neural networks. In: 2018 IEEE European Symposium on Security and Privacy (EuroS&P), 473–487. IEEE.
12 Khanmohammadi, K., Khoury, R., and Hamou‐Lhadj, A. (2019). On the use of API calls to detect repackaged malware apps: challenges and ideas. In: The 30th International Symposium on Software Reliability Engineering, ISSRE 2019.
13 Saracino, A., Sgandurra, D., Dini, G., and Martinelli, F. (2016). MADAM: effective and efficient behavior‐based Android malware detection and prevention. IEEE Transactions on Dependable and Secure Computing 1–14. https://doi.org/10.1109/TDSC.2016.2536605.
14 Zangief, Gfan Provides You Free Android Apps and Games, 2017, http://appcakefans.com/gfan-provides-you-free-android-apps-and-games/.
15 Canfora, G., Medvet, E., Mercaldo, F., and Visaggio, C.A. (2015). Detecting Android malware using sequences of system calls. In: Proceedings of the 3rd International Workshop on Software Development Lifecycle for Mobile, 13–20. ACM.
16 Khanmohammadi, K., Ebrahimi, N., Hamou‐Lhadj, A., and Khoury, R. (2019). Empirical study of android repackaged applications. Empirical Software Engineering. https://doi.org/10.1007/s10664-019-09760-3.
17 Alzahrani, N. and Alghazzawi, D. (2019). A review on Android ransomware detection using deep learning techniques. In: Proceedings of the 11th International Conference on Management of Digital EcoSystems, 330–335.
18 Chen, T., Mao, Q., Yang, Y. et al. (2018). TinyDroid: a lightweight and efficient model for Android malware detection and classification. Mobile Information Systems 2018: 4157156:1–4157156:9, https://doi.org/10.1155/2018/4157156.
19 Sarma, B.P., Li, N., Gates, C. et al. Android permissions: a perspective combining risks and benefits. In: Proceedings of the 17th ACM Symposium on Access Control Models and Technologies, SACMAT ’12, 13–22. New York, NY, USA: ACM. https://doi.org/10.1145/2295136.2295141.
20 Liu, P., Wang, W., Luo, X. et al. (2020). NSDroid: efficient multiclassification of android malware using neighborhood signature in local function call graphs. International Journal of Information Security. https://doi.org/10.1007/s10207-020-00489-5.
21 Hallé, S., Khoury, R., and Awesso, M. (2018). Streamlining the inclusion of computer experiments in a research paper. IEEE Computing 51 (11): 78–89. https://doi.org/10.1109/MC.2018.2876075.
Security Relevance Score: 14
Word Count: 1367
Extracted: 2025-06-13 23:40:31

---

2 Li, D., Wang, Z., and Xue, Y. (2018). Fine‐grained android malware detection based on deep learning. In: 2018 IEEE Conference on Communications and Network Security (CNS), 1–2. IEEE.
3 Venkatraman, S. and Alazab, M. (2018). Use of data visualisation for zero‐day malware detection. Security and Communication Networks 2018.
4 Raheja, S. and Munjal, G. (2021). Classification of Microsoft office vulnerabilities: a step ahead for secure software development. Bio‐inspired Neurocomputing 381–402.
5 AV‐Comparatives, Android Test 2019 – 250 Apps, 2019, https://www.avcomparatives.org/tests/android-test-2019-250-apps/.
6 P. Wang and B. Li, “Vehicle Re‐Identification Based on Coupled Dictionary Learning,” 2018.
7 Raheja, S. and Munjal, G. (2016). Shagun: analysis of linux kernel vulnerabilities. Indian Journal of Science and Technology 9: 12–29.
8 Asma Razgallah, Raphaël Khoury, Sylvain Hallé, Kobra Khanmohammadi A survey of malware detection in Android apps: recommendations and perspectives for future research (2021).
9 Hasegawa, C. and Iyatomi, H. (2018). One‐dimensional convolutional neural networks for Android malware detection. In: Proceedings – 2018 IEEE 14th International Colloquium on Signal Processing and its Application, CSPA 2018.
10 Feng, P., Ma, J., Sun, C. et al. (2018). A novel dynamic Android malware detection system with ensemble learning. IEEE Access 6: 30996–31011.
11 Xu, K., Li, Y., Deng, R.H., and Chen, K. (2018). DeepRefiner: multi‐layer android malware detection system applying deep neural networks. In: 2018 IEEE European Symposium on Security and Privacy (EuroS&P), 473–487. IEEE.
12 Khanmohammadi, K., Khoury, R., and Hamou‐Lhadj, A. (2019). On the use of API calls to detect repackaged malware apps: challenges and ideas. In: The 30th International Symposium on Software Reliability Engineering, ISSRE 2019.
13 Saracino, A., Sgandurra, D., Dini, G., and Martinelli, F. (2016). MADAM: effective and efficient behavior‐based Android malware detection and prevention. IEEE Transactions on Dependable and Secure Computing 1–14. https://doi.org/10.1109/TDSC.2016.2536605.
14 Zangief, Gfan Provides You Free Android Apps and Games, 2017, http://appcakefans.com/gfan-provides-you-free-android-apps-and-games/.
15 Canfora, G., Medvet, E., Mercaldo, F., and Visaggio, C.A. (2015). Detecting Android malware using sequences of system calls. In: Proceedings of the 3rd International Workshop on Software Development Lifecycle for Mobile, 13–20. ACM.
16 Khanmohammadi, K., Ebrahimi, N., Hamou‐Lhadj, A., and Khoury, R. (2019). Empirical study of android repackaged applications. Empirical Software Engineering. https://doi.org/10.1007/s10664-019-09760-3.
17 Alzahrani, N. and Alghazzawi, D. (2019). A review on Android ransomware detection using deep learning techniques. In: Proceedings of the 11th International Conference on Management of Digital EcoSystems, 330–335.
18 Chen, T., Mao, Q., Yang, Y. et al. (2018). TinyDroid: a lightweight and efficient model for Android malware detection and classification. Mobile Information Systems 2018: 4157156:1–4157156:9, https://doi.org/10.1155/2018/4157156.
19 Sarma, B.P., Li, N., Gates, C. et al. Android permissions: a perspective combining risks and benefits. In: Proceedings of the 17th ACM Symposium on Access Control Models and Technologies, SACMAT ’12, 13–22. New York, NY, USA: ACM. https://doi.org/10.1145/2295136.2295141.
20 Liu, P., Wang, W., Luo, X. et al. (2020). NSDroid: efficient multiclassification of android malware using neighborhood signature in local function call graphs. International Journal of Information Security. https://doi.org/10.1007/s10207-020-00489-5.
21 Hallé, S., Khoury, R., and Awesso, M. (2018). Streamlining the inclusion of computer experiments in a research paper. IEEE Computing 51 (11): 78–89. https://doi.org/10.1109/MC.2018.2876075.












7Cyber Threat Detection and Mitigation Using Artificial Intelligence – A Cyber‐physical Perspective
Dalmo Stutz1, Joaquim T. de Assis2, Asif A. Laghari3, Abdullah A. Khan4, Anand Deshpande5, Dhanashree Kulkarni6, Andrey Terziev7, Maria A. de Jesus8, and Edwiges G.H. Grata8
1Centro Federal de Educação Tecnológica Celso Suckow da Fonseca (CEFET) at Nova Friburgo, Nova Friburgo, RJ, Brazil
2Instituto Politecnico do Rio de Janeiro, Nova Friburgo, RJ, Brazil
3Sindh Madresstul Islam University, Karachi, Sindh, Pakistan
4Research Lab of Artificial Intelligence and Information Security, Faculty of Computing, Science and Information Technology, Benazir Bhutto Shaheed University, Karachi, Sindh, Pakistan
5Electronics and Communication Engineering, Angadi Institute of Technology and Management, Belagavi, India
6Department of Computer Science and Engineering, Angadi Institute of Technology and Management, Belagavi, India
7TerziA, Sofia, Bulgaria
8Department of Telecommunications, Federal Fluminense University (UFF), Niterói, RJ, Brazil


7.1 Introduction
Recent technologies, e.g., “cloud computing” (CC) [1], “cyber‐physical systems” (CPSs) [2], “artificial intelligence” (AI) [3], robotics [4, 5], and blockchain [3–6] have been revolutionizing all realms [7, 8], integrating data treatment, connectivity, storage, and physical methods/worlds. The universe and its processes embrace interconnected computational entities that work together as a CPS [1–8]. Albeit CPSs closely relate to the “Internet of Things” (IoT), they differ, but complement each other owing to their unique association with the “real world” (RW), aka physical or material objects [5], encompassing smart entities like self‐driving cars, robots, buildings, power grids, manufacturing, and wearables, to cite a few [6]. Even in CPSs, cyberattacks (CAs) can lead to physical/real system failure or collapse [3]. The automatic fault compensation consequences and the system’s performance maintenance up to some appropriate standard are conflicting [4]. Businesses’ infrastructures have morphed owing to these breakthroughs and with substantial triumph worldwide. CPSs offer sensor‐ and actuator‐reliant links with some intelligence, new trade models, opportunities for fostering cutting‐edge “information and communication technology” (ICT) ways out, and resources for enhancing computer structures, e.g., intelligent and IoT environments, which are exciting new AI application areas. Reworking AI models and instruments to meet the new CPS prerequisites will be difficult [3–6, 9–19]. “Neural network” (NN) algorithms learn from data akin to how the human mind behaves. Using NNs allows devices to make smart judgments with minimal anthropogenic input since they can learn and predict complex correlations concerning input and output information.
CPSs offer comprehensive computer, storage, and networking capabilities through “ICT” can be tailored to meet the needs of a wide range of businesses and organizations using intrusion prevention security systems (IPSSs). Reduced ICT costs give small and medium‐sized enterprises high performance by sanctioning the precise purchase of the amount of software (SW) or hardware (HW) required. “Service‐oriented architectures” (SOAs) and intelligent systems tied to CC and fog computing (FC) in manufacturing are grounded on CPSs. So, affording computational power for manufacturing and services is accepted in NN. This way, assets are accessible for current output, and target consumers. Internet suppliers can access items via CPSs and other ubiquitous networks. AI‐driven apparatuses experiment exponential growth when interacting with their contexts, viz., driverless vehicles supervising and connecting with their contexts and home automation with optimized power consumption thanks to innovative analytics, AI, and ICTs. These frameworks can embed ever‐increasing knowledge to make better and faster decisions in vastly intricate data environments. Control systems can supplement CPSs’ information security shields, withstanding attacks. Moreover, they can belong to more extensive intrusion recognition and macroeconomic variables. Even in CPSs, however, CAs can cause physical system breakdowns. AI models and their placement form the virtual producer’s device foundation, whether the business employs the edge, FC, or CC resources, and if its tools and structures for regulating mechanisms are unified or scattered. Manufacturing aspects comprise and combine into the overall architecture, establishing the industrialized item basis in a CPS.
Moreover, they can belong to more extensive intrusion recognition and macroeconomic variables [20–32]. Even in CPSs, however, CAs can cause physical system breakdowns. AI models and their placement form the virtual producer’s device foundation. The business may employ “edge computing” (EC), FC, or CC resources if its tools and structures for regulating mechanisms are unified or scattered. Manufacturing aspects encompass the overall architecture, establishing the industrialized item basis in a CPS.
Systemic performance must be satisfactory even if faults are automatically or deliberately rewarded. Sensors, actuators, and system processes often target CAs or defects consolidated into a single system of thought. Various vendors initially link SMEs utilizing multiple standards and interaction systems. The overall performance helps detect CPSs’ faults and attacks. The different CA types concentrated on CPSs call for new methods to consider environmental diversity and consistently structured advancements. AI CPSs must prevent defects or CTs from being automatically satisfied with system performance maintained satisfactorily. Systemic CTs and flaws often target sensors, decision‐making, and associated actuators’ procedures. Hence, a unified and coherent framework is necessary. Third‐party providers raise trust obstructions to businesses’ adoption of these models, notably on communication structures. This chapter’s primary aim involves the ensuing.

Intelligent control usage for compensating scalar CAs on nonlinear CPSs.
List of steps to implement tolerable security controls at many CPS levels through IPSSs and NN.
Project description and in‐depth investigation of recent CPS security processes utilizing AI.
