# Security Chapter Extract
Book: Shilpa Mahajan_ Mehak Khurana_ Vania Vieira Estrela - Applying Artificial Intelligence in Cybersecurity Analytics and Cyber Threat Detection (2024, WILEY) - libgen.li
Chapter: 1 - In this botnet architecture, two topologies are employed: star topology and hierarchical topology. The essential internet relay chat (IRC) and hypertext transfer protocol (HTTP) are protocols used in centralized architecture. Because there is only one central location, botnet management and monitoring are relatively simple. Simple and quick direct communication between the botmaster and the bots. The design is simpler and has lower communication latency and survivability in the centralized architecture. The botmaster sends commands to the C&C server, from whence they are distributed to every bot in the botnet. The fundamental drawback of centralized design is that it has a higher probability of failure than other architectures. Because of the central point of control, if the C&C server fails, then all the botnets will fail. Similarly, the detection of botmaster is very easy as compared to decentralized and hybrid architectures.
Decentralized architecture: In a botnet’s decentralized or peer‐to‐peer architecture, no single organization oversees managing the bots. There are various C&C servers that interact with bots. Decentralized architecture makes it more difficult to detect a botnet than centralized architecture. There is no specific command and control server in a decentralized architecture; instead, all the bots function as both clients and command and control servers. Peer‐to‐peer architecture is more complex to create than centralized architecture, making it more difficult to identify a botnet with such architecture than one with another. Like this, decentralized botnet architecture has higher message delay and durability. Chances of failure are less in distributed architecture as compared to centralized, as in case of failure of one control server, another command and control server may work on behalf of failed one.
Security Relevance Score: 9
Word Count: 1139
Extracted: 2025-06-13 23:40:31

---

In this botnet architecture, two topologies are employed: star topology and hierarchical topology. The essential internet relay chat (IRC) and hypertext transfer protocol (HTTP) are protocols used in centralized architecture. Because there is only one central location, botnet management and monitoring are relatively simple. Simple and quick direct communication between the botmaster and the bots. The design is simpler and has lower communication latency and survivability in the centralized architecture. The botmaster sends commands to the C&C server, from whence they are distributed to every bot in the botnet. The fundamental drawback of centralized design is that it has a higher probability of failure than other architectures. Because of the central point of control, if the C&C server fails, then all the botnets will fail. Similarly, the detection of botmaster is very easy as compared to decentralized and hybrid architectures.
Decentralized architecture: In a botnet’s decentralized or peer‐to‐peer architecture, no single organization oversees managing the bots. There are various C&C servers that interact with bots. Decentralized architecture makes it more difficult to detect a botnet than centralized architecture. There is no specific command and control server in a decentralized architecture; instead, all the bots function as both clients and command and control servers. Peer‐to‐peer architecture is more complex to create than centralized architecture, making it more difficult to identify a botnet with such architecture than one with another. Like this, decentralized botnet architecture has higher message delay and durability. Chances of failure are less in distributed architecture as compared to centralized, as in case of failure of one control server, another command and control server may work on behalf of failed one.


Figure 2.1 Botnet architecture.


Hybrid architecture is a combination of both centralized and decentralized architecture. Hybrid architecture may have two different bots: a servant bot and a client bot. Either as a client or a servant, the bots are linked to the hybrid botnet. Although the design is not very sophisticated, monitoring and detection of botnets with hybrid architectures are more difficult than those with centralized and decentralized systems.


2.3.1 Botnet Life Cycle
The botmaster should follow the correct steps, including first infection, secondary injection, connection, transmitting malicious code, maintenance and updating, while attempting to infect another victim device. A botnet first infects a new internet‐connected device, after which it uses various protocols, including HTTP, FTP, and P2P, to inject malicious malware. The target device automatically establishes a connection with an already operational command and control server following the successful injection of malicious code. The victim device turns into a zombie once malicious code has been put into it. The botmaster issues orders to the bot army through the command‐and‐control server in step four. According to the commands that the target device receives from the command, it carries out malicious actions and control servers. The last step is to maintain and update the zombie active all the time, it sends updates to the zombie devices from time to time [17].


2.3.2 Botnet Detection Techniques
Botnet detection is the most crucial task to enhance cybersecurity against the many cyberattacks that happen on the internet today. According to prior research, there are two sorts of botnet detection approaches: intrusion detection techniques and honeynet detection techniques. Sub‐categories of IDSs are further separated. Detection system based on honeynets and honeypots: Both honeynets and honeypots stand for end‐user devices. The greatest approach to gather important data regarding cyberattacks is through these end‐user PCs. Due to its high susceptibility to malicious attacks, this end‐user PC is relatively simple for the botmaster to attack and infiltrate. The knowledge regarding botnet attacks gathered by these honeynets will allow the cybersecurity team to develop effective detection methods. According to an earlier study, the botnet periodically changes its signature for security reasons, and honeynets are crucial for comprehending these botnet characteristics. The honeywall, which is used for monitoring, gathering, altering, and managing communication over the honeypots, is crucial to the honeynet detection technique [18].
Intrusion detection system: An IDS is used to keep an eye on network traffic for nefarious activity. If a malicious attack is discovered during traffic, the computer system or the system administrator is immediately notified. IDSs are also equipped to respond to such malicious activity and prevent traffic coming from a machine that has a virus on it. There are two different kinds of IDSs: anomaly‐based and signature‐based.

Signature‐based detection: Malware is referred to as packet sequences or the transportation of bytes series in searching networks in signature‐based botnet detection technique. The primary benefit of this detection method is how easy it is to create new signatures. if you are aware of the network performance you are looking for. This method is just too straightforward and simple to comprehend and master. To make a botnet attack more secure against PCs that have been infected with bots, the botmaster alters the signatures of each attack over time.
Anomaly‐based detection: This method mainly focuses on the performance of network. It can consider only those activities and traffic on network which are pre‐set by the admin. With this method, each protocol’s rule needs to be defined in advance and tested for accuracy. It recognizes events that are unrelated to the feed or the generally recognized performance model. Compared to signature‐based detection techniques, anomaly‐based detection is slightly more expensive in terms of computing, but it is also more secure. This method also has several drawbacks, with the biggest drawback being the difficulty in defining the rules. Different rules are set for various protocols, which is a more difficult task. Anomaly‐based techniques also have some time and bot monitoring restrictions.




2.4 Methodology Adopted

2.4.1 Dataset Used
This study considered dataset of UCI’s repository for experiment work (12). The dataset contains 10 attacks which are conducted by 2 botnets namely “gafgyt” and “mirai.” These attacks are performed on nine IoT devices namely “Danmini Doorbell,” “Ecobee Thermostat,” “Ennio Doorbell,” “Philips B120N10 Baby Monitor,” “Provision PT 737E Security Camera,” “Provision PT 838 Security Camera,” “Samsung SNH 1011 N Webcam,” “SimpleHome XCS7 1002 WHT Security Camera,” and “SimpleHome XCS7 1003 WHT Security Camera.”
The dataset contains 7062606 instances and 115 attributes. This study used selected instances during experiments for reducing the complexity. However, the created model may work with the entire data as well with more time consumption.


2.4.2 Machine Learning Algorithms Used
ML algorithms are the essential structure for implementing any ML models. These models can be used for classification as well as for regression [19, 20]. These algorithms can be classified as supervised, unsupervised, and reinforcement learning. Five different classifiers were used in this study namely logistic regression (LR), random forest (RF), KNN, DT, and NB [22–28].

Logistic regression: LR lies in the category of supervised ML algorithms and is mainly used for binary classification like whether an attack lies in the class or not, as shown in Figure 2.
