# Security Chapter Extract
Book: Razvan Beuran - Cybersecurity Education and Training (2025, Springer Nature Singapore) - libgen.li
Chapter: 7 - The syntax elements used in the host settings section have the following functions:id: Identifier of the host, which is used in the subsequent guest_settings and clone_settings sections to refer to it.mgmt_addr: The network address used for accessing the host in order to deploy the cyber range on it.virbr_addr: The network address of the virtual bridge used to access the VMs deployed on a host.account: The user account to be used when accessing the host defined in the current block.
Table 12.7Overview of the cyber range description syntax for host settingsElementMeaningidIdentifier of the defined hostmgmt_addrManagement address of the hostvirbr_addrVirtual bridge for accessing the VMs on the hostaccountUser account for accessing the host
Note that multiple hosts can be defined in the host settings section by using a sequence of blocks that follow the above syntax. Moreover, for several settings, double curly bracket symbols ‘{ }’ are used to denote that the values for those configuration variables are to be filled in by CyTrONE at runtime (see lines 4–6 in Fig. 12.3). This makes it possible to create generic cyber range description files that can be deployed on a variety of servers, with the specific details being filled in directly by CyTrONE when the range is created.Guest Settings The term guest is used in CyTrONE to refer to the VMs that are used to construct a cyber range. The second section of the cyber range description file, named guest_settings, contains the information about all the guests, as summarized in Table 12.8. The meaning of the syntax elements used in the guest settings section is as follows:id: Identifier of the guest, which is used in the subsequent clone_settings section to refer to that guest.basevm_host: Id of the host on which the VM base image is stored; the VM image will be copied from that host as part of the cyber range creation process.basevm_config_file: Configuration file that is used to define the base VM associated to the guest.basevm_type: Type of the VM base image, which is used internally to select the correct functions needed during the creation process.tasks: List of tasks that must be executed on the guest in order to prepare it for use in the cyber range.
Table 12.8Overview of the cyber range description syntax for guest settingsElementMeaningidIdentifier for the guestbasevm_hostHost on which the VM base image is storedbasevm_config_fileConfiguration file for the VM base imagebasevm_typeType of the VM base imagetasksList of tasks to be executed for preparing the guest
A complete description of task syntax is out of scope for this presentation, but several examples will be provided below. Thus, the tasks that are defined in the example shown in Fig. 12.3 are as follows:add_account: Create a user account on the guest with the specified account username, password, and full name.install_package: Install a package on the guest by using the specified package manager and package name.emulate_attack: Emulate a cyberattack on the guest, such as an SSH attack. Each attack has its specific parameters, such as target account, number of connections attempts, or the time that should be associated to the attack in the generated PCAP file (see lines 21–25 in Fig. 12.3).
Note that the original cyber range representation file contains several other tasks that were omitted for the sake of brevity, as indicated via the ellipsis symbol ‘...’ appearing on line 26 in the figure. For a summary of all the tasks supported for guest configuration, see the overview presented in Table 12.9, in which they were grouped by task type. By combining these predefined tasks, it is possible to create guests with a wide variety of settings, as described in [4].Table 12.9Overview of the guest configuration tasks supported for guest settingsTask typeNameMeaningAccount setupadd_accountAdd user accountmodify_accountModify user accountIncident emulationemulate_attackEmulate a cyberattackemulate_traffic_capture_fileEmulate and capture a cyberattackemulate_malwareEmulate malware symptomsProgram setupinstall_packageInstall a software packagecopy_contentCopy a file or directoryexecute_programExecute a script or programFirewall setupfirewall_rulesConfigure firewall rules
Clone Settings The term cloning is used in CyTrONE to refer to the creation of multiple cyber range instances from the guest base VMs that were set up according to the guest settings section in the description file. This is achieved in practice by using the disk images of those VMs as backing files, a mechanism in the KVM virtualization system that records for every newly created VM only the differences with respect to those files. This makes it possible to create VM copies with effectively the same content as the base VMs in a simple and efficient manner.The clone settings section of the cyber range description file provides the information needed for the cloning process, as summarized in Table 12.10. The following syntax elements are used to convey this information:range_id: Identifier of the created cyber range, which is used internally to manage it, such as retrieving the creation information or destroying it.hosts: List of hosts on which the cyber range is to be deployed, with each host being identified by its id. The number of cyber range instances to be deployed on each host must also be specified, followed by a list of guests, as described next.guests: List of guests that should be included in each cyber range instance. Each guest is identified by its id, and the number of guests of that type must also be specified (see lines 33–36 in Fig. 12.3). The key named entry_point is used to indicate whether a particular guest is to serve as landing point when trainees access the cyber range instance.topology: The network topology is used to interconnect the specified guests. Its main component is a list of subnets, with each subnet being given a name and a list of members, which are the network interfaces of the guests that are to be connected to that subnet (see lines 39–41 in Fig. 12.3).
Table 12.10Overview of the cyber range description syntax for clone settingsElementMeaningrange_idIdentifier of the cyber rangehostsList of hosts on which the cyber range is to be deployedguestsList of guests that make up the cyber range on each hosttopologyTopology for connecting the guests in a cyber range
Security Relevance Score: 10
Word Count: 1418
Extracted: 2025-06-13 23:41:15

---

The syntax elements used in the host settings section have the following functions:id: Identifier of the host, which is used in the subsequent guest_settings and clone_settings sections to refer to it.mgmt_addr: The network address used for accessing the host in order to deploy the cyber range on it.virbr_addr: The network address of the virtual bridge used to access the VMs deployed on a host.account: The user account to be used when accessing the host defined in the current block.
Table 12.7Overview of the cyber range description syntax for host settingsElementMeaningidIdentifier of the defined hostmgmt_addrManagement address of the hostvirbr_addrVirtual bridge for accessing the VMs on the hostaccountUser account for accessing the host
Note that multiple hosts can be defined in the host settings section by using a sequence of blocks that follow the above syntax. Moreover, for several settings, double curly bracket symbols ‘{ }’ are used to denote that the values for those configuration variables are to be filled in by CyTrONE at runtime (see lines 4–6 in Fig. 12.3). This makes it possible to create generic cyber range description files that can be deployed on a variety of servers, with the specific details being filled in directly by CyTrONE when the range is created.Guest Settings The term guest is used in CyTrONE to refer to the VMs that are used to construct a cyber range. The second section of the cyber range description file, named guest_settings, contains the information about all the guests, as summarized in Table 12.8. The meaning of the syntax elements used in the guest settings section is as follows:id: Identifier of the guest, which is used in the subsequent clone_settings section to refer to that guest.basevm_host: Id of the host on which the VM base image is stored; the VM image will be copied from that host as part of the cyber range creation process.basevm_config_file: Configuration file that is used to define the base VM associated to the guest.basevm_type: Type of the VM base image, which is used internally to select the correct functions needed during the creation process.tasks: List of tasks that must be executed on the guest in order to prepare it for use in the cyber range.
Table 12.8Overview of the cyber range description syntax for guest settingsElementMeaningidIdentifier for the guestbasevm_hostHost on which the VM base image is storedbasevm_config_fileConfiguration file for the VM base imagebasevm_typeType of the VM base imagetasksList of tasks to be executed for preparing the guest
A complete description of task syntax is out of scope for this presentation, but several examples will be provided below. Thus, the tasks that are defined in the example shown in Fig. 12.3 are as follows:add_account: Create a user account on the guest with the specified account username, password, and full name.install_package: Install a package on the guest by using the specified package manager and package name.emulate_attack: Emulate a cyberattack on the guest, such as an SSH attack. Each attack has its specific parameters, such as target account, number of connections attempts, or the time that should be associated to the attack in the generated PCAP file (see lines 21–25 in Fig. 12.3).
Note that the original cyber range representation file contains several other tasks that were omitted for the sake of brevity, as indicated via the ellipsis symbol ‘...’ appearing on line 26 in the figure. For a summary of all the tasks supported for guest configuration, see the overview presented in Table 12.9, in which they were grouped by task type. By combining these predefined tasks, it is possible to create guests with a wide variety of settings, as described in [4].Table 12.9Overview of the guest configuration tasks supported for guest settingsTask typeNameMeaningAccount setupadd_accountAdd user accountmodify_accountModify user accountIncident emulationemulate_attackEmulate a cyberattackemulate_traffic_capture_fileEmulate and capture a cyberattackemulate_malwareEmulate malware symptomsProgram setupinstall_packageInstall a software packagecopy_contentCopy a file or directoryexecute_programExecute a script or programFirewall setupfirewall_rulesConfigure firewall rules
Clone Settings The term cloning is used in CyTrONE to refer to the creation of multiple cyber range instances from the guest base VMs that were set up according to the guest settings section in the description file. This is achieved in practice by using the disk images of those VMs as backing files, a mechanism in the KVM virtualization system that records for every newly created VM only the differences with respect to those files. This makes it possible to create VM copies with effectively the same content as the base VMs in a simple and efficient manner.The clone settings section of the cyber range description file provides the information needed for the cloning process, as summarized in Table 12.10. The following syntax elements are used to convey this information:range_id: Identifier of the created cyber range, which is used internally to manage it, such as retrieving the creation information or destroying it.hosts: List of hosts on which the cyber range is to be deployed, with each host being identified by its id. The number of cyber range instances to be deployed on each host must also be specified, followed by a list of guests, as described next.guests: List of guests that should be included in each cyber range instance. Each guest is identified by its id, and the number of guests of that type must also be specified (see lines 33–36 in Fig. 12.3). The key named entry_point is used to indicate whether a particular guest is to serve as landing point when trainees access the cyber range instance.topology: The network topology is used to interconnect the specified guests. Its main component is a list of subnets, with each subnet being given a name and a list of members, which are the network interfaces of the guests that are to be connected to that subnet (see lines 39–41 in Fig. 12.3).
Table 12.10Overview of the cyber range description syntax for clone settingsElementMeaningrange_idIdentifier of the cyber rangehostsList of hosts on which the cyber range is to be deployedguestsList of guests that make up the cyber range on each hosttopologyTopology for connecting the guests in a cyber range

12.4.1.3 Representation ProcessingThe processing flow for the cyber range representation consists mainly in the following sequence of steps: 1.CyTrONE reads the cyber range description file from the training database, and fills in the values for the configuration variables in that file (see Sect. 12.4.1.2). The values are determined based on the settings corresponding to the instructor creating the cyber range, and the creation command received via the UI. 2.CyTrONE then sends the standalone cyber range description file to CyRIS. 3.CyRIS uses the received description file to create a cyber range with the guest composition and number of instances specified in that file. 
Step 1 in the workflow above is critical to ensure that cyber range description files can be prepared in advance in an agnostic manner and can be used independently by several cyber range creators who share the same platform. This is because different settings regarding the deployment hosts and accounts can be associated to each instructor in the CyTrONE database. Moreover, the number of cyber range instances to be created is configured at runtime via the CyTrONE UI.The creation of the actual cyber range at step 3 is the most complicated step in the processing flow we described. However, since this functionality is delegated to the CyRIS module, the corresponding functionality in the CyTrONE management module can be kept lightweight. Nevertheless, we can clearly state that CyRIS is the most complex module of the framework, and its implementation represented the most challenging aspect of the entire development process.

12.4.2 Cyber Range ExamplesTo illustrate the characteristics of CyTrONE cyber ranges, we will discuss two types of cyber ranges that refer to different use cases. These examples will also serve as a reference for the manner in which the concepts discussed in Sect. 9.​3 can be put into practice when designing a suitable cybersecurity training environment for the following two typical situations:Simple cyber ranges.Complex cyber ranges.
12.4.2.1 Simple Cyber RangesFor a vast majority of cybersecurity training activities, the training environment is relatively simple in terms of network topology, especially for CTF competitions. Often, only a single host needs to be set up, typically as a virtual machine, with all the content required for a relatively small set of challenges. This means that the focus for this type of simple cyber ranges is on training content installation on that VM.To illustrate how this type of cyber range can be created via CyTrONE we will discuss two simple environments that are associated to the gamified training content sets described in Sect. 12.3.2.
