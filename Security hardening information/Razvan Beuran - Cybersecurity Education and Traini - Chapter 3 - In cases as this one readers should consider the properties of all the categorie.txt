# Security Chapter Extract
Book: Razvan Beuran - Cybersecurity Education and Training (2025, Springer Nature Singapore) - libgen.li
Chapter: 3 - In cases as this one, readers should consider the properties of all the categories to which a system can be considered to belong to, as the specific characteristics of all those categories become relevant.The comparison we conducted in this section considered the typical properties of training programs that fall into each of the approaches we discussed. Such a generic comparison helps identifying the most suitable approach for a given purpose but does not consider the specificities of a particular training program. For this purpose, a more detailed analysis should be conducted for any specific platform of interest by following the methodology discussed in Sect. 3.​1, similarly to the case study taxonomy-based analysis that was summarized in Table 3.​1.
Security Relevance Score: 6
Word Count: 1909
Extracted: 2025-06-13 23:41:15

---

In cases as this one, readers should consider the properties of all the categories to which a system can be considered to belong to, as the specific characteristics of all those categories become relevant.The comparison we conducted in this section considered the typical properties of training programs that fall into each of the approaches we discussed. Such a generic comparison helps identifying the most suitable approach for a given purpose but does not consider the specificities of a particular training program. For this purpose, a more detailed analysis should be conducted for any specific platform of interest by following the methodology discussed in Sect. 3.​1, similarly to the case study taxonomy-based analysis that was summarized in Table 3.​1.


7.3 Case Study: IoTrain-Sim and IoTrain-LabTwo IoT security training systems developed at Japan Advanced Institute of Science and Technology are IoTrain-Sim and IoTrain-Lab [30, 31]. Both systems were released on GitHub in 2020 [10, 11], and their open-source nature makes them very suitable as case studies for the topic of this chapter.The two mentioned IoT training systems are of the hands-on type, and are part of the academic training system category, being created in a university environment. Both of them target IoT developers via practical tutorials and exercises. In what follows we will review their main characteristics in the context of the concepts discussed so far, then discuss the differences between the two approaches.7.3.1 IoTrain-SimIoTrain-Sim is an IoT security training system that leverages the functionality of the Cooja network simulator to create a simulated IoT network in which trainees can conduct hands-on training activities [11, 30]. Note that Cooja is distributed along with an open-source operating system for IoT devices named Contiki OS [8].7.3.1.1 System OverviewIoTrain-Sim retrieves IoT training content from the training content database and presents that content to trainees on demand. The training content is either in the form of tutorials, that the trainees can use to gain knowledge about various IoT technologies and security issues, or in the form of Cooja simulation scenarios.Key Features When using IoTrain-Sim, instructors should prepare the training content in advance, then store and register it into the IoTrain-Sim database. Learners start by consulting the tutorials; upon completion, they can then proceed to conduct the related simulations. For the latter purpose, IoTrain-Sim uses the included simulation scenarios to drive the execution of the Cooja simulator.Trainees interact with IoTrain-Sim either via a Graphical User Interface (GUI) or via a Command Line Interface (CLI). The GUI makes it possible to access both tutorials and simulations by simply clicking on the corresponding items, as shown in Fig. 7.1.The image shows the IoTrain-Sim application interface displaying a hierarchical menu of training content. Categories include "System Introduction" with PDFs on IoTrain-Sim Overview and IoT Background, "Fundamental Training" with sections like "Single Node" and "Basics of Contiki & Cooja," which includes a PDF Contiki Tutorial, a CSC Hello World Simulation, and a PDF Cooja Tutorial. Other sections are "Actuation & Control," "Sensing," "Networking," and "Security Training," which covers topics like Introduction, Resource Attacks, Topology Attacks, and Traffic Attacks. Buttons at the bottom include "Expand All," "Collapse All," "Start Cooja," and "Quit."Fig. 7.1Screenshot of the IoTrain-Sim graphical user interface
Main Advantages The fact that it leverages simulation techniques for training purposes is one of the main characteristics of IoTrain-Sim. From an IoT security training perspective, the advantages of this approach are as follows:Using a simulation environment for hands-on activities is safe even when using malicious nodes and traffic, which are dangerous to deploy in real environments, especially for beginners.The Cooja simulator reproduces actual IoT hardware, making simulation-based training results applicable to real IoT devices.The simulation environment makes it possible to easily conduct large-scale experiments that cannot be easily replicated via real hardware.

7.3.1.2 Training ContentThe IoTrain-Sim version released on GitHub includes a set of tutorials in regard to basic IoT knowledge and skills, as well as several security aspects. The three categories of existing training content are (see also Table 7.2 for an overview):System introduction.Fundamental training.Security training.
Table 7.2Overview of the IoTrain-Sim training contentCategoryTypeSubtypeTopicSystem introductionOverview–Introductory tutorialFundamental trainingSingle nodeBasics of Contiki and CoojaHello world simulationActuation and controlLED, button, timerSensingTemperature, humidity, lightNetworkingCommunicationBroadcastSecurity trainingResource attacksDirect attacksFlooding attackIndirect attacksDODAG version attackTopology attacksIsolation attacksBlack hole attackTraffic attacksMisappropriation attacksDecreased rank attack
System Introduction This tutorial provides an overview on IoT technologies and IoT security, and also about the utilization of IoTrain-Sim itself, and is aimed at users of all levels. Trainees are, in general, supposed to start their learning with this module, unless they already have basic knowledge of IoT technologies in general, and IoTrain-Sim in particular.Fundamental Training These tutorials are aimed at users with a beginner-to-intermediate level regarding IoT technologies and start by introducing the basics of Contiki OS and Cooja. This is followed by hands-on exercises regarding how to operate IoT devices, both in regard to actuation and control, such as via LEDs and buttons, and also with respect to sensing, such as via temperature and humidity sensors. Following that, communication techniques for IoT devices are explained, with focus on broadcast, which is often used in sensor networks.Security Training These tutorials leverage fundamental training to teach security-specific skills and are aimed at users with an intermediate-to-advanced level in regard to IoT technologies. The focus is on the security of the routing protocol named RPL that is frequently used in low-power and lossy networks such as Wireless Sensor Networks (WSN). In particular, the following types of attacks are considered:Resource attacks: These attacks force nodes to perform unnecessary actions in order to deplete their resources, such as processing load and power consumption, thus affecting network operation directly or indirectly.Topology attacks: These attacks aim to disrupt the network topology via node isolation or non-optimal routing in order to create communication issues.Traffic attacks: These attacks attempt to eavesdrop on other nodes’ traffic, or to impersonate the traffic of legitimate nodes by the introduction of malicious nodes into the network.

7.3.1.3 Training ApproachThe tutorials about fundamental and security training topics that we discussed include all the information needed to understand those topics, and come with simulation scenarios to experiment with those concepts via Cooja. This is particularly useful in the context of security training, for instance, in order to study specific attack mechanisms, since the attack implementation is already provided. Moreover, the defense mechanisms against each type of attack are also explained, making it possible for trainees to develop the corresponding skills.For this purpose, the training content of IoTrain-Sim consists of three elements: tutorials in the form of PDF files, Cooja simulation scenarios in the form of CSC files, and C language files that make it possible to modify the behavior of the simulated Contiki nodes. The trainees can access the tutorials and simulations by making use of the IoTrain-Sim interface and can modify the associated C files to change the node functionality as desired. For more details about IoTrain-Sim, see [30].

7.3.2 IoTrain-LabIoTrain-Lab is a training system that leverages the functionality of the FIT IoT-LAB testbed to create a network made of real IoT devices with which trainees can conduct hands-on training activities in a controlled environment [10, 31]. The IoT testbed that IoTrain-Lab uses, FIT IoT-LAB, has more than 1500 nodes at nine physical sites across France [2, 15]. The nodes have various hardware architectures (Arduino, Microchip, Nordic, etc.), and support several operating systems (including Contiki) and communication technologies (IEEE 802.15.4, Bluetooth Low Energy, etc.). The fact that FIT IoT-LAB can be used remotely from anywhere in the world in an open-access manner makes it very appropriate as IoT training infrastructure.7.3.2.1 System OverviewIoTrain-Lab provides a series of training tutorials that trainees can follow to learn about IoT technologies, and facilitates their remote access to the underlying testbed, FIT IoT-LAB, in a multi-user manner.Key Features The simultaneous access of multiple trainees to FIT IoT-LAB is made possible via the use of container technology. In particular, Docker is utilized to deploy lightweight CentOS Linux containers with all the necessary connection tools and settings. Access management for the Linux containers is done by means of a remote desktop gateway based on Apache Guacamole that runs in another container. To begin the training, learners must first log in into one of the Linux containers, then start using the testbed infrastructure according to the provided tutorials.IoTrain-Lab does not have any specific user interface, and trainees must conduct the training activity via command line. In particular, they need to connect via the ssh command to the FIT IoT-LAB testbed, then start and manage the experiments using the terminal. On the one hand, this makes the access less convenient compared to IoTrain-Sim. However, on the other hand, trainees have more freedom to practice in ways than deviate from the prescribed tutorials, which may be an attractive feature for the more advanced of the users.Main Advantages The advantages of the testbed-based design of IoTrain-Lab from an IoT security training perspective are as follows:Using an isolated testbed environment for hands-on activities is safe even when using malicious nodes and traffic, which are dangerous to deploy in real environments, especially for beginners.The use of real IoT devices in FIT IoT-LAB makes testbed-based training results applicable to real-life scenarios.The testbed environment makes it possible to easily conduct large-scale experiments that cannot be easily replicated via local setups.

7.3.2.2 Training ContentSimilarly to IoTrain-Sim, the current version of IoTrain-Lab that was released on GitHub includes tutorials regarding basic IoT knowledge and skills, as well as some security aspects. The two categories of training content in IoTrain-Lab are described next (see also Table 7.3 for an overview):Fundamental training.Security training.
Table 7.3Overview of the IoTrain-Lab training contentCategoryTypeTopicFundamental trainingDevicesNode controlConsumption monitoringRadio monitoringRadio sniffingProtocolsPing testingRPL-based routingCoAP protocolMQTT protocolSecurity trainingResource attacksFlooding attack
Fundamental Training These tutorials refer to basic aspects related to IoT devices, such as node control and radio monitoring/sniffing, and are aimed at users with a beginner-to-intermediate level regarding IoT technologies. Tutorials related to IoT network protocols are also included, both in connection with basic protocols, such as RPL, as well as with regard to more advanced ones, such as CoAP and MQTT.Security Training This content leverages fundamental training to teach security-specific skills and is aimed at users with an intermediate-to-advanced level in regard to IoT technologies. Only one tutorial is currently included, which focuses on the security of the RPL protocol, in particular when dealing with the network resource attack named flooding attack. Via this tutorial, trainees can experiment with this type of attack on real IoT devices, a differentiating factor compared to IoTrain-Sim, which uses only simulated attacks.
7.3.2.3 Training ApproachAll the IoTrain-Lab tutorials mentioned so far are available online. They include explanations about the steps needed to conduct the training exercises, accompanied by screenshots and example output data.Note that the difficulty level of each exercise is specified, and they are ordered according to this level. This makes it possible for trainees to gradually develop their skills if they are beginners, or to jump directly to more challenging exercises, if they already have the required knowledge. For more details about IoTrain-Lab, see [31].

7.3.3 System ComparisonThere are many similarities between IoTrain-Sim and IoTrain-Lab. Both of them are mainly targeted at students, but can also be used by professionals, and the training takes place in a tutorial-based, self-paced manner. Moreover, both are available at no cost as free downloads. Lastly, both systems cover fundamental, as well as security training, although the security training content of IoTrain-Sim is richer.However, there are several important differences as well, as it has been summarized in Table 7.
