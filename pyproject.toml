[build-system]
requires = ["setuptools>=45", "wheel", "maturin>=1.4.0"]
build-backend = "maturin"

[project]
name = "claude-optimized-deployment"
version = "1.0.0"
description = "Optimized deployment engine with Circle of Experts and MCP integration"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Claude Deployment Team"},
]
keywords = ["deployment", "automation", "ai", "mcp", "infrastructure"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

# Core dependencies - minimal memory footprint
dependencies = [
    # Core Python support
    "python-dotenv>=1.0.0",
    
    # HTTP client - consolidated to httpx only (replaces aiohttp, requests, httplib2)
    "httpx[http2]>=0.26.0",
    "aiofiles>=23.0.0",
    
    # API Framework
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "pydantic>=2.5.0",
    
    # Database - core only
    "sqlalchemy[asyncio]>=2.0.0",
    "alembic>=1.13.0",
    
    # Essential utilities
    "click>=8.1.0",
    "rich>=13.7.0",
    "tenacity>=8.2.0",
    
    # Logging - essential only
    "structlog>=24.1.0",
    
    # Security - consolidated
    "cryptography>=42.0.0",
    "pyjwt[crypto]>=2.8.0",
    
    # Serialization - JSON only by default, YAML optional
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
# Infrastructure tools (heavy dependencies)
infrastructure = [
    "terraform>=1.5.0",
    "ansible>=8.0.0",
    "pulumi>=3.100.0",
    "kubernetes>=29.0.0",
    "docker>=7.0.0",
    "helm>=0.1.0",
]

# Cloud provider SDKs (heavy dependencies)
cloud = [
    "boto3>=1.34.0",  # AWS
    "azure-mgmt>=4.0.0",  # Azure
    "google-cloud>=0.34.0",  # GCP
    "google-auth>=2.20.0",
    "google-auth-oauthlib>=1.0.0",
    "google-auth-httplib2>=0.1.0",
    "google-api-python-client>=2.90.0",
]

# AI/ML dependencies (very heavy - 200+ MB)
ai = [
    "langchain>=0.1.0",
    "ollama>=0.1.0",
    "transformers>=4.37.0",
    "torch>=2.0.0",  # Usually required by transformers
    "openai>=1.0.0",
    "google-generativeai>=0.3.0",
]

# Database drivers (optional based on use case)
database = [
    "asyncpg>=0.29.0",  # PostgreSQL
    "aiosqlite>=0.19.0",  # SQLite
    "redis>=5.0.0",
    "tortoise-orm>=0.20.0",
    "aerich>=0.7.2",
]

# Monitoring and observability (heavy telemetry)
monitoring = [
    "prometheus-client>=0.19.0",
    "psutil>=5.9.0",
    "opentelemetry-api>=1.22.0",
    "opentelemetry-sdk>=1.22.0",
    "opentelemetry-instrumentation-fastapi>=0.41b0",
    "opentelemetry-instrumentation-httpx>=0.41b0",
    "opentelemetry-instrumentation-sqlalchemy>=0.41b0",
    "opentelemetry-exporter-otlp>=1.20.0",
]

# Data processing (heavy numerical computing)
data = [
    "numpy>=1.26.0",
    "pandas>=2.2.0",
    "scipy>=1.11.0",
]

# Development tools
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0", 
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "black>=24.1.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
]

# Rust integration
rust = [
    "maturin>=1.4.0",
    "pyo3>=0.20.0",
]

# Full installation (all optional dependencies)
all = [
    "claude-optimized-deployment[infrastructure,cloud,ai,database,monitoring,data,dev,rust]"
]

[project.urls]
Homepage = "https://github.com/louranicas/claude-optimized-deployment"
Repository = "https://github.com/louranicas/claude-optimized-deployment"
Documentation = "https://github.com/louranicas/claude-optimized-deployment/docs"
Issues = "https://github.com/louranicas/claude-optimized-deployment/issues"

[project.scripts]
claude-deploy = "src.__main__:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.maturin]
module-name = "claude_deployment._rust_core"
python-source = "src"
