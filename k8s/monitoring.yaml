---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: claude-deployment-prometheus
  namespace: claude-deployment
  labels:
    app: claude-deployment-prometheus
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: claude-deployment-prometheus
  template:
    metadata:
      labels:
        app: claude-deployment-prometheus
        component: monitoring
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: claude-deployment-monitor
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
      containers:
      - name: prometheus
        image: prom/prometheus:v2.40.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: prometheus
          containerPort: 9090
          protocol: TCP
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus/data
        - --web.console.libraries=/usr/share/prometheus/console_libraries
        - --web.console.templates=/usr/share/prometheus/consoles
        - --web.enable-lifecycle
        - --web.enable-admin-api
        - --storage.tsdb.retention.time=15d
        - --storage.tsdb.retention.size=10GB
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
          readOnly: true
        - name: storage
          mountPath: /prometheus/data
        - name: tmp
          mountPath: /tmp
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: prometheus
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: prometheus
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config
        configMap:
          name: claude-deployment-monitoring-config
      - name: storage
        persistentVolumeClaim:
          claimName: prometheus-storage
      - name: tmp
        emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: claude-deployment-grafana
  namespace: claude-deployment
  labels:
    app: claude-deployment-grafana
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: claude-deployment-grafana
  template:
    metadata:
      labels:
        app: claude-deployment-grafana
        component: monitoring
    spec:
      serviceAccountName: claude-deployment-monitor
      securityContext:
        runAsNonRoot: true
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
      containers:
      - name: grafana
        image: grafana/grafana:9.3.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: grafana
          containerPort: 3000
          protocol: TCP
        securityContext:
          runAsNonRoot: true
          runAsUser: 472
          runAsGroup: 472
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: claude-deployment-monitoring-secret
              key: grafana-admin-password
        - name: GF_SECURITY_ADMIN_USER
          value: admin
        - name: GF_SERVER_ROOT_URL
          value: "https://grafana.claude-deployment.example.com"
        - name: GF_SECURITY_SECRET_KEY
          value: "sw2YcwTIb9zpOOhoPsMm"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_SECURITY_DISABLE_GRAVATAR
          value: "true"
        - name: GF_ANALYTICS_REPORTING_ENABLED
          value: "false"
        - name: GF_ANALYTICS_CHECK_FOR_UPDATES
          value: "false"
        volumeMounts:
        - name: storage
          mountPath: /var/lib/grafana
        - name: config
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
          readOnly: true
        - name: dashboards-config
          mountPath: /etc/grafana/provisioning/dashboards
          readOnly: true
        - name: datasources-config
          mountPath: /etc/grafana/provisioning/datasources
          readOnly: true
        - name: tmp
          mountPath: /tmp
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: grafana
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: grafana
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: grafana-storage
      - name: config
        configMap:
          name: claude-deployment-grafana-config
      - name: dashboards-config
        configMap:
          name: claude-deployment-grafana-dashboards
      - name: datasources-config
        configMap:
          name: claude-deployment-grafana-datasources
      - name: tmp
        emptyDir: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: claude-deployment
  labels:
    app: claude-deployment-prometheus
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 20Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage
  namespace: claude-deployment
  labels:
    app: claude-deployment-grafana
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: claude-deployment-node-exporter
  namespace: claude-deployment
  labels:
    app: claude-deployment-node-exporter
    component: monitoring
spec:
  selector:
    matchLabels:
      app: claude-deployment-node-exporter
  template:
    metadata:
      labels:
        app: claude-deployment-node-exporter
        component: monitoring
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: claude-deployment-monitor
      hostNetwork: true
      hostPID: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
      containers:
      - name: node-exporter
        image: prom/node-exporter:v1.5.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: metrics
          containerPort: 9100
          protocol: TCP
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        args:
        - --path.rootfs=/host
        - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)
        - --web.listen-address=0.0.0.0:9100
        - --web.disable-exporter-metrics
        volumeMounts:
        - name: proc
          mountPath: /host/proc
          readOnly: true
        - name: sys
          mountPath: /host/sys
          readOnly: true
        - name: root
          mountPath: /host
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
      - name: root
        hostPath:
          path: /
      tolerations:
      - operator: Exists
        effect: NoSchedule

---
apiVersion: v1
kind: Service
metadata:
  name: claude-deployment-prometheus
  namespace: claude-deployment
  labels:
    app: claude-deployment-prometheus
spec:
  type: ClusterIP
  ports:
  - name: prometheus
    port: 9090
    targetPort: prometheus
    protocol: TCP
  selector:
    app: claude-deployment-prometheus

---
apiVersion: v1
kind: Service
metadata:
  name: claude-deployment-grafana
  namespace: claude-deployment
  labels:
    app: claude-deployment-grafana
spec:
  type: ClusterIP
  ports:
  - name: grafana
    port: 3000
    targetPort: grafana
    protocol: TCP
  selector:
    app: claude-deployment-grafana

---
apiVersion: v1
kind: Service
metadata:
  name: claude-deployment-node-exporter
  namespace: claude-deployment
  labels:
    app: claude-deployment-node-exporter
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: metrics
    port: 9100
    targetPort: metrics
    protocol: TCP
  selector:
    app: claude-deployment-node-exporter