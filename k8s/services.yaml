---
apiVersion: v1
kind: Service
metadata:
  name: claude-deployment-api
  namespace: claude-deployment
  labels:
    app: claude-deployment-api
    tier: api
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:region:account:certificate/cert-id
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: claude-deployment-api

---
apiVersion: v1
kind: Service
metadata:
  name: claude-deployment-redis
  namespace: claude-deployment
  labels:
    app: claude-deployment-redis
    tier: cache
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: redis
    port: 6379
    targetPort: redis
    protocol: TCP
  selector:
    app: claude-deployment-redis

---
apiVersion: v1
kind: Service
metadata:
  name: claude-deployment-worker-metrics
  namespace: claude-deployment
  labels:
    app: claude-deployment-worker
    tier: worker
spec:
  type: ClusterIP
  ports:
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: claude-deployment-worker

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: claude-deployment-api-ingress
  namespace: claude-deployment
  labels:
    app: claude-deployment-api
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://claude-deployment.example.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' https:; frame-ancestors 'self';" always;
spec:
  tls:
  - hosts:
    - api.claude-deployment.example.com
    secretName: claude-deployment-api-tls
  rules:
  - host: api.claude-deployment.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: claude-deployment-api
            port:
              number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: claude-deployment-monitoring
  namespace: claude-deployment
  labels:
    app: claude-deployment-monitoring
spec:
  type: ClusterIP
  ports:
  - name: prometheus
    port: 9090
    targetPort: 9090
    protocol: TCP
  - name: grafana
    port: 3000
    targetPort: 3000
    protocol: TCP
  selector:
    app: claude-deployment-monitoring