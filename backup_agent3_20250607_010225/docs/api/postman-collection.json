{
  "info": {
    "name": "Claude-Optimized Deployment Engine (CODE) API",
    "description": "Complete API collection for CODE infrastructure automation platform",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "key",
        "value": "X-API-Key",
        "type": "string"
      },
      {
        "key": "value",
        "value": "{{API_KEY}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "BASE_URL",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "API_KEY",
      "value": "your-api-key-here",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Circuit Breakers",
      "description": "Service resilience and failure management",
      "item": [
        {
          "name": "Get System Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/circuit-breakers/status",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "circuit-breakers", "status"]
            },
            "description": "Get overall circuit breaker system status including health metrics"
          },
          "response": [
            {
              "name": "Healthy System",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{BASE_URL}}/api/circuit-breakers/status",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "circuit-breakers", "status"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"timestamp\": \"2025-05-31T10:00:00.000Z\",\n  \"monitoring\": {\n    \"active\": true,\n    \"check_interval\": 10,\n    \"alert_count\": 0\n  },\n  \"summary\": {\n    \"total_breakers\": 10,\n    \"open_circuits\": [],\n    \"closed_circuits\": [\"auth-service\", \"user-service\", \"payment-service\"],\n    \"half_open_circuits\": [],\n    \"overall_failure_rate\": 0.02\n  },\n  \"health\": \"healthy\"\n}"
            }
          ]
        },
        {
          "name": "List All Circuit Breakers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/circuit-breakers/breakers?state=",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "circuit-breakers", "breakers"],
              "query": [
                {
                  "key": "state",
                  "value": "",
                  "description": "Filter by state (open, closed, half_open)"
                }
              ]
            },
            "description": "Get detailed information about all circuit breakers with optional filtering"
          }
        },
        {
          "name": "Get Specific Circuit Breaker",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/circuit-breakers/breakers/{{breaker_name}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "circuit-breakers", "breakers", "{{breaker_name}}"],
              "variable": [
                {
                  "key": "breaker_name",
                  "value": "auth-service"
                }
              ]
            },
            "description": "Get detailed metrics for a specific circuit breaker"
          }
        },
        {
          "name": "Reset Circuit Breaker",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/circuit-breakers/breakers/{{breaker_name}}/reset",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "circuit-breakers", "breakers", "{{breaker_name}}", "reset"],
              "variable": [
                {
                  "key": "breaker_name",
                  "value": "auth-service"
                }
              ]
            },
            "description": "Manually reset a circuit breaker to closed state"
          }
        },
        {
          "name": "Reset All Circuit Breakers",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/circuit-breakers/breakers/reset-all",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "circuit-breakers", "breakers", "reset-all"]
            },
            "description": "Reset all circuit breakers to closed state"
          }
        },
        {
          "name": "Get System Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/circuit-breakers/health",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "circuit-breakers", "health"]
            },
            "description": "Get overall system health assessment based on circuit breaker states"
          }
        }
      ]
    },
    {
      "name": "MCP Tools",
      "description": "Model Context Protocol tool execution",
      "item": [
        {
          "name": "List MCP Servers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/mcp/servers",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "mcp", "servers"]
            },
            "description": "Get list of all registered MCP servers and their capabilities"
          }
        },
        {
          "name": "Get Server Tools",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/mcp/servers/{{server_name}}/tools",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "mcp", "servers", "{{server_name}}", "tools"],
              "variable": [
                {
                  "key": "server_name",
                  "value": "docker"
                }
              ]
            },
            "description": "List all tools available from a specific MCP server"
          }
        },
        {
          "name": "Docker - Build Image",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"server\": \"docker\",\n  \"tool\": \"docker_build\",\n  \"arguments\": {\n    \"dockerfile_path\": \".\",\n    \"image_tag\": \"my-app:latest\",\n    \"build_args\": {\n      \"NODE_VERSION\": \"18\",\n      \"BUILD_ENV\": \"production\"\n    },\n    \"target\": \"production\",\n    \"pull\": true\n  }\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/api/mcp/execute",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "mcp", "execute"]
            },
            "description": "Build a Docker image with specified configuration"
          }
        },
        {
          "name": "Docker - Run Container",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"server\": \"docker\",\n  \"tool\": \"docker_run\",\n  \"arguments\": {\n    \"image\": \"my-app:latest\",\n    \"container_name\": \"my-app-prod\",\n    \"ports\": [\"80:8000\", \"443:8443\"],\n    \"environment\": {\n      \"DATABASE_URL\": \"postgresql://user:pass@db:5432/myapp\",\n      \"REDIS_URL\": \"redis://redis:6379\",\n      \"LOG_LEVEL\": \"INFO\"\n    },\n    \"volumes\": [\n      \"./logs:/app/logs\",\n      \"./config:/app/config:ro\"\n    ],\n    \"networks\": [\"app-network\"],\n    \"detach\": true\n  }\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/api/mcp/execute",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "mcp", "execute"]
            },
            "description": "Start a new container with comprehensive configuration"
          }
        },
        {
          "name": "Docker - List Containers",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"server\": \"docker\",\n  \"tool\": \"docker_ps\",\n  \"arguments\": {\n    \"all\": false,\n    \"filter\": {\n      \"status\": \"running\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/api/mcp/execute",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "mcp", "execute"]
            },
            "description": "List running Docker containers"
          }
        },
        {
          "name": "Kubernetes - Apply Manifests",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"server\": \"kubernetes\",\n  \"tool\": \"kubectl_apply\",\n  \"arguments\": {\n    \"manifest_path\": \"./k8s/production\",\n    \"namespace\": \"prod\",\n    \"recursive\": true,\n    \"validate\": true\n  }\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/api/mcp/execute",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "mcp", "execute"]
            },
            "description": "Deploy resources to Kubernetes cluster"
          }
        },
        {
          "name": "Kubernetes - Get Deployment Status",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"server\": \"kubernetes\",\n  \"tool\": \"kubectl_get\",\n  \"arguments\": {\n    \"resource\": \"deployment\",\n    \"name\": \"my-app\",\n    \"namespace\": \"prod\",\n    \"output\": \"json\"\n  }\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/api/mcp/execute",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "mcp", "execute"]
            },
            "description": "Get Kubernetes deployment status"
          }
        },
        {
          "name": "Security Scanner - NPM Audit",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"server\": \"security-scanner\",\n  \"tool\": \"npm_audit\",\n  \"arguments\": {\n    \"package_json_path\": \"./package.json\",\n    \"audit_level\": \"high\",\n    \"production_only\": true\n  }\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/api/mcp/execute",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "mcp", "execute"]
            },
            "description": "Scan JavaScript dependencies for vulnerabilities"
          }
        },
        {
          "name": "Security Scanner - Docker Security Scan",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"server\": \"security-scanner\",\n  \"tool\": \"docker_security_scan\",\n  \"arguments\": {\n    \"image_name\": \"my-app:latest\",\n    \"severity_threshold\": \"medium\",\n    \"scan_layers\": true\n  }\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/api/mcp/execute",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "mcp", "execute"]
            },
            "description": "Scan Docker image for security vulnerabilities"
          }
        },
        {
          "name": "Slack - Send Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"server\": \"slack-notifications\",\n  \"tool\": \"send_notification\",\n  \"arguments\": {\n    \"channel\": \"#deployments\",\n    \"message\": \"🚀 Production deployment completed successfully!\",\n    \"severity\": \"success\",\n    \"attachments\": [\n      {\n        \"title\": \"Deployment Details\",\n        \"fields\": [\n          {\"title\": \"Version\", \"value\": \"v2.1.0\", \"short\": true},\n          {\"title\": \"Environment\", \"value\": \"Production\", \"short\": true}\n        ],\n        \"color\": \"good\"\n      }\n    ]\n  }\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/api/mcp/execute",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "mcp", "execute"]
            },
            "description": "Send formatted notification to Slack channel"
          }
        },
        {
          "name": "Prometheus - Query Metrics",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"server\": \"prometheus-monitoring\",\n  \"tool\": \"prometheus_query\",\n  \"arguments\": {\n    \"query\": \"100 - (avg(rate(node_cpu_seconds_total{mode=\\\"idle\\\"}[5m])) * 100)\"\n  }\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/api/mcp/execute",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "mcp", "execute"]
            },
            "description": "Execute PromQL query for system metrics"
          }
        },
        {
          "name": "S3 - Upload File",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"server\": \"s3-storage\",\n  \"tool\": \"s3_upload_file\",\n  \"arguments\": {\n    \"local_path\": \"./dist/app-v2.1.0.tar.gz\",\n    \"bucket\": \"company-artifacts\",\n    \"key\": \"releases/app/v2.1.0/app-v2.1.0.tar.gz\",\n    \"metadata\": {\n      \"version\": \"v2.1.0\",\n      \"build-timestamp\": \"2025-05-31T10:00:00Z\"\n    },\n    \"storage_class\": \"STANDARD\"\n  }\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/api/mcp/execute",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "mcp", "execute"]
            },
            "description": "Upload deployment artifact to S3"
          }
        }
      ]
    },
    {
      "name": "Expert Consultation",
      "description": "AI-powered consultation and decision making",
      "item": [
        {
          "name": "Consult AI Experts",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"What's the best deployment strategy for a microservices application with high availability requirements?\",\n  \"expert_types\": [\"deployment\", \"architecture\", \"security\"],\n  \"context\": {\n    \"application_type\": \"microservices\",\n    \"cloud_provider\": \"aws\",\n    \"team_size\": 10,\n    \"traffic_volume\": \"high\"\n  },\n  \"max_tokens\": 1000,\n  \"temperature\": 0.7\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/api/experts/consult",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "experts", "consult"]
            },
            "description": "Submit a query to the Circle of Experts for AI-powered consultation"
          },
          "response": [
            {
              "name": "Expert Consultation Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"What's the best deployment strategy for a microservices application?\",\n  \"expert_types\": [\"deployment\", \"architecture\"]\n}"
                },
                "url": {
                  "raw": "{{BASE_URL}}/api/experts/consult",
                  "host": ["{{BASE_URL}}"],
                  "path": ["api", "experts", "consult"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"query_id\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"query\": \"What's the best deployment strategy for a microservices application?\",\n  \"responses\": [\n    {\n      \"expert\": \"claude-3.5-sonnet\",\n      \"type\": \"deployment\",\n      \"response\": \"For microservices deployment, I recommend blue-green deployment with canary releases...\",\n      \"confidence\": 0.92,\n      \"reasoning\": \"Based on industry best practices and fault tolerance requirements...\"\n    }\n  ],\n  \"consensus\": \"The experts recommend implementing blue-green deployment with progressive delivery...\",\n  \"confidence\": 0.89,\n  \"execution_time\": 3.45\n}"
            }
          ]
        },
        {
          "name": "Check Expert Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/experts/health",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "experts", "health"]
            },
            "description": "Get health status of all AI expert providers"
          }
        }
      ]
    },
    {
      "name": "Deployments",
      "description": "Application deployment automation",
      "item": [
        {
          "name": "Create Deployment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"application_name\": \"my-web-app\",\n  \"environment\": \"production\",\n  \"deployment_type\": \"kubernetes\",\n  \"source\": {\n    \"type\": \"git\",\n    \"location\": \"https://github.com/company/my-web-app.git\",\n    \"branch\": \"main\",\n    \"tag\": \"v2.1.0\"\n  },\n  \"configuration\": {\n    \"replicas\": 3,\n    \"resources\": {\n      \"requests\": {\n        \"cpu\": \"100m\",\n        \"memory\": \"128Mi\"\n      },\n      \"limits\": {\n        \"cpu\": \"500m\",\n        \"memory\": \"512Mi\"\n      }\n    }\n  },\n  \"pre_deployment_checks\": [\n    \"security_scan\",\n    \"dependency_check\",\n    \"integration_tests\"\n  ],\n  \"notifications\": {\n    \"slack_channel\": \"#deployments\",\n    \"email_recipients\": [\"devops@company.com\"]\n  }\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/api/deployments",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "deployments"]
            },
            "description": "Initiate a new deployment workflow"
          }
        },
        {
          "name": "Get Deployment Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/deployments/{{deployment_id}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "deployments", "{{deployment_id}}"],
              "variable": [
                {
                  "key": "deployment_id",
                  "value": "123e4567-e89b-12d3-a456-426614174000"
                }
              ]
            },
            "description": "Get current status and details of a deployment"
          }
        },
        {
          "name": "Get Deployment Logs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/deployments/{{deployment_id}}/logs?follow=false&tail=100",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "deployments", "{{deployment_id}}", "logs"],
              "query": [
                {
                  "key": "follow",
                  "value": "false"
                },
                {
                  "key": "tail",
                  "value": "100"
                }
              ],
              "variable": [
                {
                  "key": "deployment_id",
                  "value": "123e4567-e89b-12d3-a456-426614174000"
                }
              ]
            },
            "description": "Retrieve deployment logs"
          }
        }
      ]
    },
    {
      "name": "Security",
      "description": "Vulnerability scanning and security checks",
      "item": [
        {
          "name": "Run Security Scan",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"scan_type\": \"dependency\",\n  \"target\": {\n    \"type\": \"file\",\n    \"path\": \"./package.json\"\n  },\n  \"options\": {\n    \"severity_threshold\": \"high\",\n    \"include_dev_dependencies\": false,\n    \"scan_depth\": \"normal\"\n  }\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/api/security/scan",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "security", "scan"]
            },
            "description": "Perform comprehensive security scanning"
          }
        },
        {
          "name": "List Vulnerabilities",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/security/vulnerabilities?severity=high&fixed=false",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "security", "vulnerabilities"],
              "query": [
                {
                  "key": "severity",
                  "value": "high"
                },
                {
                  "key": "fixed",
                  "value": "false"
                }
              ]
            },
            "description": "Get list of known vulnerabilities in the system"
          }
        }
      ]
    },
    {
      "name": "Monitoring",
      "description": "System health and metrics",
      "item": [
        {
          "name": "Get System Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/monitoring/metrics?metric_names=cpu_usage,memory_usage,request_rate",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "monitoring", "metrics"],
              "query": [
                {
                  "key": "metric_names",
                  "value": "cpu_usage,memory_usage,request_rate"
                }
              ]
            },
            "description": "Retrieve current system performance metrics"
          }
        },
        {
          "name": "Get Active Alerts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/monitoring/alerts?severity=critical&acknowledged=false",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "monitoring", "alerts"],
              "query": [
                {
                  "key": "severity",
                  "value": "critical"
                },
                {
                  "key": "acknowledged",
                  "value": "false"
                }
              ]
            },
            "description": "Retrieve all active monitoring alerts"
          }
        }
      ]
    },
    {
      "name": "Webhooks",
      "description": "Event notification management",
      "item": [
        {
          "name": "Register Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"url\": \"https://my-service.com/webhooks/code\",\n  \"events\": [\n    \"deployment.started\",\n    \"deployment.completed\",\n    \"deployment.failed\",\n    \"security.vulnerability_found\",\n    \"circuit_breaker.opened\"\n  ],\n  \"secret\": \"my-webhook-secret\",\n  \"headers\": {\n    \"Authorization\": \"Bearer my-service-token\"\n  },\n  \"retry_policy\": {\n    \"max_retries\": 3,\n    \"backoff_seconds\": 60\n  }\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/api/webhooks",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "webhooks"]
            },
            "description": "Register a new webhook for event notifications"
          }
        },
        {
          "name": "Delete Webhook",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/api/webhooks/{{webhook_id}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "webhooks", "{{webhook_id}}"],
              "variable": [
                {
                  "key": "webhook_id",
                  "value": "123e4567-e89b-12d3-a456-426614174000"
                }
              ]
            },
            "description": "Remove a registered webhook"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set timestamp for requests",
          "pm.environment.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common tests for all requests",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has Content-Type header', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Set variables from response for use in other requests",
          "if (pm.response.code === 200 || pm.response.code === 201) {",
          "    const jsonData = pm.response.json();",
          "    ",
          "    // Extract deployment ID",
          "    if (jsonData.deployment_id) {",
          "        pm.environment.set('deployment_id', jsonData.deployment_id);",
          "    }",
          "    ",
          "    // Extract webhook ID",
          "    if (jsonData.webhook_id) {",
          "        pm.environment.set('webhook_id', jsonData.webhook_id);",
          "    }",
          "}"
        ]
      }
    }
  ]
}