{
  "metadata": {
    "generated_by": "SYNTHEX MCP Discovery Fleet",
    "agents": 10,
    "timestamp": "2025-06-13T18:46:05.434464",
    "total_servers": 50,
    "average_synergy": 8.08
  },
  "servers": [
    {
      "name": "mcp-code-analyzer",
      "description": "Advanced static code analysis and refactoring suggestions",
      "synergy_score": 9,
      "capabilities": [
        "AST analysis",
        "Code smell detection",
        "Refactoring automation",
        "Dependency mapping"
      ],
      "integration_points": [
        "src/",
        "rust_core/",
        "tests/"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "languages": [
          "python",
          "rust",
          "javascript"
        ],
        "analysis_depth": "deep",
        "real_time": true
      }
    },
    {
      "name": "mcp-code-generator",
      "description": "AI-powered code generation with context awareness",
      "synergy_score": 9,
      "capabilities": [
        "Boilerplate generation",
        "Test generation",
        "API client generation",
        "Documentation generation"
      ],
      "integration_points": [
        "src/",
        "tests/",
        "docs/"
      ],
      "protocols": [
        "stdio"
      ],
      "config": {
        "templates": "custom",
        "style_guide": "project-specific"
      }
    },
    {
      "name": "mcp-dependency-manager",
      "description": "Intelligent dependency resolution and security scanning",
      "synergy_score": 8,
      "capabilities": [
        "Version conflict resolution",
        "Security vulnerability scanning",
        "License compliance",
        "Update automation"
      ],
      "integration_points": [
        "requirements.txt",
        "package.json",
        "Cargo.toml"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "scan_frequency": "continuous",
        "auto_update": false
      }
    },
    {
      "name": "mcp-git-workflow",
      "description": "Advanced Git operations and workflow automation",
      "synergy_score": 8,
      "capabilities": [
        "Branch management",
        "Conflict resolution",
        "Commit analysis",
        "PR automation"
      ],
      "integration_points": [
        ".git/",
        ".github/"
      ],
      "protocols": [
        "stdio"
      ],
      "config": {
        "branch_strategy": "gitflow",
        "commit_conventions": "conventional"
      }
    },
    {
      "name": "mcp-ide-bridge",
      "description": "Universal IDE integration for enhanced development",
      "synergy_score": 7,
      "capabilities": [
        "Code completion",
        "Real-time error detection",
        "Snippet management",
        "Workspace sync"
      ],
      "integration_points": [
        ".vscode/",
        ".idea/",
        "*.code-workspace"
      ],
      "protocols": [
        "stdio",
        "websocket"
      ],
      "config": {
        "supported_ides": [
          "vscode",
          "intellij",
          "vim",
          "emacs"
        ]
      }
    },
    {
      "name": "mcp-data-pipeline",
      "description": "Streaming data pipeline orchestration and management",
      "synergy_score": 9,
      "capabilities": [
        "ETL orchestration",
        "Stream processing",
        "Data validation",
        "Pipeline monitoring"
      ],
      "integration_points": [
        "src/database/",
        "data/",
        "pipelines/"
      ],
      "protocols": [
        "http",
        "grpc"
      ],
      "config": {
        "engines": [
          "spark",
          "flink",
          "kafka"
        ],
        "batch_size": "adaptive"
      }
    },
    {
      "name": "mcp-data-quality",
      "description": "Automated data quality checks and remediation",
      "synergy_score": 8,
      "capabilities": [
        "Schema validation",
        "Anomaly detection",
        "Data profiling",
        "Quality reporting"
      ],
      "integration_points": [
        "src/database/",
        "tests/data/"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "rules_engine": "custom",
        "ml_anomaly_detection": true
      }
    },
    {
      "name": "mcp-query-optimizer",
      "description": "SQL and NoSQL query optimization and caching",
      "synergy_score": 8,
      "capabilities": [
        "Query analysis",
        "Index suggestions",
        "Cache management",
        "Performance profiling"
      ],
      "integration_points": [
        "src/database/",
        "src/api/"
      ],
      "protocols": [
        "stdio"
      ],
      "config": {
        "databases": [
          "postgresql",
          "mongodb",
          "redis"
        ],
        "cache_strategy": "adaptive"
      }
    },
    {
      "name": "mcp-data-visualization",
      "description": "Real-time data visualization and dashboard generation",
      "synergy_score": 7,
      "capabilities": [
        "Chart generation",
        "Dashboard templates",
        "Real-time updates",
        "Export formats"
      ],
      "integration_points": [
        "src/monitoring/",
        "dashboards/"
      ],
      "protocols": [
        "http",
        "websocket"
      ],
      "config": {
        "frameworks": [
          "plotly",
          "d3js",
          "grafana"
        ],
        "update_interval": "1s"
      }
    },
    {
      "name": "mcp-etl-automation",
      "description": "Intelligent ETL workflow automation",
      "synergy_score": 7,
      "capabilities": [
        "Source detection",
        "Transform rules",
        "Load optimization",
        "Error recovery"
      ],
      "integration_points": [
        "etl/",
        "data/raw/",
        "data/processed/"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "parallelism": "auto",
        "checkpoint_enabled": true
      }
    },
    {
      "name": "mcp-infrastructure-as-code",
      "description": "Advanced IaC management with drift detection",
      "synergy_score": 9,
      "capabilities": [
        "Terraform management",
        "Ansible playbooks",
        "State validation",
        "Drift detection"
      ],
      "integration_points": [
        "infrastructure/",
        "terraform/",
        "ansible/"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "providers": [
          "aws",
          "azure",
          "gcp",
          "kubernetes"
        ],
        "state_backend": "remote"
      }
    },
    {
      "name": "mcp-system-health",
      "description": "Comprehensive system health monitoring and alerting",
      "synergy_score": 9,
      "capabilities": [
        "Resource monitoring",
        "Service health checks",
        "Predictive alerts",
        "Auto-remediation"
      ],
      "integration_points": [
        "monitoring/",
        "src/monitoring/"
      ],
      "protocols": [
        "http",
        "grpc"
      ],
      "config": {
        "metrics_retention": "30d",
        "alert_channels": [
          "slack",
          "email",
          "pagerduty"
        ]
      }
    },
    {
      "name": "mcp-backup-orchestrator",
      "description": "Intelligent backup scheduling and disaster recovery",
      "synergy_score": 8,
      "capabilities": [
        "Backup scheduling",
        "Incremental backups",
        "Recovery testing",
        "Compliance reporting"
      ],
      "integration_points": [
        "backups/",
        "scripts/backup/"
      ],
      "protocols": [
        "stdio"
      ],
      "config": {
        "retention_policy": "grandfather-father-son",
        "encryption": "aes-256"
      }
    },
    {
      "name": "mcp-config-management",
      "description": "Dynamic configuration management with versioning",
      "synergy_score": 8,
      "capabilities": [
        "Config versioning",
        "Environment sync",
        "Secret management",
        "Rollback support"
      ],
      "integration_points": [
        "config/",
        ".env*",
        "secrets/"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "backends": [
          "consul",
          "etcd",
          "vault"
        ],
        "hot_reload": true
      }
    },
    {
      "name": "mcp-log-aggregator",
      "description": "Centralized log aggregation and analysis",
      "synergy_score": 7,
      "capabilities": [
        "Log parsing",
        "Pattern detection",
        "Alert generation",
        "Archive management"
      ],
      "integration_points": [
        "logs/",
        "/var/log/"
      ],
      "protocols": [
        "http",
        "syslog"
      ],
      "config": {
        "storage": "elasticsearch",
        "retention_days": 90
      }
    },
    {
      "name": "mcp-security-scanner",
      "description": "Continuous security vulnerability scanning",
      "synergy_score": 10,
      "capabilities": [
        "SAST/DAST scanning",
        "Dependency checking",
        "Container scanning",
        "Compliance validation"
      ],
      "integration_points": [
        "src/",
        "docker/",
        "k8s/"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "scan_types": [
          "owasp",
          "cve",
          "cis"
        ],
        "severity_threshold": "medium"
      }
    },
    {
      "name": "mcp-secrets-vault",
      "description": "Secure secrets management and rotation",
      "synergy_score": 10,
      "capabilities": [
        "Secret storage",
        "Auto-rotation",
        "Access control",
        "Audit logging"
      ],
      "integration_points": [
        "src/auth/",
        "config/",
        ".env*"
      ],
      "protocols": [
        "http",
        "grpc"
      ],
      "config": {
        "encryption": "aes-256-gcm",
        "rotation_interval": "90d"
      }
    },
    {
      "name": "mcp-access-control",
      "description": "Fine-grained RBAC and access management",
      "synergy_score": 9,
      "capabilities": [
        "Role management",
        "Permission mapping",
        "Access reviews",
        "SSO integration"
      ],
      "integration_points": [
        "src/auth/",
        "src/api/"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "providers": [
          "oauth2",
          "saml",
          "ldap"
        ],
        "mfa_required": true
      }
    },
    {
      "name": "mcp-threat-detection",
      "description": "Real-time threat detection and response",
      "synergy_score": 9,
      "capabilities": [
        "Anomaly detection",
        "Threat intelligence",
        "Incident response",
        "Forensics"
      ],
      "integration_points": [
        "logs/",
        "monitoring/"
      ],
      "protocols": [
        "http",
        "websocket"
      ],
      "config": {
        "ml_models": [
          "isolation_forest",
          "lstm"
        ],
        "threat_feeds": [
          "mitre",
          "sans"
        ]
      }
    },
    {
      "name": "mcp-compliance-engine",
      "description": "Automated compliance checking and reporting",
      "synergy_score": 8,
      "capabilities": [
        "Policy enforcement",
        "Audit trails",
        "Report generation",
        "Remediation tracking"
      ],
      "integration_points": [
        "src/",
        "docs/compliance/"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "frameworks": [
          "gdpr",
          "hipaa",
          "pci-dss",
          "sox"
        ],
        "scan_schedule": "daily"
      }
    },
    {
      "name": "mcp-notification-hub",
      "description": "Multi-channel notification orchestration",
      "synergy_score": 8,
      "capabilities": [
        "Channel routing",
        "Template management",
        "Delivery tracking",
        "Preference management"
      ],
      "integration_points": [
        "src/notifications/",
        "src/api/"
      ],
      "protocols": [
        "http",
        "websocket"
      ],
      "config": {
        "channels": [
          "email",
          "slack",
          "teams",
          "webhook"
        ],
        "rate_limiting": true
      }
    },
    {
      "name": "mcp-chat-ops",
      "description": "ChatOps integration for team collaboration",
      "synergy_score": 8,
      "capabilities": [
        "Command execution",
        "Alert routing",
        "Interactive workflows",
        "Audit logging"
      ],
      "integration_points": [
        "src/api/",
        "scripts/"
      ],
      "protocols": [
        "websocket",
        "http"
      ],
      "config": {
        "platforms": [
          "slack",
          "discord",
          "teams"
        ],
        "command_prefix": "!"
      }
    },
    {
      "name": "mcp-event-bus",
      "description": "Distributed event streaming and routing",
      "synergy_score": 7,
      "capabilities": [
        "Event publishing",
        "Topic management",
        "Event replay",
        "Schema registry"
      ],
      "integration_points": [
        "src/events/",
        "src/api/"
      ],
      "protocols": [
        "amqp",
        "kafka",
        "grpc"
      ],
      "config": {
        "brokers": [
          "rabbitmq",
          "kafka",
          "redis"
        ],
        "persistence": true
      }
    },
    {
      "name": "mcp-webhook-manager",
      "description": "Webhook lifecycle management and delivery",
      "synergy_score": 7,
      "capabilities": [
        "Webhook registration",
        "Retry logic",
        "Signature validation",
        "Event filtering"
      ],
      "integration_points": [
        "src/api/webhooks/"
      ],
      "protocols": [
        "http"
      ],
      "config": {
        "max_retries": 3,
        "timeout": "30s"
      }
    },
    {
      "name": "mcp-api-gateway",
      "description": "Advanced API gateway with rate limiting",
      "synergy_score": 7,
      "capabilities": [
        "Route management",
        "Rate limiting",
        "Authentication",
        "Response caching"
      ],
      "integration_points": [
        "src/api/",
        "gateway/"
      ],
      "protocols": [
        "http",
        "grpc"
      ],
      "config": {
        "load_balancer": "round-robin",
        "cache_ttl": "5m"
      }
    },
    {
      "name": "mcp-metrics-collector",
      "description": "High-performance metrics collection and aggregation",
      "synergy_score": 9,
      "capabilities": [
        "Metric scraping",
        "Aggregation rules",
        "Anomaly detection",
        "Forecasting"
      ],
      "integration_points": [
        "src/monitoring/",
        "monitoring/"
      ],
      "protocols": [
        "prometheus",
        "statsd"
      ],
      "config": {
        "scrape_interval": "15s",
        "retention": "15d"
      }
    },
    {
      "name": "mcp-trace-analyzer",
      "description": "Distributed tracing and performance analysis",
      "synergy_score": 9,
      "capabilities": [
        "Trace collection",
        "Span analysis",
        "Bottleneck detection",
        "Service mapping"
      ],
      "integration_points": [
        "src/",
        "src/api/"
      ],
      "protocols": [
        "otlp",
        "jaeger"
      ],
      "config": {
        "sampling_rate": "adaptive",
        "trace_retention": "7d"
      }
    },
    {
      "name": "mcp-dashboard-builder",
      "description": "Dynamic dashboard generation and management",
      "synergy_score": 8,
      "capabilities": [
        "Dashboard templates",
        "Widget library",
        "Real-time updates",
        "Sharing controls"
      ],
      "integration_points": [
        "monitoring/dashboards/"
      ],
      "protocols": [
        "http",
        "websocket"
      ],
      "config": {
        "backends": [
          "grafana",
          "kibana",
          "custom"
        ],
        "refresh_rate": "5s"
      }
    },
    {
      "name": "mcp-sla-monitor",
      "description": "SLA tracking and compliance monitoring",
      "synergy_score": 8,
      "capabilities": [
        "SLA definition",
        "Uptime tracking",
        "SLO monitoring",
        "Report generation"
      ],
      "integration_points": [
        "src/monitoring/sla.py"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "calculation_window": "rolling",
        "alert_threshold": "99.9%"
      }
    },
    {
      "name": "mcp-log-insights",
      "description": "AI-powered log analysis and insights",
      "synergy_score": 7,
      "capabilities": [
        "Pattern mining",
        "Anomaly detection",
        "Root cause analysis",
        "Predictive alerts"
      ],
      "integration_points": [
        "logs/",
        "src/monitoring/"
      ],
      "protocols": [
        "http"
      ],
      "config": {
        "ml_models": [
          "clustering",
          "nlp"
        ],
        "learning_mode": "continuous"
      }
    },
    {
      "name": "mcp-model-registry",
      "description": "ML model versioning and deployment management",
      "synergy_score": 9,
      "capabilities": [
        "Model versioning",
        "A/B testing",
        "Performance tracking",
        "Rollback support"
      ],
      "integration_points": [
        "models/",
        "src/ml/"
      ],
      "protocols": [
        "http",
        "grpc"
      ],
      "config": {
        "storage": "s3",
        "frameworks": [
          "tensorflow",
          "pytorch",
          "sklearn"
        ]
      }
    },
    {
      "name": "mcp-training-orchestrator",
      "description": "Distributed ML training job management",
      "synergy_score": 9,
      "capabilities": [
        "Job scheduling",
        "Resource allocation",
        "Hyperparameter tuning",
        "Experiment tracking"
      ],
      "integration_points": [
        "training/",
        "src/ml/training/"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "compute": [
          "gpu",
          "tpu",
          "cpu"
        ],
        "frameworks": [
          "kubeflow",
          "mlflow"
        ]
      }
    },
    {
      "name": "mcp-feature-store",
      "description": "Centralized feature engineering and serving",
      "synergy_score": 8,
      "capabilities": [
        "Feature registration",
        "Feature serving",
        "Versioning",
        "Monitoring"
      ],
      "integration_points": [
        "features/",
        "src/ml/features/"
      ],
      "protocols": [
        "http",
        "grpc"
      ],
      "config": {
        "storage": [
          "redis",
          "cassandra"
        ],
        "serving_latency": "<10ms"
      }
    },
    {
      "name": "mcp-inference-server",
      "description": "High-performance model inference serving",
      "synergy_score": 8,
      "capabilities": [
        "Model serving",
        "Batch prediction",
        "Auto-scaling",
        "Request caching"
      ],
      "integration_points": [
        "src/api/ml/",
        "models/deployed/"
      ],
      "protocols": [
        "http",
        "grpc"
      ],
      "config": {
        "frameworks": [
          "triton",
          "torchserve",
          "tfserving"
        ],
        "gpu_support": true
      }
    },
    {
      "name": "mcp-data-labeling",
      "description": "Automated and human-in-the-loop data labeling",
      "synergy_score": 7,
      "capabilities": [
        "Auto-labeling",
        "Quality control",
        "Workflow management",
        "Annotation export"
      ],
      "integration_points": [
        "data/raw/",
        "data/labeled/"
      ],
      "protocols": [
        "http"
      ],
      "config": {
        "labeling_types": [
          "classification",
          "segmentation",
          "ner"
        ],
        "consensus_required": true
      }
    },
    {
      "name": "mcp-cloud-orchestrator",
      "description": "Multi-cloud resource orchestration",
      "synergy_score": 9,
      "capabilities": [
        "Resource provisioning",
        "Cost optimization",
        "Multi-cloud management",
        "Policy enforcement"
      ],
      "integration_points": [
        "infrastructure/",
        "terraform/"
      ],
      "protocols": [
        "http",
        "grpc"
      ],
      "config": {
        "providers": [
          "aws",
          "azure",
          "gcp"
        ],
        "cost_alerts": true
      }
    },
    {
      "name": "mcp-kubernetes-operator",
      "description": "Advanced Kubernetes cluster management",
      "synergy_score": 9,
      "capabilities": [
        "Cluster provisioning",
        "Auto-scaling",
        "Resource optimization",
        "Security policies"
      ],
      "integration_points": [
        "k8s/",
        "helm/"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "distributions": [
          "eks",
          "aks",
          "gke",
          "k3s"
        ],
        "gitops_enabled": true
      }
    },
    {
      "name": "mcp-serverless-deploy",
      "description": "Serverless function deployment and management",
      "synergy_score": 8,
      "capabilities": [
        "Function deployment",
        "Event mapping",
        "Cold start optimization",
        "Cost tracking"
      ],
      "integration_points": [
        "functions/",
        "src/lambdas/"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "platforms": [
          "lambda",
          "cloud-functions",
          "azure-functions"
        ],
        "runtime": [
          "python",
          "nodejs",
          "go"
        ]
      }
    },
    {
      "name": "mcp-cdn-manager",
      "description": "CDN configuration and cache management",
      "synergy_score": 7,
      "capabilities": [
        "Distribution management",
        "Cache invalidation",
        "Origin configuration",
        "Analytics"
      ],
      "integration_points": [
        "static/",
        "public/"
      ],
      "protocols": [
        "http"
      ],
      "config": {
        "providers": [
          "cloudflare",
          "cloudfront",
          "akamai"
        ],
        "cache_strategy": "aggressive"
      }
    },
    {
      "name": "mcp-cost-optimizer",
      "description": "Cloud cost analysis and optimization",
      "synergy_score": 8,
      "capabilities": [
        "Cost analysis",
        "Resource rightsizing",
        "Reserved instance planning",
        "Budget alerts"
      ],
      "integration_points": [
        "infrastructure/",
        "billing/"
      ],
      "protocols": [
        "http"
      ],
      "config": {
        "analysis_frequency": "daily",
        "savings_target": "30%"
      }
    },
    {
      "name": "mcp-test-orchestrator",
      "description": "Intelligent test suite orchestration",
      "synergy_score": 9,
      "capabilities": [
        "Test scheduling",
        "Parallel execution",
        "Flaky test detection",
        "Coverage analysis"
      ],
      "integration_points": [
        "tests/",
        "src/"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "frameworks": [
          "pytest",
          "jest",
          "cargo-test"
        ],
        "parallelism": "auto"
      }
    },
    {
      "name": "mcp-performance-tester",
      "description": "Automated performance and load testing",
      "synergy_score": 8,
      "capabilities": [
        "Load generation",
        "Stress testing",
        "Benchmark tracking",
        "Regression detection"
      ],
      "integration_points": [
        "tests/performance/",
        "benchmarks/"
      ],
      "protocols": [
        "http"
      ],
      "config": {
        "tools": [
          "k6",
          "jmeter",
          "locust"
        ],
        "threshold_alerts": true
      }
    },
    {
      "name": "mcp-chaos-engineer",
      "description": "Chaos engineering and resilience testing",
      "synergy_score": 8,
      "capabilities": [
        "Fault injection",
        "Network chaos",
        "Resource stress",
        "Recovery validation"
      ],
      "integration_points": [
        "k8s/",
        "docker/"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "experiments": [
          "pod-kill",
          "network-delay",
          "cpu-stress"
        ],
        "safety_checks": true
      }
    },
    {
      "name": "mcp-contract-tester",
      "description": "API contract testing and validation",
      "synergy_score": 7,
      "capabilities": [
        "Contract validation",
        "Mock generation",
        "Version compatibility",
        "Breaking change detection"
      ],
      "integration_points": [
        "src/api/",
        "tests/contracts/"
      ],
      "protocols": [
        "stdio"
      ],
      "config": {
        "formats": [
          "openapi",
          "asyncapi",
          "graphql"
        ],
        "strict_mode": true
      }
    },
    {
      "name": "mcp-quality-gates",
      "description": "Automated quality gate enforcement",
      "synergy_score": 8,
      "capabilities": [
        "Code quality checks",
        "Security scanning",
        "Performance benchmarks",
        "Compliance validation"
      ],
      "integration_points": [
        ".github/",
        "ci/"
      ],
      "protocols": [
        "stdio",
        "http"
      ],
      "config": {
        "gates": [
          "coverage>80%",
          "no-critical-vulns",
          "performance-baseline"
        ],
        "block_on_failure": true
      }
    },
    {
      "name": "mcp-doc-generator",
      "description": "Intelligent documentation generation and maintenance",
      "synergy_score": 8,
      "capabilities": [
        "API doc generation",
        "Code documentation",
        "Diagram generation",
        "Version tracking"
      ],
      "integration_points": [
        "docs/",
        "src/"
      ],
      "protocols": [
        "stdio"
      ],
      "config": {
        "formats": [
          "markdown",
          "sphinx",
          "openapi"
        ],
        "auto_update": true
      }
    },
    {
      "name": "mcp-knowledge-graph",
      "description": "Project knowledge graph builder",
      "synergy_score": 8,
      "capabilities": [
        "Entity extraction",
        "Relationship mapping",
        "Search interface",
        "Visualization"
      ],
      "integration_points": [
        "docs/",
        "src/",
        "README.md"
      ],
      "protocols": [
        "http"
      ],
      "config": {
        "graph_db": "neo4j",
        "nlp_enabled": true
      }
    },
    {
      "name": "mcp-changelog-manager",
      "description": "Automated changelog and release notes",
      "synergy_score": 7,
      "capabilities": [
        "Commit analysis",
        "Change categorization",
        "Release note generation",
        "Version tagging"
      ],
      "integration_points": [
        "CHANGELOG.md",
        ".git/"
      ],
      "protocols": [
        "stdio"
      ],
      "config": {
        "format": "conventional-changelog",
        "sections": [
          "features",
          "fixes",
          "breaking"
        ]
      }
    },
    {
      "name": "mcp-doc-validator",
      "description": "Documentation quality and consistency checker",
      "synergy_score": 7,
      "capabilities": [
        "Link checking",
        "Style validation",
        "Completeness check",
        "Example validation"
      ],
      "integration_points": [
        "docs/",
        "*.md"
      ],
      "protocols": [
        "stdio"
      ],
      "config": {
        "style_guide": "custom",
        "spell_check": true
      }
    },
    {
      "name": "mcp-onboarding-assistant",
      "description": "Interactive onboarding and learning paths",
      "synergy_score": 7,
      "capabilities": [
        "Tutorial generation",
        "Progress tracking",
        "Q&A interface",
        "Code examples"
      ],
      "integration_points": [
        "docs/tutorials/",
        "examples/"
      ],
      "protocols": [
        "http",
        "websocket"
      ],
      "config": {
        "learning_paths": [
          "beginner",
          "intermediate",
          "advanced"
        ],
        "interactive_mode": true
      }
    }
  ]
}