# MCP Server Development Container
# Optimized for developing and testing MCP servers
FROM node:20-slim

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    python3-venv \
    build-essential \
    git \
    curl \
    ca-certificates \
    postgresql-client \
    redis-tools \
    sqlite3 \
    && rm -rf /var/lib/apt/lists/*

# Install MCP SDK and dependencies
RUN npm install -g \
    @modelcontextprotocol/sdk \
    @modelcontextprotocol/cli \
    typescript \
    ts-node \
    nodemon \
    pm2

# Install Python MCP support
RUN pip3 install --no-cache-dir \
    mcp \
    uvloop \
    aiohttp \
    asyncio \
    pydantic \
    python-dotenv

# Create development user
RUN groupadd -r mcpdev && useradd -r -g mcpdev -u 1000 mcpdev \
    && mkdir -p /workspace /app/mcp-servers /app/logs /app/data \
    && chown -R mcpdev:mcpdev /workspace /app

# Configure npm for user
USER mcpdev
RUN mkdir -p ~/.npm-global \
    && npm config set prefix '~/.npm-global' \
    && echo 'export PATH=~/.npm-global/bin:$PATH' >> ~/.bashrc

WORKDIR /workspace

# Environment variables for MCP development
ENV NODE_ENV=development \
    MCP_DEV_MODE=true \
    MCP_LOG_LEVEL=debug \
    PATH="/home/mcpdev/.npm-global/bin:${PATH}"

EXPOSE 3000 3001 3002 3003 3004 3005 3006 3007 3008 3009

CMD ["bash"]