# Multi-stage Dockerfile for Rust MCP Servers
# Optimized for high-performance and security

# Stage 1: Builder
FROM rust:1.75-slim-bullseye AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    pkg-config \
    libssl-dev \
    libprotobuf-dev \
    protobuf-compiler \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /build

# Copy manifests
COPY Cargo.toml Cargo.lock ./
COPY rust_src/ ./rust_src/

# Build dependencies first (for better caching)
RUN mkdir -p src && echo "fn main() {}" > src/main.rs
RUN cargo build --release --locked
RUN rm -rf src

# Copy source and build
COPY rust_src/src ./src
RUN touch src/main.rs
RUN cargo build --release --locked

# Stage 2: Security scanning
FROM builder AS security-scan

# Install security tools
RUN cargo install cargo-audit cargo-deny
RUN cargo audit || true
RUN cargo deny check || true

# Stage 3: Runtime
FROM debian:bullseye-slim AS runtime

# Security updates and minimal runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates \
    libssl1.1 \
    && apt-get upgrade -y \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd -r mcp -g 1001 \
    && useradd -r -u 1001 -g mcp -m -d /app mcp

WORKDIR /app

# Copy binary from builder
COPY --from=builder --chown=mcp:mcp /build/target/release/mcp-rust-server ./mcp-rust-server

# Create necessary directories
RUN mkdir -p /app/logs /app/data /tmp/mcp && \
    chown -R mcp:mcp /app /tmp/mcp

# Security: Switch to non-root user
USER mcp

# Environment variables
ENV RUST_LOG=info \
    RUST_BACKTRACE=1 \
    MCP_ENV=production \
    MCP_BIND_ADDRESS=0.0.0.0:8002 \
    MCP_WORKER_THREADS=4 \
    MCP_MAX_CONNECTIONS=1000

# Expose port
EXPOSE 8002

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 \
    CMD ./mcp-rust-server --health-check || exit 1

# Run the binary
ENTRYPOINT ["./mcp-rust-server"]

# Labels
LABEL maintainer="claude-deployment-team" \
      description="Production MCP Rust Server" \
      version="1.0.0" \
      language="rust" \
      security.scan="true" \
      org.opencontainers.image.source="https://github.com/your-org/claude-optimized-deployment"