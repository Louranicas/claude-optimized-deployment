# Security Commands to add after sec_ids_suricata
,
            {
                "id": "sec_ids_tripwire",
                "name": "Tripwire Integrity Check",
                "description": "Tripwire Integrity Check security monitoring",
                "command_template": "tripwire --check --interactive",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['tripwire --check --interactive'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['tripwire'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_samhain",
                "name": "Samhain HIDS Check",
                "description": "Samhain HIDS Check security monitoring",
                "command_template": "samhain -t check --foreground",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['samhain -t check --foreground'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['samhain'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_rkhunter",
                "name": "Rootkit Hunter Scan",
                "description": "Rootkit Hunter Scan security monitoring",
                "command_template": "rkhunter --check --skip-keypress --report-warnings-only",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['rkhunter --check --skip-keypress --report-warnings-only'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['rkhunter'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_chkrootkit",
                "name": "Chkrootkit Scanner",
                "description": "Chkrootkit Scanner security monitoring",
                "command_template": "chkrootkit -q | grep -v 'not infected'",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["chkrootkit -q | grep -v 'not infected'"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['chkrootkit'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_fail2ban",
                "name": "Fail2ban Status",
                "description": "Fail2ban Status security monitoring",
                "command_template": "fail2ban-client status && fail2ban-client status sshd",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['fail2ban-client status'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['fail2ban-client'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_denyhosts",
                "name": "DenyHosts Monitor",
                "description": "DenyHosts Monitor security monitoring",
                "command_template": "denyhosts --purge && tail /var/log/denyhosts",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['denyhosts --purge'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['denyhosts'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_psad",
                "name": "Port Scan Attack Detector",
                "description": "Port Scan Attack Detector security monitoring",
                "command_template": "psad --Status",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['psad --Status'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['psad'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_bro",
                "name": "Bro/Zeek Network Monitor",
                "description": "Bro/Zeek Network Monitor security monitoring",
                "command_template": "zeekctl status && zeekctl top",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['zeekctl status'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['zeekctl'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_tiger",
                "name": "Tiger Security Audit",
                "description": "Tiger Security Audit security monitoring",
                "command_template": "tiger -q",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['tiger -q'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['tiger'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_logwatch",
                "name": "Logwatch Analysis",
                "description": "Logwatch Analysis security monitoring",
                "command_template": "logwatch --detail high --range today",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['logwatch --detail high --range today'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['logwatch'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_swatch",
                "name": "Simple Watcher",
                "description": "Simple Watcher security monitoring",
                "command_template": "swatch --config-file=/etc/swatch.conf",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['swatch --config-file=/etc/swatch.conf'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['swatch'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_sec",
                "name": "SEC Log Correlation",
                "description": "SEC Log Correlation security monitoring",
                "command_template": "sec -conf=/etc/sec.conf -input=/var/log/syslog",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['sec -conf=/etc/sec.conf -input=/var/log/syslog'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['sec'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_ossim",
                "name": "OSSIM Status",
                "description": "OSSIM Status security monitoring",
                "command_template": "ossim-server status",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['ossim-server status'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['ossim-server'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_prelude",
                "name": "Prelude SIEM",
                "description": "Prelude SIEM security monitoring",
                "command_template": "prelude-admin status",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['prelude-admin status'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['prelude-admin'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_wazuh",
                "name": "Wazuh Manager",
                "description": "Wazuh Manager security monitoring",
                "command_template": "wazuh-control status",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['wazuh-control status'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['wazuh-control'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_ids_sagan",
                "name": "Sagan Log Analysis",
                "description": "Sagan Log Analysis security monitoring",
                "command_template": "sagan -C /etc/sagan.conf",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['sagan -C /etc/sagan.conf'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['sagan'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_iptables_list",
                "name": "IPTables Rules List",
                "description": "IPTables Rules List security monitoring",
                "command_template": "iptables -L -n -v --line-numbers",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['iptables -L -n -v --line-numbers'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['iptables'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_iptables_save",
                "name": "IPTables Backup",
                "description": "IPTables Backup security monitoring",
                "command_template": "iptables-save > /tmp/iptables-backup-$(date +%Y%m%d).rules",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['iptables-save > /tmp/iptables-backup-$(date +%Y%m%d).rules'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['iptables-save'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_nftables_list",
                "name": "NFTables Rules",
                "description": "NFTables Rules security monitoring",
                "command_template": "nft list ruleset",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['nft list ruleset'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['nft'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_ufw_status",
                "name": "UFW Status",
                "description": "UFW Status security monitoring",
                "command_template": "ufw status verbose",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['ufw status verbose'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['ufw'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_firewalld_list",
                "name": "FirewallD Zones",
                "description": "FirewallD Zones security monitoring",
                "command_template": "firewall-cmd --list-all-zones",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['firewall-cmd --list-all-zones'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['firewall-cmd'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_conntrack",
                "name": "Connection Tracking",
                "description": "Connection Tracking security monitoring",
                "command_template": "conntrack -L -o extended | head -50",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['conntrack -L -o extended | head -50'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['conntrack'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_ipset_list",
                "name": "IPSet Management",
                "description": "IPSet Management security monitoring",
                "command_template": "ipset list",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['ipset list'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['ipset'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_rate_limit",
                "name": "Rate Limiting",
                "description": "Rate Limiting security monitoring",
                "command_template": "iptables -L INPUT -n -v | grep -E 'recent|limit'",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["iptables -L INPUT -n -v | grep -E 'recent|limit'"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['iptables'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_geoip_check",
                "name": "GeoIP Blocking",
                "description": "GeoIP Blocking security monitoring",
                "command_template": "iptables -L -n -v | grep geoip",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['iptables -L -n -v | grep geoip'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['iptables'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_ddos_check",
                "name": "DDoS Protection",
                "description": "DDoS Protection security monitoring",
                "command_template": "iptables -L -n -v | grep -E 'syn|flood|limit'",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["iptables -L -n -v | grep -E 'syn|flood|limit'"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['iptables'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_pf_status",
                "name": "PF Firewall Status",
                "description": "PF Firewall Status security monitoring",
                "command_template": "pfctl -s all",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['pfctl -s all'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['pfctl'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_ipfw_list",
                "name": "IPFW Rules",
                "description": "IPFW Rules security monitoring",
                "command_template": "ipfw list",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['ipfw list'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['ipfw'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_shorewall",
                "name": "Shorewall Status",
                "description": "Shorewall Status security monitoring",
                "command_template": "shorewall status",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['shorewall status'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['shorewall'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_csf_status",
                "name": "CSF Firewall",
                "description": "CSF Firewall security monitoring",
                "command_template": "csf -l",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['csf -l'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['csf'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_apf_status",
                "name": "APF Status",
                "description": "APF Status security monitoring",
                "command_template": "apf -s",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['apf -s'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['apf'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_block_list",
                "name": "Blocked IPs",
                "description": "Blocked IPs security monitoring",
                "command_template": "iptables -L -n | grep DROP | awk '{print $4}'",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["iptables -L -n | grep DROP | awk '{print $4}'"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['iptables'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_port_scan",
                "name": "Port Scan Defense",
                "description": "Port Scan Defense security monitoring",
                "command_template": "iptables -L -n -v | grep portscan",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['iptables -L -n -v | grep portscan'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['iptables'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_syn_cookies",
                "name": "SYN Cookies",
                "description": "SYN Cookies security monitoring",
                "command_template": "sysctl net.ipv4.tcp_syncookies",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['sysctl net.ipv4.tcp_syncookies'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['sysctl'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_icmp_rules",
                "name": "ICMP Rules",
                "description": "ICMP Rules security monitoring",
                "command_template": "iptables -L -n -v | grep icmp",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['iptables -L -n -v | grep icmp'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['iptables'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_fw_nat_rules",
                "name": "NAT Rules",
                "description": "NAT Rules security monitoring",
                "command_template": "iptables -t nat -L -n -v",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['iptables -t nat -L -n -v'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['iptables'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_lynis",
                "name": "Lynis Security Audit",
                "description": "Lynis Security Audit security monitoring",
                "command_template": "lynis audit system --quick",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['lynis audit system --quick'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['lynis'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_tiger",
                "name": "Tiger Security",
                "description": "Tiger Security security monitoring",
                "command_template": "tiger -q",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['tiger -q'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['tiger'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_openscap",
                "name": "OpenSCAP Compliance",
                "description": "OpenSCAP Compliance security monitoring",
                "command_template": "oscap info",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['oscap info'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['oscap'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_permissions",
                "name": "File Permissions",
                "description": "File Permissions security monitoring",
                "command_template": "find / -perm -4000 -ls 2>/dev/null | head -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['find / -perm -4000 -ls 2>/dev/null | head -20'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['find'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_accounts",
                "name": "User Accounts",
                "description": "User Accounts security monitoring",
                "command_template": "awk -F: '($3 == 0) {print $1}' /etc/passwd",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["awk -F: '($3 == 0) {print $1}' /etc/passwd"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['awk'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_ssh_config",
                "name": "SSH Config",
                "description": "SSH Config security monitoring",
                "command_template": "sshd -T | grep -E 'permitrootlogin|passwordauth'",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["sshd -T | grep -E 'permitrootlogin|passwordauth'"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['sshd'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_kernel",
                "name": "Kernel Security",
                "description": "Kernel Security security monitoring",
                "command_template": "sysctl -a | grep -E 'randomize|syncookies'",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["sysctl -a | grep -E 'randomize|syncookies'"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['sysctl'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_selinux",
                "name": "SELinux Status",
                "description": "SELinux Status security monitoring",
                "command_template": "sestatus -v",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['sestatus -v'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['sestatus'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_apparmor",
                "name": "AppArmor Status",
                "description": "AppArmor Status security monitoring",
                "command_template": "aa-status",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['aa-status'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['aa-status'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_password",
                "name": "Password Policy",
                "description": "Password Policy security monitoring",
                "command_template": "grep -E '^PASS_' /etc/login.defs",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["grep -E '^PASS_' /etc/login.defs"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['grep'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_sudo",
                "name": "Sudo Configuration",
                "description": "Sudo Configuration security monitoring",
                "command_template": "grep -v '^#' /etc/sudoers | grep -v '^$'",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["grep -v '^#' /etc/sudoers | grep -v '^$'"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['grep'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_cron",
                "name": "Cron Jobs",
                "description": "Cron Jobs security monitoring",
                "command_template": "for user in $(cut -f1 -d: /etc/passwd); do crontab -u $user -l 2>/dev/null; done",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['for user in $(cut -f1 -d: /etc/passwd); do crontab -u $user -l 2>/dev/null; done'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['for'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_services",
                "name": "Running Services",
                "description": "Running Services security monitoring",
                "command_template": "systemctl list-unit-files --type=service | grep enabled",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['systemctl list-unit-files --type=service | grep enabled'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['systemctl'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_ports",
                "name": "Open Ports",
                "description": "Open Ports security monitoring",
                "command_template": "ss -tulpn | grep LISTEN",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['ss -tulpn | grep LISTEN'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['ss'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_packages",
                "name": "Installed Packages",
                "description": "Installed Packages security monitoring",
                "command_template": "dpkg -l | grep -E 'telnet|rsh|rlogin'",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["dpkg -l | grep -E 'telnet|rsh|rlogin'"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['dpkg'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_logs",
                "name": "Log Configuration",
                "description": "Log Configuration security monitoring",
                "command_template": "ls -la /var/log/",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['ls -la /var/log/'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['ls'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_tmp",
                "name": "Temp Files",
                "description": "Temp Files security monitoring",
                "command_template": "find /tmp -type f -executable -ls",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['find /tmp -type f -executable -ls'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['find'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_suid",
                "name": "SUID Files",
                "description": "SUID Files security monitoring",
                "command_template": "find / -perm -u+s -type f 2>/dev/null | head -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['find / -perm -u+s -type f 2>/dev/null | head -20'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['find'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_world_writable",
                "name": "World Writable",
                "description": "World Writable security monitoring",
                "command_template": "find / -perm -0002 -type f -ls 2>/dev/null | head -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['find / -perm -0002 -type f -ls 2>/dev/null | head -20'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['find'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_audit_no_owner",
                "name": "Files No Owner",
                "description": "Files No Owner security monitoring",
                "command_template": "find / -nouser -o -nogroup -ls 2>/dev/null | head -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['find / -nouser -o -nogroup -ls 2>/dev/null | head -20'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['find'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_nmap",
                "name": "Nmap Vuln Scan",
                "description": "Nmap Vuln Scan security monitoring",
                "command_template": "nmap --script vuln localhost",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['nmap --script vuln localhost'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['nmap'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_nikto",
                "name": "Nikto Web Scan",
                "description": "Nikto Web Scan security monitoring",
                "command_template": "nikto -h http://localhost",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['nikto -h http://localhost'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['nikto'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_openvas",
                "name": "OpenVAS Check",
                "description": "OpenVAS Check security monitoring",
                "command_template": "gvm-check-setup",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['gvm-check-setup'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['gvm-check-setup'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_wpscan",
                "name": "WordPress Scan",
                "description": "WordPress Scan security monitoring",
                "command_template": "wpscan --url http://localhost/wordpress",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['wpscan --url http://localhost/wordpress'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['wpscan'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_sqlmap",
                "name": "SQL Injection",
                "description": "SQL Injection security monitoring",
                "command_template": "sqlmap -u 'http://localhost/page?id=1' --batch",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["sqlmap -u 'http://localhost/page?id=1' --batch"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['sqlmap'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_nuclei",
                "name": "Nuclei Scanner",
                "description": "Nuclei Scanner security monitoring",
                "command_template": "nuclei -u http://localhost -t cves/",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['nuclei -u http://localhost -t cves/'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['nuclei'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_trivy",
                "name": "Container Scan",
                "description": "Container Scan security monitoring",
                "command_template": "trivy image alpine:latest",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['trivy image alpine:latest'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['trivy'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_grype",
                "name": "Grype Scanner",
                "description": "Grype Scanner security monitoring",
                "command_template": "grype dir:.",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['grype dir:.'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['grype'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_safety",
                "name": "Python Safety",
                "description": "Python Safety security monitoring",
                "command_template": "safety check",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['safety check'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['safety'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_npm_audit",
                "name": "NPM Audit",
                "description": "NPM Audit security monitoring",
                "command_template": "npm audit",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['npm audit'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['npm'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_bundler_audit",
                "name": "Bundle Audit",
                "description": "Bundle Audit security monitoring",
                "command_template": "bundle-audit check",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['bundle-audit check'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['bundle-audit'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_cargo_audit",
                "name": "Cargo Audit",
                "description": "Cargo Audit security monitoring",
                "command_template": "cargo audit",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['cargo audit'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['cargo'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_owasp_dc",
                "name": "Dependency Check",
                "description": "Dependency Check security monitoring",
                "command_template": "dependency-check --scan .",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['dependency-check --scan .'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['dependency-check'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_retire",
                "name": "RetireJS",
                "description": "RetireJS security monitoring",
                "command_template": "retire --path .",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['retire --path .'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['retire'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_gosec",
                "name": "Go Security",
                "description": "Go Security security monitoring",
                "command_template": "gosec ./...",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['gosec ./...'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['gosec'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_bandit",
                "name": "Python Bandit",
                "description": "Python Bandit security monitoring",
                "command_template": "bandit -r .",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['bandit -r .'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['bandit'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_semgrep",
                "name": "Semgrep Scan",
                "description": "Semgrep Scan security monitoring",
                "command_template": "semgrep --config=auto",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['semgrep --config=auto'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['semgrep'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_sonarqube",
                "name": "SonarQube Scan",
                "description": "SonarQube Scan security monitoring",
                "command_template": "sonar-scanner",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['sonar-scanner'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['sonar-scanner'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_clamav",
                "name": "ClamAV Scan",
                "description": "ClamAV Scan security monitoring",
                "command_template": "clamscan -r /home",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['clamscan -r /home'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['clamscan'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_vuln_chkrootkit",
                "name": "Rootkit Check",
                "description": "Rootkit Check security monitoring",
                "command_template": "chkrootkit",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['chkrootkit'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['chkrootkit'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_auth_fail",
                "name": "Auth Failures",
                "description": "Auth Failures security monitoring",
                "command_template": "grep 'authentication failure' /var/log/auth.log | tail -50",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["grep 'authentication failure' /var/log/auth.log | tail -50"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['grep'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_sudo",
                "name": "Sudo Usage",
                "description": "Sudo Usage security monitoring",
                "command_template": "grep sudo /var/log/auth.log | tail -50",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['grep sudo /var/log/auth.log | tail -50'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['grep'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_ssh_attack",
                "name": "SSH Attacks",
                "description": "SSH Attacks security monitoring",
                "command_template": "grep 'Failed password' /var/log/auth.log | awk '{print $11}' | sort | uniq -c",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["grep 'Failed password' /var/log/auth.log | awk '{print $11}' | sort | uniq -c"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['grep'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_web_attack",
                "name": "Web Attacks",
                "description": "Web Attacks security monitoring",
                "command_template": "grep -E 'union.*select|script' /var/log/apache2/access.log | tail -50",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["grep -E 'union.*select|script' /var/log/apache2/access.log | tail -50"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['grep'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_file_change",
                "name": "File Changes",
                "description": "File Changes security monitoring",
                "command_template": "aureport -f --summary",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['aureport -f --summary'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['aureport'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_process_exec",
                "name": "Process Execution",
                "description": "Process Execution security monitoring",
                "command_template": "aureport -x --summary",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['aureport -x --summary'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['aureport'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_network",
                "name": "Network Logs",
                "description": "Network Logs security monitoring",
                "command_template": "ss -tan state established | head -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['ss -tan state established | head -20'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['ss'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_kernel",
                "name": "Kernel Events",
                "description": "Kernel Events security monitoring",
                "command_template": "dmesg | grep -E 'segfault|fault' | tail -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["dmesg | grep -E 'segfault|fault' | tail -20"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['dmesg'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_firewall",
                "name": "Firewall Drops",
                "description": "Firewall Drops security monitoring",
                "command_template": "grep 'DPT=' /var/log/syslog | tail -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["grep 'DPT=' /var/log/syslog | tail -20"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['grep'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_malware",
                "name": "Malware Detection",
                "description": "Malware Detection security monitoring",
                "command_template": "grep -i 'infected\|malware' /var/log/clamav/clamav.log 2>/dev/null | tail -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["grep -i 'infected\\|malware' /var/log/clamav/clamav.log 2>/dev/null | tail -20"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['grep'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_login",
                "name": "Login History",
                "description": "Login History security monitoring",
                "command_template": "last -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['last -20'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['last'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_lastlog",
                "name": "Last Login",
                "description": "Last Login security monitoring",
                "command_template": "lastlog",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['lastlog'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['lastlog'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_wtmp",
                "name": "Login Records",
                "description": "Login Records security monitoring",
                "command_template": "who /var/log/wtmp | tail -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['who /var/log/wtmp | tail -20'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['who'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_btmp",
                "name": "Failed Logins",
                "description": "Failed Logins security monitoring",
                "command_template": "lastb | tail -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['lastb | tail -20'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['lastb'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_secure",
                "name": "Security Events",
                "description": "Security Events security monitoring",
                "command_template": "tail -50 /var/log/secure",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['tail -50 /var/log/secure'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['tail'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_messages",
                "name": "System Messages",
                "description": "System Messages security monitoring",
                "command_template": "grep -i 'error\|fail' /var/log/messages | tail -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["grep -i 'error\\|fail' /var/log/messages | tail -20"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['grep'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_mail",
                "name": "Mail Logs",
                "description": "Mail Logs security monitoring",
                "command_template": "grep -i 'reject\|spam' /var/log/mail.log | tail -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["grep -i 'reject\\|spam' /var/log/mail.log | tail -20"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['grep'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_cron",
                "name": "Cron Logs",
                "description": "Cron Logs security monitoring",
                "command_template": "grep CRON /var/log/syslog | tail -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['grep CRON /var/log/syslog | tail -20'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['grep'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_boot",
                "name": "Boot Logs",
                "description": "Boot Logs security monitoring",
                "command_template": "journalctl -b | grep -i 'fail\|error' | tail -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["journalctl -b | grep -i 'fail\\|error' | tail -20"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['journalctl'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_log_audit",
                "name": "Audit Logs",
                "description": "Audit Logs security monitoring",
                "command_template": "aureport --summary",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['aureport --summary'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['aureport'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_proc_monitor",
                "name": "Process Monitor",
                "description": "Process Monitor security monitoring",
                "command_template": "ps aux | awk '$3 > 80 || $4 > 80'",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["ps aux | awk '$3 > 80 || $4 > 80'"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['ps'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_proc_hidden",
                "name": "Hidden Processes",
                "description": "Hidden Processes security monitoring",
                "command_template": "ps aux | grep -v grep | grep ' \['",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["ps aux | grep -v grep | grep ' \\['"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['ps'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_proc_network",
                "name": "Network Processes",
                "description": "Network Processes security monitoring",
                "command_template": "lsof -i -P | grep LISTEN",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['lsof -i -P | grep LISTEN'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['lsof'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_proc_files",
                "name": "Open Files",
                "description": "Open Files security monitoring",
                "command_template": "lsof | head -50",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['lsof | head -50'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['lsof'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_proc_deleted",
                "name": "Deleted Files",
                "description": "Deleted Files security monitoring",
                "command_template": "lsof | grep deleted",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['lsof | grep deleted'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['lsof'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_net_connections",
                "name": "Active Connections",
                "description": "Active Connections security monitoring",
                "command_template": "netstat -atnp | grep ESTABLISHED",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['netstat -atnp | grep ESTABLISHED'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['netstat'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_net_listeners",
                "name": "Network Listeners",
                "description": "Network Listeners security monitoring",
                "command_template": "ss -tlpn",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['ss -tlpn'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['ss'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_net_raw",
                "name": "Raw Sockets",
                "description": "Raw Sockets security monitoring",
                "command_template": "ss -awp | grep RAW",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['ss -awp | grep RAW'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['ss'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_net_arp",
                "name": "ARP Cache",
                "description": "ARP Cache security monitoring",
                "command_template": "arp -a",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['arp -a'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['arp'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_net_route",
                "name": "Routing Table",
                "description": "Routing Table security monitoring",
                "command_template": "ip route show",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['ip route show'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['ip'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_docker_ps",
                "name": "Docker Containers",
                "description": "Docker Containers security monitoring",
                "command_template": "docker ps -a",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['docker ps -a'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['docker'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_docker_images",
                "name": "Docker Images",
                "description": "Docker Images security monitoring",
                "command_template": "docker images --digests",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['docker images --digests'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['docker'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_docker_inspect",
                "name": "Docker Inspect",
                "description": "Docker Inspect security monitoring",
                "command_template": "docker inspect $(docker ps -q) | grep -E 'Config|HostConfig'",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ["docker inspect $(docker ps -q) | grep -E 'Config|HostConfig'"],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['docker'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_docker_logs",
                "name": "Container Logs",
                "description": "Container Logs security monitoring",
                "command_template": "docker logs $(docker ps -q | head -1) | tail -20",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['docker logs $(docker ps -q | head -1) | tail -20'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['docker'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_k8s_pods",
                "name": "Kubernetes Pods",
                "description": "Kubernetes Pods security monitoring",
                "command_template": "kubectl get pods --all-namespaces",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['kubectl get pods --all-namespaces'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['kubectl'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_k8s_security",
                "name": "K8s Security",
                "description": "K8s Security security monitoring",
                "command_template": "kubectl get psp",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['kubectl get psp'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['kubectl'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_podman_ps",
                "name": "Podman Containers",
                "description": "Podman Containers security monitoring",
                "command_template": "podman ps -a",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['podman ps -a'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['podman'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_podman_images",
                "name": "Podman Images",
                "description": "Podman Images security monitoring",
                "command_template": "podman images",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['podman images'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['podman'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_containerd",
                "name": "Containerd Status",
                "description": "Containerd Status security monitoring",
                "command_template": "ctr containers list",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['ctr containers list'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['ctr'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "sec_runc",
                "name": "Runc Containers",
                "description": "Runc Containers security monitoring",
                "command_template": "runc list",
                "category": CommandCategory.SECURITY_MONITORING,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['runc list'],
                "performance_hints": ['Regular monitoring', 'Automate checks'],
                "dependencies": ['runc'],
                "amd_ryzen_optimized": False,
            }

# Development Commands - full replacement for _generate_additional_commands
# Replace the entire for i in range(100) loop with these real commands


# Additional DevOps commands to add after perf_process_affinity
,
            {
                "id": "devops_ansible_lint",
                "name": "Ansible Linting",
                "description": "Lint Ansible playbooks",
                "command_template": "ansible-lint playbook.yml",
                "category": CommandCategory.DEVOPS_PIPELINE,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [{'name': 'playbook', 'type': 'string', 'default': 'playbook.yml'}],
                "examples": ['ansible-lint site.yml'],
                "performance_hints": ['Use in CI/CD', 'Fix warnings'],
                "dependencies": ['ansible-lint'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "devops_terraform_fmt",
                "name": "Terraform Format",
                "description": "Format Terraform code",
                "command_template": "terraform fmt -check",
                "category": CommandCategory.DEVOPS_PIPELINE,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['terraform fmt'],
                "performance_hints": ['Auto-format', 'Consistent style'],
                "dependencies": ['terraform'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "devops_helm_lint",
                "name": "Helm Linting",
                "description": "Lint Helm charts",
                "command_template": "helm lint {chart}",
                "category": CommandCategory.DEVOPS_PIPELINE,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [{'name': 'chart', 'type': 'string', 'default': './chart'}],
                "examples": ['helm lint mychart/'],
                "performance_hints": ['Validate values', 'Check templates'],
                "dependencies": ['helm'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "devops_gitlab_ci",
                "name": "GitLab CI Validate",
                "description": "Validate GitLab CI",
                "command_template": "gitlab-ci-lint .gitlab-ci.yml",
                "category": CommandCategory.DEVOPS_PIPELINE,
                "safety_level": SafetyLevel.SAFE,
                "parameters": [],
                "examples": ['gitlab-ci-lint'],
                "performance_hints": ['Test locally', 'CI validation'],
                "dependencies": ['gitlab-ci-lint'],
                "amd_ryzen_optimized": False,
            },
            {
                "id": "devops_jenkins_cli",
                "name": "Jenkins CLI",
                "description": "Jenkins operations",
                "command_template": "jenkins-cli list-jobs",
                "category": CommandCategory.DEVOPS_PIPELINE,
                "safety_level": SafetyLevel.LOW_RISK,
                "parameters": [],
                "examples": ['jenkins-cli who-am-i'],
                "performance_hints": ['API token', 'Automate'],
                "dependencies": ['jenkins-cli'],
                "amd_ryzen_optimized": False,
            }