name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: choice
        options:
          - development
          - staging
          - production
      action:
        description: 'Deployment action'
        required: true
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
  TERRAFORM_VERSION: '1.5.0'

jobs:
  terraform:
    name: Terraform ${{ inputs.action }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    
    defaults:
      run:
        working-directory: ./infrastructure
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}" \
            -backend-config="key=${{ inputs.environment }}/terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}"
      
      - name: Terraform Validate
        run: terraform validate
      
      - name: Terraform Plan
        if: inputs.action == 'plan' || inputs.action == 'apply'
        run: |
          terraform plan \
            -var="environment=${{ inputs.environment }}" \
            -out=tfplan
      
      - name: Upload Plan
        if: inputs.action == 'plan'
        uses: actions/upload-artifact@v3
        with:
          name: tfplan-${{ inputs.environment }}
          path: infrastructure/tfplan
      
      - name: Terraform Apply
        if: inputs.action == 'apply'
        run: terraform apply -auto-approve tfplan
      
      - name: Terraform Destroy
        if: inputs.action == 'destroy'
        run: |
          terraform destroy \
            -var="environment=${{ inputs.environment }}" \
            -auto-approve
      
      - name: Generate Summary
        if: always()
        run: |
          echo "## Terraform ${{ inputs.action }} Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Environment: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- Action: ${{ inputs.action }}" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
