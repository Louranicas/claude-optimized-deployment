{
  "test_summary": {
    "total_tests": 9,
    "passed_tests": 0,
    "failed_tests": 9,
    "test_details": [
      {
        "test_name": "Chaos Orchestrator",
        "status": "FAILED"
      },
      {
        "test_name": "Failure Injector",
        "status": "FAILED"
      },
      {
        "test_name": "Resilience Validator",
        "status": "FAILED"
      },
      {
        "test_name": "Breaking Point Analyzer",
        "status": "FAILED"
      },
      {
        "test_name": "Recovery Measurer",
        "status": "FAILED"
      },
      {
        "test_name": "Safety Controller",
        "status": "FAILED"
      },
      {
        "test_name": "Expert Chaos Controller",
        "status": "FAILED"
      },
      {
        "test_name": "Cascade Failure Scenario",
        "status": "FAILED"
      },
      {
        "test_name": "Integration Tests",
        "status": "FAILED"
      }
    ]
  },
  "test_timestamp": "2025-06-06T21:56:30.916250",
  "duration_seconds": 0.018371,
  "framework_validation": {
    "core_components_tested": [
      "ChaosOrchestrator",
      "FailureInjector",
      "ResilienceValidator",
      "BreakingPointAnalyzer",
      "RecoveryMeasurer",
      "SafetyController",
      "ExpertChaosController",
      "CascadeFailureScenario"
    ],
    "integration_tested": true,
    "expert_integration_tested": true,
    "safety_mechanisms_tested": true
  },
  "chaos_engineering_capabilities": {
    "failure_injection": "Comprehensive failure injection across service, network, resource, data, and infrastructure layers",
    "resilience_validation": "System resilience measurement, failure detection validation, and recovery mechanism testing",
    "breaking_point_analysis": "Capacity limit identification, performance cliff detection, and stability boundary measurement",
    "recovery_measurement": "Recovery time measurement, effectiveness analysis, and bottleneck identification",
    "safety_mechanisms": "Pre-experiment validation, continuous monitoring, emergency recovery, and blast radius control",
    "expert_integration": "AI-driven experiment selection, strategy optimization, and intelligent chaos orchestration",
    "cascade_scenarios": "Linear, tree, dependency, and load redistribution cascade failure testing",
    "adaptive_orchestration": "Real-time strategy adjustment based on expert recommendations and learning outcomes"
  }
}