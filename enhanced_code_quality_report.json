{
  "timestamp": "2025-06-09 10:29:41",
  "project_overview": {
    "file_distribution": {
      ".py": 15451,
      ".rs": 235,
      ".js": 39,
      ".ts": 48,
      ".md": 644,
      ".json": 279,
      ".yaml": 64,
      ".yml": 47
    },
    "estimated_total_lines": 121078,
    "project_size_category": "Extra Large",
    "language_diversity": 4
  },
  "language_analysis": {
    "python": {
      "total_files": 30,
      "total_lines": 14641,
      "functions_analyzed": 356,
      "classes_analyzed": 54,
      "imports_count": 293,
      "docstring_coverage": 85.95505617977528,
      "type_hints_usage": 34.831460674157306,
      "complexity_distribution": {
        "low": 280,
        "high": 22,
        "medium": 54
      },
      "common_issues": [
        "Bare except clause in agent7_performance_matrix_validation.py",
        "Bare except clause in test_all_mcp_servers.py",
        "Bare except clause in bash_god_deployment.py",
        "Bare except clause in fix_critical_documentation_links.py",
        "Bare except clause in security_audit_test.py",
        "Bare except clause in validate_documentation_organization.py",
        "Bare except clause in mcp_performance_validation_suite.py",
        "Bare except clause in test_bash_god_comprehensive.py"
      ],
      "best_practices_score": 70.0,
      "average_complexity": 3.5308988764044944
    },
    "rust": {
      "total_files": 20,
      "total_lines": 10440,
      "unsafe_blocks": 2,
      "unwrap_usage": 136,
      "clone_usage": 57,
      "panic_usage": 18,
      "doc_comments": 113,
      "error_handling_score": 100,
      "memory_safety_score": 95.0,
      "common_issues": [
        "High .unwrap() usage in integration_tests.rs",
        "Excessive .clone() usage in htm_storage_validation_standalone.rs",
        "High .unwrap() usage in htm_storage_validation_standalone.rs",
        "Excessive .clone() usage in simple_error_test.rs",
        "High .unwrap() usage in simple_error_test.rs",
        "Excessive .clone() usage in test_error_handling_standalone.rs",
        "High .unwrap() usage in test_error_handling_standalone.rs",
        "Excessive .clone() usage in simple_validation_demo.rs",
        "High .unwrap() usage in simple_validation_demo.rs",
        "Excessive .clone() usage in htm_storage_enhanced_validation.rs",
        "High .unwrap() usage in htm_storage_enhanced_validation.rs",
        "Excessive .clone() usage in test_error_standalone.rs",
        "High .unwrap() usage in test_error_standalone.rs",
        "Excessive .clone() usage in validation_demo.rs",
        "High .unwrap() usage in validation_demo.rs",
        "Excessive .clone() usage in validate_tool_system_standalone.rs",
        "High .unwrap() usage in validate_tool_system_standalone.rs",
        "Excessive .clone() usage in performance_validation.rs",
        "High .unwrap() usage in performance_validation.rs",
        "Excessive .clone() usage in example_performance_test.rs",
        "High .unwrap() usage in example_performance_test.rs",
        "Excessive .clone() usage in integration_test.rs",
        "High .unwrap() usage in integration_test.rs",
        "Excessive .clone() usage in tool_system_validation.rs",
        "High .unwrap() usage in tool_system_validation.rs",
        "Excessive .clone() usage in edge_case_generator.rs",
        "High .unwrap() usage in edge_case_generator.rs",
        "Excessive .clone() usage in run_comprehensive_validation.rs",
        "High .unwrap() usage in run_comprehensive_validation.rs",
        "Excessive .clone() usage in e2e_examples.rs",
        "High .unwrap() usage in e2e_examples.rs",
        "Excessive .clone() usage in performance_test.rs",
        "High .unwrap() usage in performance_test.rs",
        "Excessive .clone() usage in simplified_tool_validation.rs",
        "High .unwrap() usage in simplified_tool_validation.rs",
        "Excessive .clone() usage in test_simple_units.rs",
        "High .unwrap() usage in test_simple_units.rs",
        "Excessive .clone() usage in tool_system_demo.rs",
        "High .unwrap() usage in tool_system_demo.rs"
      ]
    },
    "javascript": {
      "total_files": 10,
      "total_lines": 1396,
      "var_usage": 2,
      "console_logs": 19,
      "loose_equality": 22,
      "arrow_functions": 43,
      "async_await": 27,
      "common_issues": [
        "Multiple console.log statements in test_memory_leak_fixes_standalone.js",
        "Multiple console.log statements in jest.setup.js",
        "Multiple console.log statements in global.setup.js",
        "Multiple console.log statements in global.teardown.js",
        "var usage found in search-index.js",
        "Multiple console.log statements in search-index.js",
        "var usage found in crates.js",
        "Multiple console.log statements in crates.js",
        "var usage found in src-files.js",
        "Multiple console.log statements in src-files.js",
        "var usage found in sidebar-items.js",
        "Multiple console.log statements in sidebar-items.js"
      ],
      "modern_js_score": 74.46808510638297
    }
  },
  "complexity_analysis": {
    "average_cyclomatic_complexity": 48.1,
    "max_complexity_found": 171,
    "high_complexity_files": [
      {
        "file": "/home/louranicas/projects/claude-optimized-deployment/validate_performance_fixes.py",
        "complexity": 55
      },
      {
        "file": "/home/louranicas/projects/claude-optimized-deployment/code_quality_analysis.py",
        "complexity": 144
      },
      {
        "file": "/home/louranicas/projects/claude-optimized-deployment/validation_load_test.py",
        "complexity": 70
      },
      {
        "file": "/home/louranicas/projects/claude-optimized-deployment/agent7_performance_matrix_validation.py",
        "complexity": 56
      },
      {
        "file": "/home/louranicas/projects/claude-optimized-deployment/test_all_mcp_servers_parallel.py",
        "complexity": 72
      },
      {
        "file": "/home/louranicas/projects/claude-optimized-deployment/test_all_mcp_servers.py",
        "complexity": 70
      },
      {
        "file": "/home/louranicas/projects/claude-optimized-deployment/agent_6_production_workflow_tests.py",
        "complexity": 171
      }
    ],
    "complexity_distribution": {
      "low": 1,
      "medium": 3,
      "high": 9,
      "very_high": 7
    },
    "maintainability_concerns": [
      "High average complexity across project",
      "Multiple files with very high complexity"
    ]
  },
  "code_duplicates": {
    "potential_duplicates": 0,
    "duplicate_patterns": [],
    "similarity_threshold": 80,
    "files_with_duplicates": [],
    "duplication_percentage": 0
  },
  "documentation_analysis": {
    "readme_exists": true,
    "api_docs_exist": true,
    "inline_documentation": 97.12230215827337,
    "documentation_files": 970,
    "code_comment_ratio": 0.0,
    "documentation_quality": "Excellent"
  },
  "security_analysis": {
    "potential_vulnerabilities": [],
    "security_score": 55.0,
    "hardcoded_secrets": 0,
    "unsafe_patterns": [
      "exec() usage in test_mcp_server_functionality.py",
      "shell=True in subprocess call in security_audit_circle_consultation.py"
    ],
    "dependency_vulnerabilities": 0,
    "security_recommendations": [
      "Review and secure unsafe code patterns"
    ]
  },
  "dependency_analysis": {
    "python_dependencies": 41,
    "rust_dependencies": 16,
    "javascript_dependencies": 16,
    "outdated_dependencies": [],
    "dependency_health": "Complex",
    "circular_dependencies": []
  },
  "refactoring_priorities": [
    {
      "priority": "Critical",
      "task": "Security Issues",
      "description": "Address hardcoded secrets and unsafe patterns",
      "effort": "Medium",
      "impact": "High"
    },
    {
      "priority": "High",
      "task": "Complex Functions",
      "description": "Refactor functions with cyclomatic complexity > 15",
      "effort": "High",
      "impact": "High"
    },
    {
      "priority": "Medium",
      "task": "Documentation",
      "description": "Add comprehensive documentation and docstrings",
      "effort": "Medium",
      "impact": "Medium"
    },
    {
      "priority": "Medium",
      "task": "Code Duplicates",
      "description": "Eliminate duplicate code patterns",
      "effort": "Medium",
      "impact": "Medium"
    },
    {
      "priority": "Low",
      "task": "Naming Conventions",
      "description": "Standardize naming conventions across codebase",
      "effort": "Low",
      "impact": "Low"
    }
  ],
  "recommendations": [
    "\ud83d\udd34 HIGH PRIORITY: Refactor high-complexity functions to improve maintainability",
    "\ud83d\udfe1 MEDIUM PRIORITY: Break down large files into smaller, focused modules",
    "\u26a0\ufe0f HIGH PRIORITY: Review and secure unsafe code patterns",
    "\ud83e\uddea MEDIUM PRIORITY: Implement comprehensive unit tests",
    "\ud83d\udd04 LOW PRIORITY: Set up continuous integration pipeline",
    "\ud83d\udcca LOW PRIORITY: Add code quality metrics monitoring"
  ],
  "quality_score": 52.1
}