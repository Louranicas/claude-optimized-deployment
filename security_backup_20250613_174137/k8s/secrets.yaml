---
# This file defines ExternalSecret resources that fetch secrets from HashiCorp Vault
# No actual secret values are stored in this file
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: claude-deployment
  labels:
    app: claude-deployment
    component: secret-management
spec:
  provider:
    vault:
      server: "https://vault.claude-deployment.svc.cluster.local:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "claude-deployment"
          serviceAccountRef:
            name: "claude-vault-auth"

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: claude-deployment-db-secret
  namespace: claude-deployment
  labels:
    app: claude-deployment
    component: database
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "claude-deployment"
    vault.hashicorp.com/agent-inject-secret-db: "secret/data/claude-deployment/database"
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: claude-deployment-db-secret
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      metadata:
        labels:
          app: claude-deployment
          component: database
        annotations:
          managed-by: "external-secrets"
          rotation-policy: "30d"
  data:
    - secretKey: database-url
      remoteRef:
        key: secret/data/claude-deployment/database
        property: database-url
    - secretKey: username
      remoteRef:
        key: secret/data/claude-deployment/database
        property: username
    - secretKey: password
      remoteRef:
        key: secret/data/claude-deployment/database
        property: password
    - secretKey: host
      remoteRef:
        key: secret/data/claude-deployment/database
        property: host
    - secretKey: port
      remoteRef:
        key: secret/data/claude-deployment/database
        property: port
    - secretKey: database
      remoteRef:
        key: secret/data/claude-deployment/database
        property: database

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: claude-deployment-redis-secret
  namespace: claude-deployment
  labels:
    app: claude-deployment
    component: cache
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "claude-deployment"
    vault.hashicorp.com/agent-inject-secret-redis: "secret/data/claude-deployment/redis"
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: claude-deployment-redis-secret
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app: claude-deployment
          component: cache
        annotations:
          managed-by: "external-secrets"
          rotation-policy: "30d"
  data:
    - secretKey: redis-url
      remoteRef:
        key: secret/data/claude-deployment/redis
        property: redis-url
    - secretKey: password
      remoteRef:
        key: secret/data/claude-deployment/redis
        property: password

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: claude-deployment-jwt-secret
  namespace: claude-deployment
  labels:
    app: claude-deployment
    component: auth
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "claude-deployment"
    vault.hashicorp.com/agent-inject-secret-jwt: "secret/data/claude-deployment/auth"
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: claude-deployment-jwt-secret
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app: claude-deployment
          component: auth
        annotations:
          managed-by: "external-secrets"
          rotation-policy: "90d"
  data:
    - secretKey: jwt-secret
      remoteRef:
        key: secret/data/claude-deployment/auth
        property: jwt-secret

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: claude-deployment-api-keys
  namespace: claude-deployment
  labels:
    app: claude-deployment
    component: api
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "claude-deployment"
    vault.hashicorp.com/agent-inject-secret-api-keys: "secret/data/claude-deployment/api-keys"
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: claude-deployment-api-keys
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app: claude-deployment
          component: api
        annotations:
          managed-by: "external-secrets"
          rotation-policy: "60d"
  data:
    - secretKey: openai-api-key
      remoteRef:
        key: secret/data/claude-deployment/api-keys
        property: openai-api-key
    - secretKey: anthropic-api-key
      remoteRef:
        key: secret/data/claude-deployment/api-keys
        property: anthropic-api-key
    - secretKey: google-api-key
      remoteRef:
        key: secret/data/claude-deployment/api-keys
        property: google-api-key

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: claude-deployment-monitoring-secret
  namespace: claude-deployment
  labels:
    app: claude-deployment
    component: monitoring
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "claude-deployment"
    vault.hashicorp.com/agent-inject-secret-monitoring: "secret/data/claude-deployment/monitoring"
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: claude-deployment-monitoring-secret
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app: claude-deployment
          component: monitoring
        annotations:
          managed-by: "external-secrets"
          rotation-policy: "30d"
  data:
    - secretKey: grafana-admin-password
      remoteRef:
        key: secret/data/claude-deployment/monitoring
        property: grafana-admin-password
    - secretKey: prometheus-basic-auth
      remoteRef:
        key: secret/data/claude-deployment/monitoring
        property: prometheus-basic-auth

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: claude-deployment-tls-certs
  namespace: claude-deployment
  labels:
    app: claude-deployment
    component: tls
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "claude-deployment"
    vault.hashicorp.com/agent-inject-secret-tls: "secret/data/claude-deployment/tls"
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: claude-deployment-tls-certs
    creationPolicy: Owner
    template:
      type: kubernetes.io/tls
      metadata:
        labels:
          app: claude-deployment
          component: tls
        annotations:
          managed-by: "external-secrets"
          rotation-policy: "365d"
  data:
    - secretKey: tls.crt
      remoteRef:
        key: secret/data/claude-deployment/tls
        property: tls.crt
    - secretKey: tls.key
      remoteRef:
        key: secret/data/claude-deployment/tls
        property: tls.key

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: claude-deployment-container-registry
  namespace: claude-deployment
  labels:
    app: claude-deployment
    component: registry
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "claude-deployment"
    vault.hashicorp.com/agent-inject-secret-registry: "secret/data/claude-deployment/registry"
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: claude-deployment-container-registry
    creationPolicy: Owner
    template:
      type: kubernetes.io/dockerconfigjson
      metadata:
        labels:
          app: claude-deployment
          component: registry
        annotations:
          managed-by: "external-secrets"
          rotation-policy: "30d"
  data:
    - secretKey: .dockerconfigjson
      remoteRef:
        key: secret/data/claude-deployment/registry
        property: dockerconfigjson

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: claude-deployment-webhook-secrets
  namespace: claude-deployment
  labels:
    app: claude-deployment
    component: webhooks
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "claude-deployment"
    vault.hashicorp.com/agent-inject-secret-webhooks: "secret/data/claude-deployment/webhooks"
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: claude-deployment-webhook-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app: claude-deployment
          component: webhooks
        annotations:
          managed-by: "external-secrets"
          rotation-policy: "60d"
  data:
    - secretKey: github-webhook-secret
      remoteRef:
        key: secret/data/claude-deployment/webhooks
        property: github-webhook-secret
    - secretKey: slack-webhook-url
      remoteRef:
        key: secret/data/claude-deployment/webhooks
        property: slack-webhook-url
    - secretKey: pagerduty-api-key
      remoteRef:
        key: secret/data/claude-deployment/webhooks
        property: pagerduty-api-key

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: claude-deployment-backup-credentials
  namespace: claude-deployment
  labels:
    app: claude-deployment
    component: backup
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "claude-deployment"
    vault.hashicorp.com/agent-inject-secret-backup: "secret/data/claude-deployment/backup"
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: claude-deployment-backup-credentials
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app: claude-deployment
          component: backup
        annotations:
          managed-by: "external-secrets"
          rotation-policy: "90d"
  data:
    - secretKey: aws-access-key-id
      remoteRef:
        key: secret/data/claude-deployment/backup
        property: aws-access-key-id
    - secretKey: aws-secret-access-key
      remoteRef:
        key: secret/data/claude-deployment/backup
        property: aws-secret-access-key
    - secretKey: s3-bucket-name
      remoteRef:
        key: secret/data/claude-deployment/backup
        property: s3-bucket-name
    - secretKey: backup-encryption-key
      remoteRef:
        key: secret/data/claude-deployment/backup
        property: backup-encryption-key

---
# ServiceAccount for Vault authentication
apiVersion: v1
kind: ServiceAccount
metadata:
  name: claude-vault-auth
  namespace: claude-deployment
  labels:
    app: claude-deployment
    component: secret-management
  annotations:
    vault.hashicorp.com/service-account: "claude-vault-auth"

---
# Role for Vault access
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vault-auth-role
  namespace: claude-deployment
  labels:
    app: claude-deployment
    component: secret-management
rules:
  - apiGroups: [""]
    resources: ["serviceaccounts/token"]
    verbs: ["create"]

---
# RoleBinding for Vault auth
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vault-auth-binding
  namespace: claude-deployment
  labels:
    app: claude-deployment
    component: secret-management
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vault-auth-role
subjects:
  - kind: ServiceAccount
    name: claude-vault-auth
    namespace: claude-deployment

---
# NetworkPolicy for Vault access
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: vault-access-policy
  namespace: claude-deployment
  labels:
    app: claude-deployment
    component: secret-management
spec:
  podSelector:
    matchLabels:
      vault-access: "true"
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: vault
      ports:
        - protocol: TCP
          port: 8200

---
# PodSecurityPolicy for secure secret handling
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: claude-secure-secrets-psp
  labels:
    app: claude-deployment
    component: secret-management
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true