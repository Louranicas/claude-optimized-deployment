# Production Secrets Configuration
# Note: These are templates - actual secrets should be managed via external secret management
---
apiVersion: v1
kind: Secret
metadata:
  name: claude-deployment-db-secret
  namespace: claude-deployment-prod
  labels:
    app: claude-deployment
    tier: database
    security: restricted
type: Opaque
stringData:
  # Database connection details - will be populated by external secret management
  database-url: "postgresql://claude_admin:${DB_PASSWORD}@${DB_ENDPOINT}:5432/claude_deployment?sslmode=require"
  db-host: "${DB_ENDPOINT}"
  db-port: "5432"
  db-name: "claude_deployment"
  db-username: "claude_admin"
  db-password: "${DB_PASSWORD}"
  db-ssl-mode: "require"

---
apiVersion: v1
kind: Secret
metadata:
  name: claude-deployment-redis-secret
  namespace: claude-deployment-prod
  labels:
    app: claude-deployment
    tier: cache
    security: restricted
type: Opaque
stringData:
  redis-url: "redis://:${REDIS_PASSWORD}@${REDIS_ENDPOINT}:6379/0?ssl=true"
  redis-host: "${REDIS_ENDPOINT}"
  redis-port: "6379"
  redis-password: "${REDIS_PASSWORD}"
  redis-ssl: "true"

---
apiVersion: v1
kind: Secret
metadata:
  name: claude-deployment-jwt-secret
  namespace: claude-deployment-prod
  labels:
    app: claude-deployment
    tier: api
    security: restricted
type: Opaque
stringData:
  jwt-secret: "${JWT_SECRET}"
  jwt-algorithm: "HS256"
  jwt-expiry: "24h"

---
apiVersion: v1
kind: Secret
metadata:
  name: claude-deployment-api-keys
  namespace: claude-deployment-prod
  labels:
    app: claude-deployment
    tier: api
    security: restricted
type: Opaque
stringData:
  openai-api-key: "${OPENAI_API_KEY}"
  anthropic-api-key: "${ANTHROPIC_API_KEY}"
  google-api-key: "${GOOGLE_API_KEY}"

---
apiVersion: v1
kind: Secret
metadata:
  name: claude-deployment-monitoring-secret
  namespace: claude-deployment-prod
  labels:
    app: claude-deployment
    tier: monitoring
    security: restricted
type: Opaque
stringData:
  prometheus-token: "${PROMETHEUS_TOKEN}"
  grafana-admin-password: "${GRAFANA_ADMIN_PASSWORD}"
  alert-manager-webhook: "${ALERT_MANAGER_WEBHOOK}"

---
apiVersion: v1
kind: Secret
metadata:
  name: claude-deployment-tls-secret
  namespace: claude-deployment-prod
  labels:
    app: claude-deployment
    tier: ingress
    security: restricted
type: kubernetes.io/tls
data:
  # TLS certificate and key - will be populated by cert-manager
  tls.crt: ""
  tls.key: ""

---
# External Secrets Operator configuration (if using)
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secrets-manager
  namespace: claude-deployment-prod
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-west-2
      auth:
        serviceAccount:
          name: external-secrets-sa

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: claude-deployment-secrets
  namespace: claude-deployment-prod
spec:
  refreshInterval: 300s # 5 minutes
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: claude-deployment-external-secrets
    creationPolicy: Owner
  data:
  - secretKey: database-password
    remoteRef:
      key: claude-deployment/database
      property: password
  - secretKey: redis-password
    remoteRef:
      key: claude-deployment/redis
      property: password
  - secretKey: jwt-secret
    remoteRef:
      key: claude-deployment/auth
      property: jwt-secret
  - secretKey: openai-api-key
    remoteRef:
      key: claude-deployment/api-keys
      property: openai
  - secretKey: anthropic-api-key
    remoteRef:
      key: claude-deployment/api-keys
      property: anthropic

---
# Service Account for External Secrets
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: claude-deployment-prod
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/claude-deployment-external-secrets-role