[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mcp-learning-system"
version = "0.1.0"
description = "High-performance learning system for MCP servers"
authors = ["MCP Learning System Team"]
license = "MIT"
readme = "README.md"
packages = [{include = "mcp_learning"}]

[tool.poetry.dependencies]
python = "^3.10"
numpy = "^1.26.0"
scikit-learn = "^1.3.0"
pandas = "^2.1.0"
torch = "^2.1.0"
asyncio = "^3.4.3"
aiofiles = "^23.2.1"
uvloop = "^0.19.0"
msgpack = "^1.0.7"
pyarrow = "^14.0.0"
prometheus-client = "^0.19.0"
structlog = "^23.2.0"
celery = {extras = ["redis"], version = "^5.3.0"}
redis = "^5.0.0"
psutil = "^5.9.0"
mmap = "^1.0.0"
cffi = "^1.16.0"
pydantic = "^2.5.0"
httpx = "^0.25.0"
fastapi = "^0.104.0"
uvicorn = "^0.24.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pytest-benchmark = "^4.0.0"
black = "^23.11.0"
ruff = "^0.1.6"
mypy = "^1.7.0"
ipython = "^8.17.0"
jupyterlab = "^4.0.0"

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "C90", "I", "N", "UP", "B", "A", "COM", "C4", "DTZ", "ISC", "ICN", "PIE", "PT", "RET", "SIM", "ARG", "PLE", "PLR", "PLW", "RUF"]
ignore = ["E501", "B008", "B905"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=mcp_learning --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["mcp_learning"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false