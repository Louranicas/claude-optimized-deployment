{
  "test_timestamp": "2025-05-30T11:01:47.491450",
  "total_tests": 57,
  "passed": 46,
  "failed": 11,
  "pass_rate": 0.8070175438596491,
  "test_suites": {
    "Server Availability": {
      "results": [
        "MCPReliabilityTestResult(server_name='brave', tool_name='server_health', test_type='availability', success=True, error_code=None, error_message=None, response_time=9.846687316894531e-05, recovery_successful=False, error_handling_quality='excellent', details={'server_version': '1.0.0', 'tool_count': 4, 'capabilities': {'tools': True, 'resources': False, 'prompts': False, 'experimental': {'web_search': True, 'local_search': True, 'news_search': True, 'image_search': True}}})",
        "MCPReliabilityTestResult(server_name='desktop-commander', tool_name='server_health', test_type='availability', success=True, error_code=None, error_message=None, response_time=8.749961853027344e-05, recovery_successful=False, error_handling_quality='excellent', details={'server_version': '1.0.0', 'tool_count': 5, 'capabilities': {'tools': True, 'resources': False, 'prompts': False, 'experimental': {'command_execution': True, 'file_operations': True, 'directory_management': True, 'infrastructure_commands': True}}})",
        "MCPReliabilityTestResult(server_name='docker', tool_name='server_health', test_type='availability', success=True, error_code=None, error_message=None, response_time=3.790855407714844e-05, recovery_successful=False, error_handling_quality='excellent', details={'server_version': '1.0.0', 'tool_count': 4, 'capabilities': {'tools': True, 'resources': False, 'prompts': False, 'experimental': {'container_management': True, 'image_operations': True, 'docker_compose': True, 'secure_execution': True}}})",
        "MCPReliabilityTestResult(server_name='kubernetes', tool_name='server_health', test_type='availability', success=True, error_code=None, error_message=None, response_time=3.743171691894531e-05, recovery_successful=False, error_handling_quality='excellent', details={'server_version': '1.0.0', 'tool_count': 5, 'capabilities': {'tools': True, 'resources': False, 'prompts': False, 'experimental': {'cluster_management': True, 'deployment_automation': True, 'service_management': True, 'health_monitoring': True}}})",
        "MCPReliabilityTestResult(server_name='azure-devops', tool_name='server_health', test_type='availability', success=True, error_code=None, error_message=None, response_time=3.743171691894531e-05, recovery_successful=False, error_handling_quality='excellent', details={'server_version': '1.0.0', 'tool_count': 7, 'capabilities': {'tools': True, 'resources': False, 'prompts': False, 'experimental': {'pipeline_automation': True, 'work_item_management': True, 'repository_operations': True, 'build_monitoring': True}}})",
        "MCPReliabilityTestResult(server_name='windows-system', tool_name='server_health', test_type='availability', success=True, error_code=None, error_message=None, response_time=2.6226043701171875e-05, recovery_successful=False, error_handling_quality='excellent', details={'server_version': '1.0.0', 'tool_count': 5, 'capabilities': {'tools': True, 'resources': False, 'prompts': False, 'experimental': {'windows_automation': True, 'powershell_execution': True, 'service_management': True, 'registry_operations': True}}})",
        "MCPReliabilityTestResult(server_name='prometheus-monitoring', tool_name='server_health', test_type='availability', success=True, error_code=None, error_message=None, response_time=3.600120544433594e-05, recovery_successful=False, error_handling_quality='excellent', details={'server_version': '1.0.0', 'tool_count': 6, 'capabilities': {'tools': True, 'resources': False, 'prompts': False, 'experimental': {'metric_querying': True, 'alerting': True, 'performance_monitoring': True, 'system_exploration': True, 'security_features': True, 'rate_limiting': True, 'circuit_breaker': True}}})",
        "MCPReliabilityTestResult(server_name='security-scanner', tool_name='server_health', test_type='availability', success=True, error_code=None, error_message=None, response_time=3.6716461181640625e-05, recovery_successful=False, error_handling_quality='excellent', details={'server_version': '2.0.0', 'tool_count': 5, 'capabilities': {'tools': True, 'resources': False, 'prompts': False, 'experimental': {'military_grade_security': True, 'zero_trust_model': True, 'owasp_compliance': True, 'cve_detection': True, 'threat_intelligence': True, 'security_hardening': True, 'audit_logging': True, 'rate_limiting': True, 'circuit_breaker': True}}})",
        "MCPReliabilityTestResult(server_name='slack-notifications', tool_name='server_health', test_type='availability', success=True, error_code=None, error_message=None, response_time=5.435943603515625e-05, recovery_successful=False, error_handling_quality='excellent', details={'server_version': '2.0.0', 'tool_count': 8, 'capabilities': {'tools': True, 'resources': False, 'prompts': False, 'experimental': {'multi_channel': True, 'alert_management': True, 'rate_limiting': True, 'circuit_breaker': True, 'audit_logging': True, 'escalation': True, 'suppression': True}}})",
        "MCPReliabilityTestResult(server_name='s3-storage', tool_name='server_health', test_type='availability', success=True, error_code=None, error_message=None, response_time=2.09808349609375e-05, recovery_successful=False, error_handling_quality='excellent', details={'server_version': '1.0.0', 'tool_count': 6, 'capabilities': {'tools': True, 'resources': False, 'prompts': False, 'experimental': {'file_storage': True, 'backup_automation': True, 'content_delivery': True, 'asset_management': True}}})",
        "MCPReliabilityTestResult(server_name='cloud-storage', tool_name='server_health', test_type='availability', success=True, error_code=None, error_message=None, response_time=4.935264587402344e-05, recovery_successful=False, error_handling_quality='excellent', details={'server_version': '2.0.0', 'tool_count': 10, 'capabilities': {'tools': True, 'resources': False, 'prompts': False, 'experimental': {'multi_cloud': True, 'encryption': True, 'backup_automation': True, 'compliance': True, 'performance_optimization': True, 'cost_management': True}}})"
      ],
      "passed": 11,
      "failed": 0,
      "total": 11
    },
    "Invalid Tool Calls": {
      "results": [
        "MCPReliabilityTestResult(server_name='brave', tool_name='nonexistent_tool', test_type='invalid_tool', success=True, error_code=-32601, error_message='MCP Error -32601: Unknown tool: nonexistent_tool', response_time=9.775161743164062e-05, recovery_successful=False, error_handling_quality='excellent', details={})",
        "MCPReliabilityTestResult(server_name='desktop-commander', tool_name='nonexistent_tool', test_type='invalid_tool', success=True, error_code=-32601, error_message='MCP Error -32601: Unknown tool: nonexistent_tool', response_time=2.9087066650390625e-05, recovery_successful=False, error_handling_quality='excellent', details={})",
        "MCPReliabilityTestResult(server_name='docker', tool_name='nonexistent_tool', test_type='invalid_tool', success=True, error_code=-32000, error_message='MCP Error -32000: Docker is not available on this system', response_time=0.03230643272399902, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='kubernetes', tool_name='nonexistent_tool', test_type='invalid_tool', success=True, error_code=-32000, error_message='MCP Error -32000: kubectl is not available on this system', response_time=0.05063343048095703, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='azure-devops', tool_name='nonexistent_tool', test_type='invalid_tool', success=True, error_code=-32000, error_message='MCP Error -32000: Azure DevOps organization and PAT must be configured', response_time=4.291534423828125e-06, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='windows-system', tool_name='nonexistent_tool', test_type='invalid_tool', success=True, error_code=-32601, error_message='MCP Error -32601: Unknown tool: nonexistent_tool', response_time=8.487701416015625e-05, recovery_successful=False, error_handling_quality='excellent', details={})",
        "MCPReliabilityTestResult(server_name='prometheus-monitoring', tool_name='nonexistent_tool', test_type='invalid_tool', success=True, error_code=-32601, error_message='MCP Error -32601: Unknown tool: nonexistent_tool', response_time=7.009506225585938e-05, recovery_successful=False, error_handling_quality='excellent', details={})",
        "MCPReliabilityTestResult(server_name='security-scanner', tool_name='nonexistent_tool', test_type='invalid_tool', success=True, error_code=-32601, error_message='MCP Error -32601: Unknown tool: nonexistent_tool', response_time=5.7220458984375e-05, recovery_successful=False, error_handling_quality='excellent', details={})",
        "MCPReliabilityTestResult(server_name='slack-notifications', tool_name='nonexistent_tool', test_type='invalid_tool', success=True, error_code=-32601, error_message='MCP Error -32601: Unknown tool: nonexistent_tool', response_time=3.719329833984375e-05, recovery_successful=False, error_handling_quality='excellent', details={})",
        "MCPReliabilityTestResult(server_name='s3-storage', tool_name='nonexistent_tool', test_type='invalid_tool', success=True, error_code=-32601, error_message='MCP Error -32601: Unknown tool: nonexistent_tool', response_time=1.5020370483398438e-05, recovery_successful=False, error_handling_quality='excellent', details={})",
        "MCPReliabilityTestResult(server_name='cloud-storage', tool_name='nonexistent_tool', test_type='invalid_tool', success=True, error_code=-32601, error_message='MCP Error -32601: Unknown tool: nonexistent_tool', response_time=5.1975250244140625e-05, recovery_successful=False, error_handling_quality='excellent', details={})"
      ],
      "passed": 11,
      "failed": 0,
      "total": 11
    },
    "Invalid Parameters": {
      "results": [
        "MCPReliabilityTestResult(server_name='brave', tool_name='brave_web_search', test_type='invalid_params_missing_required_param', success=False, error_code=None, error_message=\"BraveMCPServer._web_search() missing 1 required positional argument: 'query'\", response_time=1.7642974853515625e-05, recovery_successful=False, error_handling_quality='poor', details={'unexpected_error_type': 'TypeError'})",
        "MCPReliabilityTestResult(server_name='brave', tool_name='brave_web_search', test_type='invalid_params_invalid_type', success=False, error_code=None, error_message=None, response_time=None, recovery_successful=False, error_handling_quality='poor', details={'unexpected_success': True, 'test_args': {'query': 123}})",
        "MCPReliabilityTestResult(server_name='brave', tool_name='brave_web_search', test_type='invalid_params_invalid_enum', success=False, error_code=None, error_message=\"BraveMCPServer._web_search() got an unexpected keyword argument 'state'\", response_time=8.630752563476562e-05, recovery_successful=False, error_handling_quality='poor', details={'unexpected_error_type': 'TypeError'})",
        "MCPReliabilityTestResult(server_name='brave', tool_name='brave_web_search', test_type='invalid_params_too_long_string', success=True, error_code=-32000, error_message='MCP Error -32000: Brave API error: 429 - {\"type\":\"ErrorResponse\",\"error\":{\"id\":\"9e8b7cfc-8869-46a3-99a0-a1820abe854d\",\"status\":429,\"code\":\"RATE_LIMITED\",\"detail\":\"Request rate limit exceeded for plan.\",\"meta\":{\"plan\":\"Free\",\"rate_limit\":1,\"rate_current\":1,\"quota_limit\":2000,\"quota_current\":72,\"component\":\"rate_limiter\"}},\"time\":1748602898}', response_time=0.15663456916809082, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='brave', tool_name='brave_web_search', test_type='invalid_params_negative_number', success=False, error_code=None, error_message=\"BraveMCPServer._web_search() missing 1 required positional argument: 'query'\", response_time=2.7418136596679688e-05, recovery_successful=False, error_handling_quality='poor', details={'unexpected_error_type': 'TypeError'})",
        "MCPReliabilityTestResult(server_name='prometheus-monitoring', tool_name='prometheus_query', test_type='invalid_params_missing_required_param', success=True, error_code=-32000, error_message=\"MCP Error -32000: Internal error: PrometheusMonitoringMCP._prometheus_query() missing 1 required positional argument: 'query'\", response_time=0.005640745162963867, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='prometheus-monitoring', tool_name='prometheus_query', test_type='invalid_params_invalid_type', success=True, error_code=-32000, error_message=\"MCP Error -32000: Internal error: 'int' object has no attribute 'strip'\", response_time=0.0020287036895751953, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='prometheus-monitoring', tool_name='prometheus_query', test_type='invalid_params_invalid_enum', success=True, error_code=-32000, error_message=\"MCP Error -32000: Internal error: PrometheusMonitoringMCP._prometheus_query() got an unexpected keyword argument 'state'\", response_time=0.0020580291748046875, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='prometheus-monitoring', tool_name='prometheus_query', test_type='invalid_params_too_long_string', success=True, error_code=-32602, error_message='MCP Error -32602: Query exceeds maximum length of 1000', response_time=1.33514404296875e-05, recovery_successful=False, error_handling_quality='excellent', details={})",
        "MCPReliabilityTestResult(server_name='prometheus-monitoring', tool_name='prometheus_query', test_type='invalid_params_negative_number', success=True, error_code=-32000, error_message='MCP Error -32000: Service temporarily unavailable (circuit open)', response_time=4.291534423828125e-06, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='docker', tool_name='docker_run', test_type='invalid_params_missing_required_param', success=True, error_code=-32000, error_message='MCP Error -32000: Docker is not available on this system', response_time=5.4836273193359375e-06, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='docker', tool_name='docker_run', test_type='invalid_params_invalid_type', success=True, error_code=-32000, error_message='MCP Error -32000: Docker is not available on this system', response_time=1.430511474609375e-06, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='docker', tool_name='docker_run', test_type='invalid_params_invalid_enum', success=True, error_code=-32000, error_message='MCP Error -32000: Docker is not available on this system', response_time=1.1920928955078125e-06, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='docker', tool_name='docker_run', test_type='invalid_params_too_long_string', success=True, error_code=-32000, error_message='MCP Error -32000: Docker is not available on this system', response_time=7.152557373046875e-07, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='docker', tool_name='docker_run', test_type='invalid_params_negative_number', success=True, error_code=-32000, error_message='MCP Error -32000: Docker is not available on this system', response_time=4.0531158447265625e-06, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='kubernetes', tool_name='kubectl_get', test_type='invalid_params_missing_required_param', success=True, error_code=-32000, error_message='MCP Error -32000: kubectl is not available on this system', response_time=3.337860107421875e-06, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='kubernetes', tool_name='kubectl_get', test_type='invalid_params_invalid_type', success=True, error_code=-32000, error_message='MCP Error -32000: kubectl is not available on this system', response_time=1.1920928955078125e-06, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='kubernetes', tool_name='kubectl_get', test_type='invalid_params_invalid_enum', success=True, error_code=-32000, error_message='MCP Error -32000: kubectl is not available on this system', response_time=9.5367431640625e-07, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='kubernetes', tool_name='kubectl_get', test_type='invalid_params_too_long_string', success=True, error_code=-32000, error_message='MCP Error -32000: kubectl is not available on this system', response_time=9.5367431640625e-07, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='kubernetes', tool_name='kubectl_get', test_type='invalid_params_negative_number', success=True, error_code=-32000, error_message='MCP Error -32000: kubectl is not available on this system', response_time=1.1920928955078125e-06, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='security-scanner', tool_name='npm_audit', test_type='invalid_params_missing_required_param', success=False, error_code=None, error_message=None, response_time=None, recovery_successful=False, error_handling_quality='poor', details={'unexpected_success': True, 'test_args': {}})",
        "MCPReliabilityTestResult(server_name='security-scanner', tool_name='npm_audit', test_type='invalid_params_invalid_type', success=False, error_code=None, error_message=\"SecurityScannerMCPServer._npm_audit() got an unexpected keyword argument 'query'\", response_time=0.0001575946807861328, recovery_successful=False, error_handling_quality='poor', details={'unexpected_error_type': 'TypeError'})",
        "MCPReliabilityTestResult(server_name='security-scanner', tool_name='npm_audit', test_type='invalid_params_invalid_enum', success=False, error_code=None, error_message=\"SecurityScannerMCPServer._npm_audit() got an unexpected keyword argument 'state'\", response_time=5.602836608886719e-05, recovery_successful=False, error_handling_quality='poor', details={'unexpected_error_type': 'TypeError'})",
        "MCPReliabilityTestResult(server_name='security-scanner', tool_name='npm_audit', test_type='invalid_params_too_long_string', success=False, error_code=None, error_message='Input exceeds max length 1000', response_time=1.1682510375976562e-05, recovery_successful=False, error_handling_quality='poor', details={'unexpected_error_type': 'ValueError'})",
        "MCPReliabilityTestResult(server_name='security-scanner', tool_name='npm_audit', test_type='invalid_params_negative_number', success=False, error_code=None, error_message=\"SecurityScannerMCPServer._npm_audit() got an unexpected keyword argument 'count'\", response_time=6.151199340820312e-05, recovery_successful=False, error_handling_quality='poor', details={'unexpected_error_type': 'TypeError'})"
      ],
      "passed": 16,
      "failed": 9,
      "total": 25
    },
    "Network Failures": {
      "results": [
        "MCPReliabilityTestResult(server_name='brave', tool_name='brave_web_search', test_type='network_failure', success=False, error_code=None, error_message=None, response_time=None, recovery_successful=False, error_handling_quality='poor', details={'unexpected_success': True})",
        "MCPReliabilityTestResult(server_name='prometheus-monitoring', tool_name='prometheus_query', test_type='network_failure', success=True, error_code=-32000, error_message='MCP Error -32000: Service temporarily unavailable (circuit open)', response_time=0.0005669593811035156, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='slack-notifications', tool_name='send_notification', test_type='network_failure', success=False, error_code=None, error_message=\"SlackNotificationMCPServer._send_notification() got an unexpected keyword argument 'channel'\", response_time=0.00047779083251953125, recovery_successful=False, error_handling_quality='acceptable', details={'error_type': 'TypeError'})",
        "MCPReliabilityTestResult(server_name='s3-storage', tool_name='s3_list_buckets', test_type='network_failure', success=True, error_code=-32000, error_message='MCP Error -32000: AWS CLI not available or not configured', response_time=0.04793667793273926, recovery_successful=False, error_handling_quality='good', details={})"
      ],
      "passed": 2,
      "failed": 2,
      "total": 4
    },
    "Timeout Handling": {
      "results": [
        "MCPReliabilityTestResult(server_name='prometheus-monitoring', tool_name='prometheus_query', test_type='timeout', success=True, error_code=-32000, error_message='MCP Error -32000: Service temporarily unavailable (circuit open)', response_time=0.0004086494445800781, recovery_successful=False, error_handling_quality='good', details={})",
        "MCPReliabilityTestResult(server_name='brave', tool_name='brave_web_search', test_type='timeout', success=True, error_code=-32000, error_message='MCP Error -32000: Brave API error: 429 - {\"type\":\"ErrorResponse\",\"error\":{\"id\":\"09451c13-73e0-4875-91ba-0a6c4e8ec130\",\"status\":429,\"code\":\"RATE_LIMITED\",\"detail\":\"Request rate limit exceeded for plan.\",\"meta\":{\"plan\":\"Free\",\"rate_limit\":1,\"rate_current\":1,\"quota_limit\":2000,\"quota_current\":73,\"component\":\"rate_limiter\"}},\"time\":1748602901}', response_time=0.1561567783355713, recovery_successful=False, error_handling_quality='good', details={})"
      ],
      "passed": 2,
      "failed": 0,
      "total": 2
    },
    "Service Dependencies": {
      "results": [
        "MCPReliabilityTestResult(server_name='docker', tool_name='docker_ps', test_type='dependency_failure', success=True, error_code=-32000, error_message='MCP Error -32000: Docker is not available on this system', response_time=0.00023508071899414062, recovery_successful=False, error_handling_quality='good', details={'dependency': 'Docker daemon'})",
        "MCPReliabilityTestResult(server_name='kubernetes', tool_name='kubectl_get', test_type='dependency_failure', success=True, error_code=-32000, error_message='MCP Error -32000: kubectl is not available on this system', response_time=9.822845458984375e-05, recovery_successful=False, error_handling_quality='excellent', details={'dependency': 'kubectl'})"
      ],
      "passed": 2,
      "failed": 0,
      "total": 2
    },
    "Circuit Breaker": {
      "results": [
        "MCPReliabilityTestResult(server_name='prometheus-monitoring', tool_name='prometheus_query', test_type='circuit_breaker', success=True, error_code=-32000, error_message='MCP Error -32000: Service temporarily unavailable (circuit open)', response_time=1.6927719116210938e-05, recovery_successful=False, error_handling_quality='excellent', details={'circuit_opened_after': 1, 'failure_count': 0})"
      ],
      "passed": 1,
      "failed": 0,
      "total": 1
    },
    "Rate Limiting": {
      "results": [
        "MCPReliabilityTestResult(server_name='prometheus-monitoring', tool_name='prometheus_query', test_type='rate_limiting', success=True, error_code=-32000, error_message='MCP Error -32000: Rate limit exceeded', response_time=9.059906005859375e-06, recovery_successful=False, error_handling_quality='excellent', details={'rate_limited_after': 0, 'request_number': 93})"
      ],
      "passed": 1,
      "failed": 0,
      "total": 1
    }
  },
  "error_handling_quality": {
    "overall_grade": "C",
    "score": 0.7719298245614035,
    "quality_distribution": {
      "excellent": 23,
      "good": 23,
      "acceptable": 1,
      "poor": 10,
      "unknown": 0
    },
    "quality_percentages": {
      "excellent": 40.35087719298245,
      "good": 40.35087719298245,
      "acceptable": 1.7543859649122806,
      "poor": 17.543859649122805,
      "unknown": 0.0
    }
  },
  "recommendations": [
    "ENHANCE: Add retry logic and better network error handling",
    "URGENT: Review error handling in brave server - 5 issues found",
    "URGENT: Review error handling in security-scanner server - 5 issues found"
  ]
}