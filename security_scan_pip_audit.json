{"dependencies": [{"name": "aiohappyeyeballs", "version": "2.6.1", "vulns": []}, {"name": "aiohttp", "version": "3.11.18", "vulns": []}, {"name": "aiosignal", "version": "1.3.2", "vulns": []}, {"name": "alembic", "version": "1.15.2", "vulns": []}, {"name": "annotated-types", "version": "0.7.0", "vulns": []}, {"name": "anthropic", "version": "0.52.1", "vulns": []}, {"name": "anyio", "version": "4.9.0", "vulns": []}, {"name": "astroid", "version": "3.3.10", "vulns": []}, {"name": "attrs", "version": "25.3.0", "vulns": []}, {"name": "authlib", "version": "1.5.2", "vulns": []}, {"name": "automat", "version": "0.8.0", "vulns": []}, {"name": "bandit", "version": "1.8.3", "vulns": []}, {"name": "black", "version": "25.1.0", "vulns": []}, {"name": "blinker", "version": "1.4", "vulns": []}, {"name": "boltons", "version": "21.0.0", "vulns": []}, {"name": "boolean-py", "version": "5.0", "vulns": []}, {"name": "bracex", "version": "2.5.post1", "vulns": []}, {"name": "cachecontrol", "version": "0.14.3", "vulns": []}, {"name": "cachetools", "version": "5.5.2", "vulns": []}, {"name": "certifi", "version": "2019.11.28", "vulns": [{"id": "PYSEC-2022-42986", "fix_versions": ["2022.12.7"], "aliases": ["CVE-2022-23491", "GHSA-43fp-rhv2-5gv8"], "description": "Certifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi 2022.12.07 removes root certificates from \"TrustCor\" from the root store. These are in the process of being removed from Mozilla's trust store. TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found in the linked google group discussion."}, {"id": "PYSEC-2023-135", "fix_versions": ["2023.7.22"], "aliases": ["GHSA-xqr8-7jwr-rhp7", "CVE-2023-37920"], "description": "Certifi 2023.07.22 removes root certificates from \"e-Tugra\" from the root store. These are in the process of being removed from Mozilla's trust store. e-Tugra's root certificates are being removed pursuant to an investigation prompted by reporting of security issues in their systems."}]}, {"name": "cffi", "version": "1.17.1", "vulns": []}, {"name": "chardet", "version": "3.0.4", "vulns": []}, {"name": "charset-normalizer", "version": "3.4.2", "vulns": []}, {"name": "click", "version": "8.1.8", "vulns": []}, {"name": "click-option-group", "version": "0.5.7", "vulns": []}, {"name": "cloud-init", "skip_reason": "Dependency not found on PyPI and could not be audited: cloud-init (24.4.1)"}, {"name": "colorama", "version": "0.4.3", "vulns": []}, {"name": "command-not-found", "skip_reason": "Dependency not found on PyPI and could not be audited: command-not-found (0.3)"}, {"name": "configobj", "version": "5.0.6", "vulns": [{"id": "GHSA-c33w-24p9-8m24", "fix_versions": ["5.0.9"], "aliases": ["CVE-2023-26112"], "description": "All versions of the package configobj are vulnerable to Regular Expression Denial of Service (ReDoS) via the validate function, using (.+?)\\((.*)\\). **Note:** This is only exploitable in the case of a developer, putting the offending value in a server side configuration file."}]}, {"name": "constantly", "version": "15.1.0", "vulns": []}, {"name": "coverage", "version": "7.8.0", "vulns": []}, {"name": "cryptography", "version": "2.8", "vulns": [{"id": "PYSEC-2021-62", "fix_versions": ["3.2.1"], "aliases": ["CVE-2020-25659", "GHSA-hggm-jpg3-v476"], "description": "python-cryptography 3.2 is vulnerable to Bleichenbacher timing attacks in the RSA decryption API, via timed processing of valid PKCS#1 v1.5 ciphertext."}, {"id": "GHSA-w7pp-m8wf-vj6r", "fix_versions": ["39.0.1"], "aliases": ["CVE-2023-23931"], "description": "Previously, `Cipher.update_into` would accept Python objects which implement the buffer protocol, but provide only immutable buffers:  ```pycon >>> outbuf = b\"\\x00\" * 32 >>> c = ciphers.Cipher(AES(b\"\\x00\" * 32), modes.ECB()).encryptor() >>> c.update_into(b\"\\x00\" * 16, outbuf) 16 >>> outbuf b'\\xdc\\x95\\xc0x\\xa2@\\x89\\x89\\xadH\\xa2\\x14\\x92\\x84 \\x87\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00' ```  This would allow immutable objects (such as `bytes`) to be mutated, thus violating fundamental rules of Python. This is a soundness bug -- it allows programmers to misuse an API, it cannot be exploited by attacker controlled data alone.  This now correctly raises an exception.  This issue has been present since `update_into` was originally introduced in cryptography 1.8."}, {"id": "GHSA-x4qr-2fvf-3mr5", "fix_versions": ["39.0.1"], "aliases": ["CVE-2023-0286"], "description": "pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.8.1-39.0.0  are vulnerable to a security issue. More details about the vulnerabilities themselves can be found in https://www.openssl.org/news/secadv/20221213.txt and https://www.openssl.org/news/secadv/20230207.txt.  If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions."}, {"id": "GHSA-5cpq-8wj7-hf2v", "fix_versions": ["41.0.0"], "aliases": [], "description": "pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.5-40.0.2 are vulnerable to a security issue. More details about the vulnerability itself can be found in https://www.openssl.org/news/secadv/20230530.txt.  If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions."}, {"id": "GHSA-jm77-qphf-c4w8", "fix_versions": ["41.0.3"], "aliases": [], "description": "pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.8-41.0.2 are vulnerable to several security issues. More details about the vulnerabilities themselves can be found in https://www.openssl.org/news/secadv/20230731.txt, https://www.openssl.org/news/secadv/20230719.txt, and https://www.openssl.org/news/secadv/20230714.txt.  If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions."}, {"id": "GHSA-3ww4-gg4f-jr7f", "fix_versions": ["42.0.0"], "aliases": ["CVE-2023-50782"], "description": "A flaw was found in the python-cryptography package. This issue may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data."}, {"id": "GHSA-v8gr-m533-ghj9", "fix_versions": ["41.0.4"], "aliases": [], "description": "pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 2.5-41.0.3 are vulnerable to several security issues. More details about the vulnerabilities themselves can be found in https://www.openssl.org/news/secadv/20230908.txt.  If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions."}, {"id": "GHSA-9v9h-cgj8-h64p", "fix_versions": ["42.0.2"], "aliases": ["CVE-2024-0727"], "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a potential Denial of Service attack  Impact summary: Applications loading files in the PKCS12 format from untrusted sources might terminate abruptly.  A file in PKCS12 format can contain certificates and keys and may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL does not correctly check for this case. This can lead to a NULL pointer dereference that results in OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs then that application will be vulnerable to this issue.  OpenSSL APIs that are vulnerable to this are: PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and PKCS12_newpass().  We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function is related to writing data we do not consider it security significant.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue."}]}, {"name": "cyclonedx-python-lib", "version": "9.1.0", "vulns": []}, {"name": "dbus-python", "version": "1.2.16", "vulns": []}, {"name": "defusedxml", "version": "0.7.1", "vulns": []}, {"name": "deprecated", "version": "1.2.18", "vulns": []}, {"name": "dill", "version": "0.4.0", "vulns": []}, {"name": "distro", "version": "1.9.0", "vulns": []}, {"name": "distro-info", "skip_reason": "Dependency not found on PyPI and could not be audited: distro-info (0.23+ubuntu1.1)"}, {"name": "dparse", "version": "0.6.4", "vulns": []}, {"name": "entrypoints", "version": "0.3", "vulns": []}, {"name": "exceptiongroup", "version": "1.2.2", "vulns": []}, {"name": "face", "version": "24.0.0", "vulns": []}, {"name": "fastapi", "version": "0.115.12", "vulns": []}, {"name": "filelock", "version": "3.16.1", "vulns": []}, {"name": "frozenlist", "version": "1.6.0", "vulns": []}, {"name": "glom", "version": "22.1.0", "vulns": []}, {"name": "google-ai-generativelanguage", "version": "0.6.15", "vulns": []}, {"name": "google-api-core", "version": "2.25.0rc1", "vulns": []}, {"name": "google-api-python-client", "version": "2.170.0", "vulns": []}, {"name": "google-auth", "version": "2.40.2", "vulns": []}, {"name": "google-auth-httplib2", "version": "0.2.0", "vulns": []}, {"name": "google-generativeai", "version": "0.8.5", "vulns": []}, {"name": "googleapis-common-protos", "version": "1.70.0", "vulns": []}, {"name": "greenlet", "version": "3.2.2", "vulns": []}, {"name": "grpcio", "version": "1.71.0", "vulns": []}, {"name": "grpcio-status", "version": "1.71.0", "vulns": []}, {"name": "h11", "version": "0.16.0", "vulns": []}, {"name": "httpcore", "version": "1.0.9", "vulns": []}, {"name": "httplib2", "version": "0.22.0", "vulns": []}, {"name": "httptools", "version": "0.6.4", "vulns": []}, {"name": "httpx", "version": "0.28.1", "vulns": []}, {"name": "httpx-sse", "version": "0.4.0", "vulns": []}, {"name": "hyperlink", "version": "19.0.0", "vulns": []}, {"name": "idna", "version": "2.8", "vulns": [{"id": "PYSEC-2024-60", "fix_versions": ["3.7"], "aliases": ["CVE-2024-3651"], "description": "A vulnerability was identified in the kjd/idna library, specifically within the `idna.encode()` function, affecting version 3.6. The issue arises from the function's handling of crafted input strings, which can lead to quadratic complexity and consequently, a denial of service condition. This vulnerability is triggered by a crafted input that causes the `idna.encode()` function to process the input with considerable computational load, significantly increasing the processing time in a quadratic manner relative to the input size."}]}, {"name": "importlib-metadata", "version": "7.1.0", "vulns": []}, {"name": "incremental", "version": "16.10.1", "vulns": []}, {"name": "iniconfig", "version": "2.1.0", "vulns": []}, {"name": "isort", "version": "6.0.1", "vulns": []}, {"name": "jinja2", "version": "3.1.6", "vulns": []}, {"name": "jiter", "version": "0.10.0", "vulns": []}, {"name": "joblib", "version": "1.5.0", "vulns": []}, {"name": "jsonpatch", "version": "1.22", "vulns": []}, {"name": "jsonpointer", "version": "2.0", "vulns": []}, {"name": "jsonschema", "version": "4.23.0", "vulns": []}, {"name": "jsonschema-specifications", "version": "2025.4.1", "vulns": []}, {"name": "keyring", "version": "18.0.1", "vulns": []}, {"name": "language-selector", "skip_reason": "Dependency not found on PyPI and could not be audited: language-selector (0.1)"}, {"name": "launchpadlib", "version": "1.10.13", "vulns": []}, {"name": "lazr-restfulclient", "version": "0.14.2", "vulns": []}, {"name": "lazr-uri", "version": "1.0.3", "vulns": []}, {"name": "license-expression", "version": "30.4.1", "vulns": []}, {"name": "mako", "version": "1.3.10", "vulns": []}, {"name": "markdown-it-py", "version": "3.0.0", "vulns": []}, {"name": "markupsafe", "version": "3.0.2", "vulns": []}, {"name": "marshmallow", "version": "4.0.0", "vulns": []}, {"name": "mccabe", "version": "0.7.0", "vulns": []}, {"name": "mcp", "version": "1.7.1", "vulns": []}, {"name": "mcp-server-pocket-pick", "skip_reason": "Dependency not found on PyPI and could not be audited: mcp-server-pocket-pick (0.1.0)"}, {"name": "mdurl", "version": "0.1.2", "vulns": []}, {"name": "more-itertools", "version": "4.2.0", "vulns": []}, {"name": "msgpack", "version": "1.1.0", "vulns": []}, {"name": "multidict", "version": "6.4.3", "vulns": []}, {"name": "mypy", "version": "1.15.0", "vulns": []}, {"name": "mypy-extensions", "version": "1.1.0", "vulns": []}, {"name": "netifaces", "version": "0.10.4", "vulns": []}, {"name": "nltk", "version": "3.9.1", "vulns": []}, {"name": "numpy", "version": "2.2.5", "vulns": []}, {"name": "oauthlib", "version": "3.1.0", "vulns": []}, {"name": "openai", "version": "1.82.1", "vulns": []}, {"name": "opentelemetry-api", "version": "1.25.0", "vulns": []}, {"name": "opentelemetry-exporter-otlp-proto-common", "version": "1.25.0", "vulns": []}, {"name": "opentelemetry-exporter-otlp-proto-http", "version": "1.25.0", "vulns": []}, {"name": "opentelemetry-instrumentation", "version": "0.46b0", "vulns": []}, {"name": "opentelemetry-instrumentation-requests", "version": "0.46b0", "vulns": []}, {"name": "opentelemetry-proto", "version": "1.25.0", "vulns": []}, {"name": "opentelemetry-sdk", "version": "1.25.0", "vulns": []}, {"name": "opentelemetry-semantic-conventions", "version": "0.46b0", "vulns": []}, {"name": "opentelemetry-util-http", "version": "0.46b0", "vulns": []}, {"name": "packageurl-python", "version": "0.16.0", "vulns": []}, {"name": "packaging", "version": "25.0", "vulns": []}, {"name": "pathspec", "version": "0.12.1", "vulns": []}, {"name": "pbr", "version": "6.1.1", "vulns": []}, {"name": "peewee", "version": "3.18.1", "vulns": []}, {"name": "pexpect", "version": "4.6.0", "vulns": []}, {"name": "pip", "version": "25.1.1", "vulns": []}, {"name": "pip-api", "version": "0.0.34", "vulns": []}, {"name": "pip-audit", "version": "2.9.0", "vulns": []}, {"name": "pip-licenses", "version": "5.0.0", "vulns": []}, {"name": "pip-requirements-parser", "version": "32.0.1", "vulns": []}, {"name": "pip-system-certs", "version": "4.0", "vulns": []}, {"name": "platformdirs", "version": "4.3.8", "vulns": []}, {"name": "pluggy", "version": "1.5.0", "vulns": []}, {"name": "prettytable", "version": "3.16.0", "vulns": []}, {"name": "propcache", "version": "0.3.1", "vulns": []}, {"name": "proto-plus", "version": "1.26.1", "vulns": []}, {"name": "protobuf", "version": "5.29.5", "vulns": []}, {"name": "psutil", "version": "6.1.1", "vulns": []}, {"name": "psycopg2-binary", "version": "2.9.10", "vulns": []}, {"name": "py-serializable", "version": "2.0.0", "vulns": []}, {"name": "pyasn1", "version": "0.4.2", "vulns": []}, {"name": "pyasn1-modules", "version": "0.2.1", "vulns": []}, {"name": "pycparser", "version": "2.22", "vulns": []}, {"name": "pydantic", "version": "2.9.2", "vulns": []}, {"name": "pydantic-core", "version": "2.23.4", "vulns": []}, {"name": "pydantic-settings", "version": "2.9.1", "vulns": []}, {"name": "pygments", "version": "2.19.1", "vulns": []}, {"name": "pygobject", "version": "3.36.0", "vulns": []}, {"name": "pyhamcrest", "version": "1.9.0", "vulns": []}, {"name": "pyjwt", "version": "1.7.1", "vulns": [{"id": "PYSEC-2022-202", "fix_versions": ["2.4.0"], "aliases": ["CVE-2022-29217", "GHSA-ffqj-6fqr-9h24"], "description": "PyJWT is a Python implementation of RFC 7519. PyJWT supports multiple different JWT signing algorithms. With JWT, an attacker submitting the JWT token can choose the used signing algorithm. The PyJWT library requires that the application chooses what algorithms are supported. The application can specify `jwt.algorithms.get_default_algorithms()` to get support for all algorithms, or specify a single algorithm. The issue is not that big as `algorithms=jwt.algorithms.get_default_algorithms()` has to be used. Users should upgrade to v2.4.0 to receive a patch for this issue. As a workaround, always be explicit with the algorithms that are accepted and expected when decoding."}]}, {"name": "pylint", "version": "3.3.7", "vulns": []}, {"name": "pymacaroons", "version": "0.13.0", "vulns": []}, {"name": "pynacl", "version": "1.3.0", "vulns": []}, {"name": "pyopenssl", "version": "19.0.0", "vulns": []}, {"name": "pyparsing", "version": "2.4.6", "vulns": []}, {"name": "pyrsistent", "version": "0.15.5", "vulns": []}, {"name": "pyserial", "version": "3.4", "vulns": []}, {"name": "pytest", "version": "8.3.5", "vulns": []}, {"name": "pytest-cov", "version": "6.1.1", "vulns": []}, {"name": "python-apt", "skip_reason": "Dependency not found on PyPI and could not be audited: python-apt (2.0.1+ubuntu0.20.4.1)"}, {"name": "python-dateutil", "version": "2.9.0.post0", "vulns": []}, {"name": "python-debian", "skip_reason": "Dependency not found on PyPI and could not be audited: python-debian (0.1.36+ubuntu1.1)"}, {"name": "python-dotenv", "version": "1.1.0", "vulns": []}, {"name": "python-multipart", "version": "0.0.20", "vulns": []}, {"name": "pyyaml", "version": "5.3.1", "vulns": [{"id": "PYSEC-2021-142", "fix_versions": ["5.4"], "aliases": ["CVE-2020-14343", "GHSA-8q59-q68h-6hv4"], "description": "A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747."}]}, {"name": "referencing", "version": "0.36.2", "vulns": []}, {"name": "regex", "version": "2024.11.6", "vulns": []}, {"name": "requests", "version": "2.32.3", "vulns": []}, {"name": "requests-unixsocket", "version": "0.2.0", "vulns": []}, {"name": "rich", "version": "13.5.3", "vulns": []}, {"name": "rpds-py", "version": "0.25.0", "vulns": []}, {"name": "rsa", "version": "4.9.1", "vulns": []}, {"name": "ruamel-yaml", "version": "0.18.10", "vulns": []}, {"name": "ruamel-yaml-clib", "version": "0.2.12", "vulns": []}, {"name": "safety", "version": "3.5.1", "vulns": []}, {"name": "safety-schemas", "version": "0.0.14", "vulns": []}, {"name": "scipy", "version": "1.15.3", "vulns": []}, {"name": "secretstorage", "version": "2.3.1", "vulns": []}, {"name": "semgrep", "version": "1.122.0", "vulns": []}, {"name": "service-identity", "version": "18.1.0", "vulns": []}, {"name": "setuptools", "version": "80.3.1", "vulns": []}, {"name": "shellingham", "version": "1.5.4", "vulns": []}, {"name": "simplejson", "version": "3.16.0", "vulns": []}, {"name": "six", "version": "1.14.0", "vulns": []}, {"name": "sniffio", "version": "1.3.1", "vulns": []}, {"name": "sortedcontainers", "version": "2.4.0", "vulns": []}, {"name": "sos", "skip_reason": "Dependency not found on PyPI and could not be audited: sos (4.8.2)"}, {"name": "sqlalchemy", "version": "2.0.40", "vulns": []}, {"name": "sse-starlette", "version": "2.3.4", "vulns": []}, {"name": "ssh-import-id", "version": "5.10", "vulns": []}, {"name": "starlette", "version": "0.46.2", "vulns": []}, {"name": "stevedore", "version": "5.4.1", "vulns": []}, {"name": "systemd-python", "version": "234", "vulns": []}, {"name": "tenacity", "version": "9.1.2", "vulns": []}, {"name": "toml", "version": "0.10.2", "vulns": []}, {"name": "tomli", "version": "2.0.2", "vulns": []}, {"name": "tomlkit", "version": "0.13.2", "vulns": []}, {"name": "tqdm", "version": "4.67.1", "vulns": []}, {"name": "tree-sitter", "version": "0.24.0", "vulns": []}, {"name": "twisted", "version": "18.9.0", "vulns": [{"id": "PYSEC-2019-128", "fix_versions": ["19.2.1"], "aliases": ["GHSA-6cc5-2vg4-cc7m", "CVE-2019-12387"], "description": "In Twisted before 19.2.1, twisted.web did not validate or sanitize URIs or HTTP methods, allowing an attacker to inject invalid characters such as CRLF."}, {"id": "PYSEC-2020-260", "fix_versions": ["20.3.0rc1"], "aliases": ["GHSA-p5xh-vx83-mxcj", "CVE-2020-10109"], "description": "In Twisted Web through 19.10.0, there was an HTTP request splitting vulnerability. When presented with a content-length and a chunked encoding header, the content-length took precedence and the remainder of the request body was interpreted as a pipelined request."}, {"id": "PYSEC-2019-129", "fix_versions": ["19.7.0rc1"], "aliases": ["CVE-2019-12855", "GHSA-65rm-h285-5cc5"], "description": "In words.protocols.jabber.xmlstream in Twisted through 19.2.1, XMPP support did not verify certificates when used with TLS, allowing an attacker to MITM connections."}, {"id": "PYSEC-2020-259", "fix_versions": ["20.3.0rc1"], "aliases": ["GHSA-h96w-mmrf-2h6v", "CVE-2020-10108"], "description": "In Twisted Web through 19.10.0, there was an HTTP request splitting vulnerability. When presented with two content-length headers, it ignored the first header. When the second content-length value was set to zero, the request body was interpreted as a pipelined request."}, {"id": "PYSEC-2022-27", "fix_versions": ["22.1.0"], "aliases": ["GHSA-92x2-jw7w-xvvx", "CVE-2022-21712"], "description": "twisted is an event-driven networking engine written in Python. In affected versions twisted exposes cookies and authorization headers when following cross-origin redirects. This issue is present in the `twited.web.RedirectAgent` and `twisted.web. BrowserLikeRedirectAgent` functions. Users are advised to upgrade. There are no known workarounds."}, {"id": "PYSEC-2022-195", "fix_versions": ["22.4.0"], "aliases": ["GHSA-c2jg-hw38-jrqq", "CVE-2022-24801"], "description": "Twisted is an event-based framework for internet applications, supporting Python 3.6+. Prior to version 22.4.0rc1, the Twisted Web HTTP 1.1 server, located in the `twisted.web.http` module, parsed several HTTP request constructs more leniently than permitted by RFC 7230. This non-conformant parsing can lead to desync if requests pass through multiple HTTP parsers, potentially resulting in HTTP request smuggling. Users who may be affected use Twisted Web's HTTP 1.1 server and/or proxy and also pass requests through a different HTTP server and/or proxy. The Twisted Web client is not affected. The HTTP 2.0 server uses a different parser, so it is not affected. The issue has been addressed in Twisted 22.4.0rc1. Two workarounds are available: Ensure any vulnerabilities in upstream proxies have been addressed, such as by upgrading them; or filter malformed requests by other means, such as configuration of an upstream proxy."}, {"id": "PYSEC-2023-224", "fix_versions": ["23.10.0rc1"], "aliases": ["CVE-2023-46137", "GHSA-xc8x-vp79-p3wm"], "description": "Twisted is an event-based framework for internet applications. Prior to version 23.10.0rc1, when sending multiple HTTP requests in one TCP packet, twisted.web will process the requests asynchronously without guaranteeing the response order. If one of the endpoints is controlled by an attacker, the attacker can delay the response on purpose to manipulate the response of the second request when a victim launched two requests using HTTP pipeline. Version 23.10.0rc1 contains a patch for this issue."}, {"id": "PYSEC-2024-75", "fix_versions": ["24.7.0rc1"], "aliases": ["GHSA-cf56-g6w6-pqq2", "CVE-2024-41810"], "description": "Twisted is an event-based framework for internet applications, supporting Python 3.6+. The `twisted.web.util.redirectTo` function contains an HTML injection vulnerability. If application code allows an attacker to control the redirect URL this vulnerability may result in Reflected Cross-Site Scripting (XSS) in the redirect response HTML body. This vulnerability is fixed in 24.7.0rc1."}, {"id": "GHSA-32gv-6cf3-wcmq", "fix_versions": ["19.10.0"], "aliases": [], "description": "### Impact Twisted web servers that utilize the optional HTTP/2 support suffer from the following flow-control related vulnerabilities:  Ping flood: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9512 Reset flood: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9514 Settings flood: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9515  A Twisted web server supports HTTP/2 requests if you've installed the [`http2` optional dependency set](https://twistedmatrix.com/documents/19.2.0/installation/howto/optional.html).  ### Workarounds There are no workarounds.  ### References https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-002.md  ### For more information If you have any questions or comments about this advisory: * Open an issue in [Twisted's Trac](https://twistedmatrix.com/trac/) "}, {"id": "GHSA-8r99-h8j2-rw64", "fix_versions": ["20.3.0"], "aliases": [], "description": "### Impact Twisted Web is vulnerable to request smuggling attacks:  1. \"When presented with two content-length headers, Twisted Web ignored the first header. When the second content-length was set to zero this caused Twisted Web to interpret the request body as a pipelined request. According to RFC 7230 Section 3.3.3#4, if a message is received with multiple content-length headers with differing value, then the server must reject the message with a 400 response.\" (Jake Miller of Bishop Fox Security) 2. \" When presented with a content-length and a chunked encoding header, the content-length took precedence and the remainder of the request body was interpreted by Twisted Web as a pipelined request. According to RFC 7230 Section 3.3.3#3, if a message with both content-length and chunked encoding is accepted, transfer-encoding overrides the content-length.\" (Jake Miller of Bishop Fox Security) 3. ~\"Twisted should not allow BWS between the filed-name and colon.\" (ZeddYu Lu)~ _closed in 9646_ 4. \"Two CL header with different values is also not allowed.\" (ZeddYu Lu) 5. \"Only accept identity and chunked Transport-Encoding.\" (ZeddYu Lu)  ### Patches https://github.com/twisted/twisted/commit/20c787a14a09e7cbd5dfd8df08ceff00d1fcc081 https://github.com/twisted/twisted/commit/4a7d22e490bb8ff836892cc99a1f54b85ccb0281  ### Workarounds N/A  ### References https://portswigger.net/web-security/request-smuggling "}, {"id": "GHSA-vg46-2rrj-3647", "fix_versions": ["22.10.0rc1"], "aliases": ["CVE-2022-39348"], "description": "When the host header does not match a configured host, `twisted.web.vhost.NameVirtualHost` will return a `NoResource` resource which renders the Host header unescaped into the 404 response allowing HTML and script injection.  Example configuration: ```python from twisted.web.server import Site from twisted.web.vhost import NameVirtualHost from twisted.internet import reactor  resource = NameVirtualHost() site = Site(resource) reactor.listenTCP(8080, site) reactor.run() ``` Output: ``` \u276f curl -H\"Host:<h1>HELLO THERE</h1>\" http://localhost:8080/  <html>   <head><title>404 - No Such Resource</title></head>   <body>     <h1>No Such Resource</h1>     <p>host b'<h1>hello there</h1>' not in vhost map</p>   </body> </html> ```  This vulnerability was introduced in f49041bb67792506d85aeda9cf6157e92f8048f4 and first appeared in the 0.9.4 release."}, {"id": "GHSA-c8m8-j448-xjx7", "fix_versions": ["24.7.0rc1"], "aliases": ["CVE-2024-41671"], "description": "### Summary  The HTTP 1.0 and 1.1 server provided by twisted.web could process pipelined HTTP requests out-of-order, possibly resulting in information disclosure.  ### PoC 0. Start a fresh Debian container: ```sh docker run --workdir /repro --rm -it debian:bookworm-slim ``` 1. Install twisted and its dependencies: ```sh apt -y update && apt -y install ncat git python3 python3-pip \\     && git clone --recurse-submodules https://github.com/twisted/twisted \\     && cd twisted \\     && pip3 install --break-system-packages . ``` 2. Run a twisted.web HTTP server that echos received requests' methods. e.g., the following: ```python from twisted.web import server, resource from twisted.internet import reactor  class TheResource(resource.Resource):     isLeaf = True      def render_GET(self, request) -> bytes:         return b\"GET\"      def render_POST(self, request) -> bytes:         return b\"POST\"  site = server.Site(TheResource()) reactor.listenTCP(80, site) reactor.run() ``` 3. Send it a POST request with a chunked message body, pipelined with another POST request, wait a second, then send a GET request on the same connection: ```sh (printf 'POST / HTTP/1.1\\r\\nTransfer-Encoding: chunked\\r\\n\\r\\n0\\r\\n\\r\\nPOST / HTTP/1.1\\r\\nContent-Length: 0\\r\\n\\r\\n'; sleep 1; printf 'GET / HTTP/1.1\\r\\n\\r\\n'; sleep 1) | nc localhost 80 ``` 4. Observe that the responses arrive out of order: ``` HTTP/1.1 200 OK Server: TwistedWeb/24.3.0.post0 Date: Tue, 09 Jul 2024 06:19:41 GMT Content-Length: 5 Content-Type: text/html  POST HTTP/1.1 200 OK Server: TwistedWeb/24.3.0.post0 Date: Tue, 09 Jul 2024 06:19:42 GMT Content-Length: 4 Content-Type: text/html  GET HTTP/1.1 200 OK Server: TwistedWeb/24.3.0.post0 Date: Tue, 09 Jul 2024 06:19:42 GMT Content-Length: 5 Content-Type: text/html  POST ```  ### Impact See [GHSA-xc8x-vp79-p3wm](https://github.com/twisted/twisted/security/advisories/GHSA-xc8x-vp79-p3wm). Further, for instances of twisted.web HTTP servers deployed behind reverse proxies that implement connection pooling, it may be possible for remote attackers to receive responses intended for other clients of the twisted.web server."}]}, {"name": "typer", "version": "0.15.4", "vulns": []}, {"name": "typing-extensions", "version": "4.13.2", "vulns": []}, {"name": "typing-inspection", "version": "0.4.0", "vulns": []}, {"name": "ubuntu-pro-client", "skip_reason": "Dependency not found on PyPI and could not be audited: ubuntu-pro-client (8001)"}, {"name": "ufw", "skip_reason": "Dependency not found on PyPI and could not be audited: ufw (0.36)"}, {"name": "unattended-upgrades", "skip_reason": "Dependency not found on PyPI and could not be audited: unattended-upgrades (0.1)"}, {"name": "uritemplate", "version": "4.1.1", "vulns": []}, {"name": "urllib3", "version": "2.4.0", "vulns": []}, {"name": "uv", "version": "0.7.2", "vulns": []}, {"name": "uvicorn", "version": "0.34.2", "vulns": []}, {"name": "uvloop", "version": "0.21.0", "vulns": []}, {"name": "wadllib", "version": "1.3.3", "vulns": []}, {"name": "watchfiles", "version": "1.0.5", "vulns": []}, {"name": "wcmatch", "version": "8.5.2", "vulns": []}, {"name": "wcwidth", "version": "0.2.13", "vulns": []}, {"name": "websockets", "version": "15.0.1", "vulns": []}, {"name": "wheel", "version": "0.45.1", "vulns": []}, {"name": "wrapt", "version": "1.17.2", "vulns": []}, {"name": "yarl", "version": "1.20.0", "vulns": []}, {"name": "zipp", "version": "1.0.0", "vulns": []}, {"name": "zope-interface", "version": "4.7.1", "vulns": []}], "fixes": []}
