{
  "compliance_report": {
    "timestamp": "2025-05-30T21:08:01.726368",
    "overall_compliance_score": 72.73,
    "total_servers": 11,
    "servers_compliant": 3,
    "total_tests_run": 66,
    "tests_passed": 48
  },
  "server_details": {
    "brave": {
      "server_name": "brave",
      "timestamp": "2025-05-30T21:07:55.987857",
      "tests": {
        "server_info": {
          "status": "PASS",
          "info": {
            "name": "brave-search",
            "version": "1.0.0",
            "capabilities": {
              "tools": true,
              "resources": false,
              "prompts": false,
              "experimental": {
                "web_search": true,
                "local_search": true,
                "news_search": true,
                "image_search": true
              }
            }
          }
        },
        "tool_registration": {
          "status": "PASS",
          "tool_count": 4,
          "tools": [
            "brave_web_search",
            "brave_local_search",
            "brave_news_search",
            "brave_image_search"
          ]
        },
        "parameter_validation": {
          "status": "PASS"
        },
        "error_handling": {
          "status": "PASS",
          "error_cases": [
            {
              "test": "invalid_tool",
              "status": "PASS",
              "error_code": -32601
            },
            {
              "test": "missing_params",
              "status": "PASS"
            }
          ]
        },
        "message_format": {
          "status": "PASS",
          "tool_tested": "brave_web_search"
        },
        "concurrent_access": {
          "status": "WARN",
          "concurrent_calls": 5,
          "successful_calls": 0,
          "tool_tested": "brave_web_search"
        }
      },
      "compliance_score": 83.33333333333334
    },
    "desktop-commander": {
      "server_name": "desktop-commander",
      "timestamp": "2025-05-30T21:07:57.326910",
      "tests": {
        "server_info": {
          "status": "PASS",
          "info": {
            "name": "desktop-commander",
            "version": "1.0.0",
            "capabilities": {
              "tools": true,
              "resources": false,
              "prompts": false,
              "experimental": {
                "command_execution": true,
                "file_operations": true,
                "directory_management": true,
                "infrastructure_commands": true
              }
            }
          }
        },
        "tool_registration": {
          "status": "PASS",
          "tool_count": 5,
          "tools": [
            "execute_command",
            "read_file",
            "write_file",
            "list_directory",
            "make_command"
          ]
        },
        "parameter_validation": {
          "status": "PASS"
        },
        "error_handling": {
          "status": "PASS",
          "error_cases": [
            {
              "test": "invalid_tool",
              "status": "PASS",
              "error_code": -32601
            },
            {
              "test": "missing_params",
              "status": "PASS"
            }
          ]
        },
        "message_format": {
          "status": "PASS",
          "tool_tested": "execute_command"
        },
        "concurrent_access": {
          "status": "WARN",
          "concurrent_calls": 5,
          "successful_calls": 0,
          "tool_tested": "list_directory"
        }
      },
      "compliance_score": 83.33333333333334
    },
    "docker": {
      "server_name": "docker",
      "timestamp": "2025-05-30T21:07:57.329786",
      "tests": {
        "server_info": {
          "status": "PASS",
          "info": {
            "name": "docker",
            "version": "1.0.0",
            "capabilities": {
              "tools": true,
              "resources": false,
              "prompts": false,
              "experimental": {
                "container_management": true,
                "image_operations": true,
                "docker_compose": true,
                "secure_execution": true
              }
            }
          }
        },
        "tool_registration": {
          "status": "PASS",
          "tool_count": 4,
          "tools": [
            "docker_run",
            "docker_build",
            "docker_compose",
            "docker_ps"
          ]
        },
        "parameter_validation": {
          "status": "PASS"
        },
        "error_handling": {
          "status": "FAIL",
          "error_cases": [
            {
              "test": "invalid_tool",
              "status": "FAIL",
              "error": "Wrong error code: -32000, expected -32601"
            },
            {
              "test": "missing_params",
              "status": "PASS"
            }
          ]
        },
        "message_format": {
          "status": "WARN",
          "warning": "Could not test message format due to tool error",
          "error": "MCP Error -32000: Docker is not available on this system"
        },
        "concurrent_access": {
          "status": "WARN",
          "concurrent_calls": 5,
          "successful_calls": 0,
          "tool_tested": "docker_run"
        }
      },
      "compliance_score": 50.0
    },
    "kubernetes": {
      "server_name": "kubernetes",
      "timestamp": "2025-05-30T21:07:57.392653",
      "tests": {
        "server_info": {
          "status": "PASS",
          "info": {
            "name": "kubernetes",
            "version": "1.0.0",
            "capabilities": {
              "tools": true,
              "resources": false,
              "prompts": false,
              "experimental": {
                "cluster_management": true,
                "deployment_automation": true,
                "service_management": true,
                "health_monitoring": true
              }
            }
          }
        },
        "tool_registration": {
          "status": "PASS",
          "tool_count": 5,
          "tools": [
            "kubectl_apply",
            "kubectl_get",
            "kubectl_delete",
            "kubectl_logs",
            "kubectl_describe"
          ]
        },
        "parameter_validation": {
          "status": "PASS"
        },
        "error_handling": {
          "status": "FAIL",
          "error_cases": [
            {
              "test": "invalid_tool",
              "status": "FAIL",
              "error": "Wrong error code: -32000, expected -32601"
            },
            {
              "test": "missing_params",
              "status": "PASS"
            }
          ]
        },
        "message_format": {
          "status": "WARN",
          "warning": "Could not test message format due to tool error",
          "error": "MCP Error -32000: kubectl is not available on this system"
        },
        "concurrent_access": {
          "status": "WARN",
          "concurrent_calls": 5,
          "successful_calls": 0,
          "tool_tested": "kubectl_get"
        }
      },
      "compliance_score": 50.0
    },
    "azure-devops": {
      "server_name": "azure-devops",
      "timestamp": "2025-05-30T21:07:57.492467",
      "tests": {
        "server_info": {
          "status": "PASS",
          "info": {
            "name": "azure-devops",
            "version": "1.0.0",
            "capabilities": {
              "tools": true,
              "resources": false,
              "prompts": false,
              "experimental": {
                "pipeline_automation": true,
                "work_item_management": true,
                "repository_operations": true,
                "build_monitoring": true
              }
            }
          }
        },
        "tool_registration": {
          "status": "PASS",
          "tool_count": 7,
          "tools": [
            "list_projects",
            "list_pipelines",
            "trigger_pipeline",
            "get_pipeline_runs",
            "create_work_item",
            "get_work_items",
            "create_pull_request"
          ]
        },
        "parameter_validation": {
          "status": "PASS"
        },
        "error_handling": {
          "status": "FAIL",
          "error_cases": [
            {
              "test": "invalid_tool",
              "status": "FAIL",
              "error": "Wrong error code: -32000, expected -32601"
            }
          ]
        },
        "message_format": {
          "status": "WARN",
          "warning": "Could not test message format due to tool error",
          "error": "MCP Error -32000: Azure DevOps organization and PAT must be configured"
        },
        "concurrent_access": {
          "status": "WARN",
          "concurrent_calls": 5,
          "successful_calls": 0,
          "tool_tested": "list_projects"
        }
      },
      "compliance_score": 50.0
    },
    "windows-system": {
      "server_name": "windows-system",
      "timestamp": "2025-05-30T21:07:57.492865",
      "tests": {
        "server_info": {
          "status": "PASS",
          "info": {
            "name": "windows-system",
            "version": "1.0.0",
            "capabilities": {
              "tools": true,
              "resources": false,
              "prompts": false,
              "experimental": {
                "windows_automation": true,
                "powershell_execution": true,
                "service_management": true,
                "registry_operations": true
              }
            }
          }
        },
        "tool_registration": {
          "status": "PASS",
          "tool_count": 5,
          "tools": [
            "powershell_command",
            "windows_service",
            "check_windows_features",
            "windows_environment",
            "windows_network"
          ]
        },
        "parameter_validation": {
          "status": "PASS"
        },
        "error_handling": {
          "status": "PASS",
          "error_cases": [
            {
              "test": "invalid_tool",
              "status": "PASS",
              "error_code": -32601
            },
            {
              "test": "missing_params",
              "status": "PASS"
            }
          ]
        },
        "message_format": {
          "status": "PASS",
          "tool_tested": "powershell_command"
        },
        "concurrent_access": {
          "status": "PASS",
          "concurrent_calls": 5,
          "successful_calls": 5,
          "tool_tested": "powershell_command"
        }
      },
      "compliance_score": 100.0
    },
    "prometheus-monitoring": {
      "server_name": "prometheus-monitoring",
      "timestamp": "2025-05-30T21:07:57.576879",
      "tests": {
        "server_info": {
          "status": "PASS",
          "info": {
            "name": "prometheus-monitoring",
            "version": "1.0.0",
            "capabilities": {
              "tools": true,
              "resources": false,
              "prompts": false,
              "experimental": {
                "metric_querying": true,
                "alerting": true,
                "performance_monitoring": true,
                "system_exploration": true,
                "security_features": true,
                "rate_limiting": true,
                "circuit_breaker": true
              }
            }
          }
        },
        "tool_registration": {
          "status": "PASS",
          "tool_count": 6,
          "tools": [
            "prometheus_query",
            "prometheus_query_range",
            "prometheus_series",
            "prometheus_labels",
            "prometheus_targets",
            "prometheus_alerts"
          ]
        },
        "parameter_validation": {
          "status": "PASS"
        },
        "error_handling": {
          "status": "FAIL",
          "error_cases": [
            {
              "test": "invalid_tool",
              "status": "FAIL",
              "error": "Wrong error code: -32000, expected -32601"
            },
            {
              "test": "missing_params",
              "status": "PASS"
            }
          ]
        },
        "message_format": {
          "status": "WARN",
          "warning": "Could not test message format due to tool error",
          "error": "MCP Error -32000: Internal error: name 'LogContext' is not defined"
        },
        "concurrent_access": {
          "status": "WARN",
          "concurrent_calls": 5,
          "successful_calls": 0,
          "tool_tested": "prometheus_targets"
        }
      },
      "compliance_score": 50.0
    },
    "security-scanner": {
      "server_name": "security-scanner",
      "timestamp": "2025-05-30T21:07:57.599369",
      "tests": {
        "server_info": {
          "status": "PASS",
          "info": {
            "name": "security-scanner",
            "version": "2.0.0",
            "capabilities": {
              "tools": true,
              "resources": false,
              "prompts": false,
              "experimental": {
                "military_grade_security": true,
                "zero_trust_model": true,
                "owasp_compliance": true,
                "cve_detection": true,
                "threat_intelligence": true,
                "security_hardening": true,
                "audit_logging": true,
                "rate_limiting": true,
                "circuit_breaker": true
              }
            }
          }
        },
        "tool_registration": {
          "status": "PASS",
          "tool_count": 5,
          "tools": [
            "npm_audit",
            "python_safety_check",
            "docker_security_scan",
            "file_security_scan",
            "credential_scan"
          ]
        },
        "parameter_validation": {
          "status": "PASS"
        },
        "error_handling": {
          "status": "PASS",
          "error_cases": [
            {
              "test": "invalid_tool",
              "status": "PASS",
              "error_code": -32601
            }
          ]
        },
        "message_format": {
          "status": "PASS",
          "tool_tested": "npm_audit"
        },
        "concurrent_access": {
          "status": "PASS",
          "concurrent_calls": 5,
          "successful_calls": 5,
          "tool_tested": "npm_audit"
        }
      },
      "compliance_score": 100.0
    },
    "slack-notifications": {
      "server_name": "slack-notifications",
      "timestamp": "2025-05-30T21:07:59.139408",
      "tests": {
        "server_info": {
          "status": "PASS",
          "info": {
            "name": "communication-hub",
            "version": "2.0.0",
            "capabilities": {
              "tools": true,
              "resources": false,
              "prompts": false,
              "experimental": {
                "multi_channel": true,
                "alert_management": true,
                "rate_limiting": true,
                "circuit_breaker": true,
                "audit_logging": true,
                "escalation": true,
                "suppression": true
              }
            }
          }
        },
        "tool_registration": {
          "status": "PASS",
          "tool_count": 8,
          "tools": [
            "send_notification",
            "send_alert",
            "post_message",
            "create_channel",
            "update_status",
            "broadcast_deployment",
            "escalate_incident",
            "list_channels"
          ]
        },
        "parameter_validation": {
          "status": "PASS"
        },
        "error_handling": {
          "status": "PASS",
          "error_cases": [
            {
              "test": "invalid_tool",
              "status": "PASS",
              "error_code": -32601
            },
            {
              "test": "missing_params",
              "status": "PASS"
            }
          ]
        },
        "message_format": {
          "status": "PASS",
          "tool_tested": "send_notification"
        },
        "concurrent_access": {
          "status": "PASS",
          "concurrent_calls": 5,
          "successful_calls": 5,
          "tool_tested": "list_channels"
        }
      },
      "compliance_score": 100.0
    },
    "s3-storage": {
      "server_name": "s3-storage",
      "timestamp": "2025-05-30T21:07:59.140271",
      "tests": {
        "server_info": {
          "status": "PASS",
          "info": {
            "name": "s3-storage",
            "version": "1.0.0",
            "capabilities": {
              "tools": true,
              "resources": false,
              "prompts": false,
              "experimental": {
                "file_storage": true,
                "backup_automation": true,
                "content_delivery": true,
                "asset_management": true
              }
            }
          }
        },
        "tool_registration": {
          "status": "PASS",
          "tool_count": 6,
          "tools": [
            "s3_list_buckets",
            "s3_list_objects",
            "s3_upload_file",
            "s3_download_file",
            "s3_delete_object",
            "s3_create_presigned_url"
          ]
        },
        "parameter_validation": {
          "status": "PASS"
        },
        "error_handling": {
          "status": "PASS",
          "error_cases": [
            {
              "test": "invalid_tool",
              "status": "PASS",
              "error_code": -32601
            }
          ]
        },
        "message_format": {
          "status": "WARN",
          "warning": "Could not test message format due to tool error",
          "error": "MCP Error -32000: AWS CLI not available or not configured"
        },
        "concurrent_access": {
          "status": "WARN",
          "concurrent_calls": 5,
          "successful_calls": 0,
          "tool_tested": "s3_list_buckets"
        }
      },
      "compliance_score": 66.66666666666666
    },
    "cloud-storage": {
      "server_name": "cloud-storage",
      "timestamp": "2025-05-30T21:07:59.219672",
      "tests": {
        "server_info": {
          "status": "PASS",
          "info": {
            "name": "cloud-storage",
            "version": "2.0.0",
            "capabilities": {
              "tools": true,
              "resources": false,
              "prompts": false,
              "experimental": {
                "multi_cloud": true,
                "encryption": true,
                "backup_automation": true,
                "compliance": true,
                "performance_optimization": true,
                "cost_management": true
              }
            }
          }
        },
        "tool_registration": {
          "status": "PASS",
          "tool_count": 10,
          "tools": [
            "storage_upload",
            "storage_download",
            "storage_list",
            "storage_delete",
            "backup_create",
            "backup_restore",
            "storage_replicate",
            "storage_analyze",
            "lifecycle_policy",
            "compliance_report"
          ]
        },
        "parameter_validation": {
          "status": "PASS"
        },
        "error_handling": {
          "status": "PASS",
          "error_cases": [
            {
              "test": "invalid_tool",
              "status": "PASS",
              "error_code": -32601
            },
            {
              "test": "missing_params",
              "status": "PASS"
            }
          ]
        },
        "message_format": {
          "status": "WARN",
          "warning": "Could not test message format due to tool error",
          "error": "MCP Error -32000: File not found: test"
        },
        "concurrent_access": {
          "status": "WARN",
          "concurrent_calls": 5,
          "successful_calls": 0,
          "tool_tested": "storage_list"
        }
      },
      "compliance_score": 66.66666666666666
    }
  },
  "server_summary": {
    "brave": {
      "compliance_score": 83.33333333333334,
      "status": "NEEDS_WORK",
      "tests_passed": 5,
      "tests_total": 6
    },
    "desktop-commander": {
      "compliance_score": 83.33333333333334,
      "status": "NEEDS_WORK",
      "tests_passed": 5,
      "tests_total": 6
    },
    "docker": {
      "compliance_score": 50.0,
      "status": "NEEDS_WORK",
      "tests_passed": 3,
      "tests_total": 6
    },
    "kubernetes": {
      "compliance_score": 50.0,
      "status": "NEEDS_WORK",
      "tests_passed": 3,
      "tests_total": 6
    },
    "azure-devops": {
      "compliance_score": 50.0,
      "status": "NEEDS_WORK",
      "tests_passed": 3,
      "tests_total": 6
    },
    "windows-system": {
      "compliance_score": 100.0,
      "status": "COMPLIANT",
      "tests_passed": 6,
      "tests_total": 6
    },
    "prometheus-monitoring": {
      "compliance_score": 50.0,
      "status": "NEEDS_WORK",
      "tests_passed": 3,
      "tests_total": 6
    },
    "security-scanner": {
      "compliance_score": 100.0,
      "status": "COMPLIANT",
      "tests_passed": 6,
      "tests_total": 6
    },
    "slack-notifications": {
      "compliance_score": 100.0,
      "status": "COMPLIANT",
      "tests_passed": 6,
      "tests_total": 6
    },
    "s3-storage": {
      "compliance_score": 66.66666666666666,
      "status": "NEEDS_WORK",
      "tests_passed": 4,
      "tests_total": 6
    },
    "cloud-storage": {
      "compliance_score": 66.66666666666666,
      "status": "NEEDS_WORK",
      "tests_passed": 4,
      "tests_total": 6
    }
  },
  "interoperability_results": {
    "status": "COMPLETE",
    "workflow_tests": [
      {
        "workflow_name": "security_scan_workflow",
        "status": "PASS",
        "successful_steps": 2,
        "total_steps": 2,
        "step_details": [
          {
            "step": "desktop-commander.read_file",
            "status": "SUCCESS",
            "result_type": "dict"
          },
          {
            "step": "security-scanner.npm_audit",
            "status": "SUCCESS",
            "result_type": "dict"
          }
        ]
      },
      {
        "workflow_name": "docker_security_workflow",
        "status": "PARTIAL",
        "successful_steps": 1,
        "total_steps": 2,
        "step_details": [
          {
            "step": "docker.docker_ps",
            "status": "FAIL",
            "error": "MCP Error -32000: Docker is not available on this system"
          },
          {
            "step": "security-scanner.docker_security_scan",
            "status": "SUCCESS",
            "result_type": "dict"
          }
        ]
      }
    ],
    "state_consistency": {
      "status": "FAIL",
      "tests": [
        {
          "test": "context_isolation",
          "status": "FAIL",
          "error": "Context isolation failed"
        },
        {
          "test": "tool_availability_consistency",
          "status": "PASS"
        }
      ]
    }
  },
  "expert_assessment": {
    "status": "UNAVAILABLE",
    "error": "Circle of Experts not available",
    "recommendations": [
      "Circle of Experts unavailable - manual review recommended"
    ]
  },
  "protocol_errors": [],
  "recommendations": [
    "Implement automated protocol compliance checking in CI/CD",
    "Add comprehensive error response testing",
    "Enhance concurrent access validation",
    "Implement protocol performance benchmarking",
    "Circle of Experts unavailable - manual review recommended"
  ],
  "certification_status": "REQUIRES_IMPROVEMENT"
}