version: '3.8'

# Log aggregation stack for Claude-Optimized Deployment Engine
# Includes Elasticsearch, Logstash, Kibana, and Filebeat

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: code-elasticsearch
    user: "1000:1000"
    environment:
      - node.name=es01
      - cluster.name=code-logs-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=true
      - xpack.security.enrollment.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      # Bind to localhost only for security - prevents external access
      - "127.0.0.1:9200:9200"
    networks:
      - logging
    healthcheck:
      test: ["CMD-SHELL", "curl -s -u elastic:${ELASTIC_PASSWORD} https://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=30s || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: code-logstash
    user: "1000:1000"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./templates:/etc/logstash/templates:ro
      - logstash_certs:/etc/logstash/certs
    ports:
      # Bind to localhost only for security - prevents external access
      - "127.0.0.1:5044:5044"  # Beats
      - "127.0.0.1:5514:5514"  # Syslog
      - "127.0.0.1:8080:8080"  # HTTP
    environment:
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_USER=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - CLUSTER_NAME=${CLUSTER_NAME:-default}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - ALERT_WEBHOOK_URL=${ALERT_WEBHOOK_URL:-http://alertmanager:8081/alerts}
    networks:
      - logging
    depends_on:
      elasticsearch:
        condition: service_healthy

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: code-kibana
    user: "1000:1000"
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
      - ./dashboards:/usr/share/kibana/dashboards:ro
    ports:
      # Bind to localhost only for security - prevents external access
      - "127.0.0.1:5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - SERVER_NAME=code-kibana
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=none
    networks:
      - logging
    depends_on:
      elasticsearch:
        condition: service_healthy

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: code-filebeat
    user: "1000:1000"
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat_data:/usr/share/filebeat/data
      - app_logs:/var/log/claude-optimized-deployment:ro
    environment:
      - ELASTICSEARCH_HOST=https://elasticsearch:9200
      - ELASTICSEARCH_USER=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - KIBANA_HOST=https://kibana:5601
      - ENVIRONMENT=${ENVIRONMENT:-development}
    networks:
      - logging
    depends_on:
      elasticsearch:
        condition: service_healthy
      logstash:
        condition: service_started

  # Optional: Curator for index lifecycle management
  curator:
    image: bitnami/elasticsearch-curator:5.8.4
    container_name: code-curator
    user: "1000:1000"
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - ./curator-actions.yml:/etc/curator/actions.yml:ro
    networks:
      - logging
    depends_on:
      elasticsearch:
        condition: service_healthy
    command: ["--config", "/etc/curator/curator.yml", "/etc/curator/actions.yml"]

  # Optional: Alertmanager for notifications
  alertmanager:
    image: prom/alertmanager:latest
    container_name: code-alertmanager
    user: "1000:1000"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    ports:
      # Bind to localhost only for security - prevents external access
      - "127.0.0.1:9093:9093"
      - "127.0.0.1:8081:8081"  # Webhook receiver
    networks:
      - logging
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.listen-address=:9093'
      - '--log.level=info'

volumes:
  elasticsearch_data:
    driver: local
  logstash_certs:
    driver: local
  filebeat_data:
    driver: local
  alertmanager_data:
    driver: local
  app_logs:
    driver: local

networks:
  logging:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16